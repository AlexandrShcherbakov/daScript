Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 53 conflicts: 1 shift/reduce
State 223 conflicts: 1 shift/reduce
State 458 conflicts: 2 shift/reduce
State 587 conflicts: 1 shift/reduce
State 803 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program top_level_reader_macro
   14        | program ';'

   15 top_level_reader_macro: expr_reader ';'

   16 optional_public_or_private_module: %empty
   17                                  | "public"
   18                                  | "private"

   19 module_name: '$'
   20            | "name"

   21 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   22 character_sequence: STRING_CHARACTER
   23                   | STRING_CHARACTER_ESC
   24                   | character_sequence STRING_CHARACTER
   25                   | character_sequence STRING_CHARACTER_ESC

   26 string_constant: "start of the string" character_sequence "end of the string"

   27 string_builder_body: %empty
   28                    | string_builder_body character_sequence
   29                    | string_builder_body "{" expr "}"

   30 string_builder: "start of the string" string_builder_body "end of the string"

   31 reader_character_sequence: STRING_CHARACTER
   32                          | reader_character_sequence STRING_CHARACTER

   33 $@1: %empty

   34 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   35 options_declaration: "options" annotation_argument_list

   36 require_declaration: "require" require_module

   37 keyword_or_name: "name"
   38                | "keyword"

   39 require_module_name: keyword_or_name
   40                    | '%' require_module_name
   41                    | require_module_name '.' keyword_or_name
   42                    | require_module_name '/' keyword_or_name

   43 require_module: require_module_name is_public_module
   44               | require_module_name "as" "name" is_public_module

   45 is_public_module: %empty
   46                 | "public"

   47 expect_declaration: "expect" expect_list

   48 expect_list: expect_error
   49            | expect_list ',' expect_error

   50 expect_error: "integer constant"
   51             | "integer constant" ':' "integer constant"

   52 expression_label: "label" "integer constant" ':'

   53 expression_goto: "goto" "label" "integer constant"
   54                | "goto" expr

   55 elif_or_static_elif: "elif"
   56                    | "static_elif"

   57 expression_else: %empty
   58                | "else" expression_block
   59                | elif_or_static_elif expr expression_block expression_else

   60 if_or_static_if: "if"
   61                | "static_if"

   62 expression_else_one_liner: %empty

   63 $@2: %empty

   64 expression_else_one_liner: "else" $@2 expression_if_one_liner

   65 expression_if_one_liner: expr
   66                        | expression_return_no_pipe
   67                        | expression_yield_no_pipe
   68                        | expression_break
   69                        | expression_continue

   70 expression_if_then_else: if_or_static_if expr expression_block expression_else

   71 $@3: %empty

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   74 expression_unsafe: "unsafe" expression_block

   75 expression_while_loop: "while" expr expression_block

   76 expression_with: "with" expr expression_block

   77 $@4: %empty

   78 expression_with_alias: "assume" "name" '=' $@4 expr

   79 annotation_argument_value: string_constant
   80                          | "name"
   81                          | "integer constant"
   82                          | "floating point constant"
   83                          | "true"
   84                          | "false"

   85 annotation_argument_value_list: annotation_argument_value
   86                               | annotation_argument_value_list ',' annotation_argument_value

   87 annotation_argument_name: "name"
   88                         | "type"
   89                         | "in"

   90 annotation_argument: annotation_argument_name '=' string_constant
   91                    | annotation_argument_name '=' "name"
   92                    | annotation_argument_name '=' "integer constant"
   93                    | annotation_argument_name '=' "floating point constant"
   94                    | annotation_argument_name '=' "true"
   95                    | annotation_argument_name '=' "false"
   96                    | annotation_argument_name
   97                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   98 annotation_argument_list: annotation_argument
   99                         | annotation_argument_list ',' annotation_argument

  100 annotation_declaration_name: name_in_namespace
  101                            | "require"
  102                            | "private"

  103 annotation_declaration_basic: annotation_declaration_name
  104                             | annotation_declaration_name '(' annotation_argument_list ')'

  105 annotation_declaration: annotation_declaration_basic
  106                       | '!' annotation_declaration
  107                       | annotation_declaration "&&" annotation_declaration
  108                       | annotation_declaration "||" annotation_declaration
  109                       | annotation_declaration "^^" annotation_declaration
  110                       | '(' annotation_declaration ')'
  111                       | "|>" annotation_declaration

  112 annotation_list: annotation_declaration
  113                | annotation_list ',' annotation_declaration

  114 optional_annotation_list: %empty
  115                         | '[' annotation_list ']'

  116 optional_function_argument_list: %empty
  117                                | '(' ')'
  118                                | '(' function_argument_list ')'

  119 optional_function_type: %empty
  120                       | ':' type_declaration

  121 function_name: "name"
  122              | "operator" '!'
  123              | "operator" '~'
  124              | "operator" "+="
  125              | "operator" "-="
  126              | "operator" "*="
  127              | "operator" "/="
  128              | "operator" "%="
  129              | "operator" "&="
  130              | "operator" "|="
  131              | "operator" "^="
  132              | "operator" "&&="
  133              | "operator" "||="
  134              | "operator" "^^="
  135              | "operator" "&&"
  136              | "operator" "||"
  137              | "operator" "^^"
  138              | "operator" '+'
  139              | "operator" '-'
  140              | "operator" '*'
  141              | "operator" '/'
  142              | "operator" '%'
  143              | "operator" '<'
  144              | "operator" '>'
  145              | "operator" ".."
  146              | "operator" "=="
  147              | "operator" "!="
  148              | "operator" "<="
  149              | "operator" ">="
  150              | "operator" '&'
  151              | "operator" '|'
  152              | "operator" '^'
  153              | "++" "operator"
  154              | "--" "operator"
  155              | "operator" "++"
  156              | "operator" "--"
  157              | "operator" "<<"
  158              | "operator" ">>"
  159              | "operator" "<<="
  160              | "operator" ">>="
  161              | "operator" "<<<"
  162              | "operator" ">>>"
  163              | "operator" "<<<="
  164              | "operator" ">>>="
  165              | "operator" '[' ']'
  166              | "operator" "?[" ']'
  167              | "operator" '.'
  168              | "operator" "?."
  169              | "operator" '.' "name"
  170              | "operator" '.' "name" ":="
  171              | "operator" "?." "name"
  172              | "operator" ":="
  173              | "operator" "delete"
  174              | "operator" "??"
  175              | "operator" "is"
  176              | "operator" "as"
  177              | "operator" "is" "name"
  178              | "operator" "as" "name"
  179              | "operator" '?' "as"
  180              | "operator" '?' "as" "name"
  181              | "bool"
  182              | "string"
  183              | "int"
  184              | "int2"
  185              | "int3"
  186              | "int4"
  187              | "uint"
  188              | "uint2"
  189              | "uint3"
  190              | "uint4"
  191              | "float"
  192              | "float2"
  193              | "float3"
  194              | "float4"
  195              | "range"
  196              | "urange"
  197              | "range64"
  198              | "urange64"
  199              | "int64"
  200              | "uint64"
  201              | "double"
  202              | "int8"
  203              | "uint8"
  204              | "int16"
  205              | "uint16"

  206 global_function_declaration: optional_annotation_list "def" function_declaration

  207 optional_public_or_private_function: %empty
  208                                    | "private"
  209                                    | "public"

  210 function_declaration_header: function_name optional_function_argument_list optional_function_type

  211 $@5: %empty

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  213 expression_block: '{' expressions '}'
  214                 | '{' expressions '}' "finally" '{' expressions '}'

  215 expression_any: ';'
  216               | expr_pipe
  217               | expr_keyword
  218               | expr_assign_pipe
  219               | expr_assign ';'
  220               | expression_delete ';'
  221               | expression_let
  222               | expression_while_loop
  223               | expression_unsafe
  224               | expression_with
  225               | expression_with_alias
  226               | expression_for_loop
  227               | expression_break ';'
  228               | expression_continue ';'
  229               | expression_return
  230               | expression_yield
  231               | expression_if_then_else
  232               | expression_try_catch
  233               | expression_label ';'
  234               | expression_goto ';'
  235               | "pass" ';'

  236 expressions: %empty
  237            | expressions expression_any
  238            | expressions error

  239 expr_keyword: "keyword" expr expression_block

  240 $@6: %empty

  241 $@7: %empty

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr

  243 expr_pipe: expr_assign " <|" expr_block
  244          | "@ <|" expr_block
  245          | "@@ <|" expr_block
  246          | "$ <|" expr_block

  247 name_in_namespace: "name"
  248                  | "name" "::" "name"
  249                  | "::" "name"

  250 expression_delete: "delete" expr
  251                  | "delete" "explicit" expr

  252 $@8: %empty

  253 $@9: %empty

  254 new_type_declaration: '<' $@8 type_declaration '>' $@9
  255                     | structure_type_declaration

  256 expr_new: "new" new_type_declaration
  257         | "new" new_type_declaration '(' ')'
  258         | "new" new_type_declaration '(' expr_list ')'
  259         | "new" make_decl

  260 expression_break: "break"

  261 expression_continue: "continue"

  262 expression_return_no_pipe: "return"
  263                          | "return" expr
  264                          | "return" "<-" expr

  265 expression_return: expression_return_no_pipe ';'
  266                  | "return" expr_pipe
  267                  | "return" "<-" expr_pipe

  268 expression_yield_no_pipe: "yield" expr
  269                         | "yield" "<-" expr

  270 expression_yield: expression_yield_no_pipe ';'
  271                 | "yield" expr_pipe
  272                 | "yield" "<-" expr_pipe

  273 expression_try_catch: "try" expression_block "recover" expression_block

  274 kwd_let: "let"
  275        | "var"

  276 optional_in_scope: "inscope"
  277                  | %empty

  278 expression_let: kwd_let optional_in_scope let_variable_declaration

  279 $@10: %empty

  280 $@11: %empty

  281 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr

  282 $@12: %empty

  283 $@13: %empty

  284 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr

  285 $@14: %empty

  286 $@15: %empty

  287 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr

  288 $@16: %empty

  289 $@17: %empty

  290 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17

  291 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  292               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  293               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  294 expr_list: expr
  295          | expr_list ',' expr

  296 block_or_simple_block: expression_block
  297                      | "=>" expr
  298                      | "=>" "<-" expr

  299 block_or_lambda: '$'
  300                | '@'
  301                | '@' '@'

  302 capture_entry: '&' "name"
  303              | '=' "name"
  304              | "<-" "name"
  305              | ":=" "name"

  306 capture_list: capture_entry
  307             | capture_list ',' capture_entry

  308 optional_capture_list: %empty
  309                      | "[[" capture_list ']' ']'

  310 expr_block: expression_block
  311           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  312 expr_numeric_const: "integer constant"
  313                   | "unsigned integer constant"
  314                   | "long integer constant"
  315                   | "unsigned long integer constant"
  316                   | "unsigned int8 constant"
  317                   | "floating point constant"
  318                   | "double constant"

  319 expr_assign: expr
  320            | expr '=' expr
  321            | expr "<-" expr
  322            | expr ":=" expr
  323            | expr "&=" expr
  324            | expr "|=" expr
  325            | expr "^=" expr
  326            | expr "&&=" expr
  327            | expr "||=" expr
  328            | expr "^^=" expr
  329            | expr "+=" expr
  330            | expr "-=" expr
  331            | expr "*=" expr
  332            | expr "/=" expr
  333            | expr "%=" expr
  334            | expr "<<=" expr
  335            | expr ">>=" expr
  336            | expr "<<<=" expr
  337            | expr ">>>=" expr

  338 expr_assign_pipe: expr '=' "@ <|" expr_block
  339                 | expr '=' "@@ <|" expr_block
  340                 | expr '=' "$ <|" expr_block
  341                 | expr "<-" "@ <|" expr_block
  342                 | expr "<-" "@@ <|" expr_block
  343                 | expr "<-" "$ <|" expr_block

  344 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  345                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  346 expr_method_call: expr "->" "name" '(' ')'
  347                 | expr "->" "name" '(' expr_list ')'

  348 func_addr_name: name_in_namespace
  349               | "$i" '(' expr ')'

  350 func_addr_expr: '@' '@' func_addr_name

  351 $@18: %empty

  352 $@19: %empty

  353 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name

  354 $@20: %empty

  355 $@21: %empty

  356 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

  357 expr_field: expr '.' "name"
  358           | expr '.' '.' "name"

  359 $@22: %empty

  360 $@23: %empty

  361 expr_field: expr '.' $@22 error $@23

  362 expr: "null"
  363     | name_in_namespace
  364     | expr_numeric_const
  365     | expr_reader
  366     | string_builder
  367     | make_decl
  368     | "true"
  369     | "false"
  370     | expr_field
  371     | expr_mtag
  372     | '!' expr
  373     | '~' expr
  374     | '+' expr
  375     | '-' expr
  376     | expr "<<" expr
  377     | expr ">>" expr
  378     | expr "<<<" expr
  379     | expr ">>>" expr
  380     | expr '+' expr
  381     | expr '-' expr
  382     | expr '*' expr
  383     | expr '/' expr
  384     | expr '%' expr
  385     | expr '<' expr
  386     | expr '>' expr
  387     | expr "==" expr
  388     | expr "!=" expr
  389     | expr "<=" expr
  390     | expr ">=" expr
  391     | expr '&' expr
  392     | expr '|' expr
  393     | expr '^' expr
  394     | expr "&&" expr
  395     | expr "||" expr
  396     | expr "^^" expr
  397     | expr ".." expr
  398     | "++" expr
  399     | "--" expr
  400     | expr "++"
  401     | expr "--"
  402     | '(' expr ')'
  403     | expr '[' expr ']'
  404     | expr '.' '[' expr ']'
  405     | expr "?[" expr ']'
  406     | expr '.' "?[" expr ']'
  407     | expr "?." "name"
  408     | expr '.' "?." "name"
  409     | func_addr_expr
  410     | name_in_namespace '(' ')'
  411     | name_in_namespace '(' expr_list ')'
  412     | basic_type_declaration '(' ')'
  413     | basic_type_declaration '(' expr_list ')'
  414     | '*' expr
  415     | "deref" '(' expr ')'
  416     | "addr" '(' expr ')'
  417     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  418     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  419     | expr "??" expr
  420     | expr '?' expr ':' expr

  421 $@24: %empty

  422 $@25: %empty

  423 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr "is" basic_type_declaration
  425     | expr "is" "name"
  426     | expr "as" "name"

  427 $@26: %empty

  428 $@27: %empty

  429 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr "as" basic_type_declaration
  431     | expr '?' "as" "name"

  432 $@28: %empty

  433 $@29: %empty

  434 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr '?' "as" basic_type_declaration
  436     | expr_type_info
  437     | expr_type_decl
  438     | expr_cast
  439     | expr_new
  440     | expr_method_call
  441     | expr_named_call
  442     | expr_block
  443     | expr "<|" expr
  444     | expr "|>" expr
  445     | name_in_namespace "name"
  446     | "unsafe" '(' expr ')'
  447     | expression_keyword

  448 expr_mtag: "$$" '(' expr ')'
  449          | "$i" '(' expr ')'
  450          | "$v" '(' expr ')'
  451          | "$b" '(' expr ')'
  452          | "$a" '(' expr ')'
  453          | "..."
  454          | "$c" '(' expr ')' '(' ')'
  455          | "$c" '(' expr ')' '(' expr_list ')'
  456          | expr '.' "$f" '(' expr ')'
  457          | expr "?." "$f" '(' expr ')'
  458          | expr '.' '.' "$f" '(' expr ')'
  459          | expr '.' "?." "$f" '(' expr ')'
  460          | expr "as" "$f" '(' expr ')'
  461          | expr '?' "as" "$f" '(' expr ')'
  462          | expr "is" "$f" '(' expr ')'
  463          | '@' '@' "$c" '(' expr ')'

  464 optional_field_annotation: %empty
  465                          | "[[" annotation_argument_list ']' ']'

  466 optional_override: %empty
  467                  | "override"
  468                  | "sealed"

  469 optional_constant: %empty
  470                  | "const"

  471 optional_public_or_private_member_variable: %empty
  472                                           | "public"
  473                                           | "private"

  474 optional_static_member_variable: %empty
  475                                | "static"

  476 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  477 struct_variable_declaration_list: %empty

  478 $@30: %empty

  479 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';'

  480 $@31: %empty

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'

  482 $@32: %empty

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  484                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  485 function_argument_declaration: optional_field_annotation variable_declaration
  486                              | optional_field_annotation "var" variable_declaration
  487                              | "$a" '(' expr ')'

  488 function_argument_list: function_argument_declaration
  489                       | function_argument_list ';' function_argument_declaration

  490 tuple_type: type_declaration
  491           | "name" ':' type_declaration

  492 tuple_type_list: tuple_type
  493                | tuple_type_list ';' tuple_type

  494 variant_type: "name" ':' type_declaration

  495 variant_type_list: variant_type
  496                  | variant_type_list ';' variant_type

  497 copy_or_move: '='
  498             | "<-"

  499 variable_declaration: variable_name_with_pos_list
  500                     | variable_name_with_pos_list '&'
  501                     | variable_name_with_pos_list ':' type_declaration
  502                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  503                     | variable_name_with_pos_list copy_or_move expr
  504                     | variable_name_with_pos_list copy_or_move expr_pipe

  505 copy_or_move_or_clone: '='
  506                      | "<-"
  507                      | ":="

  508 optional_ref: %empty
  509             | '&'

  510 let_variable_name_with_pos_list: "name"
  511                                | "$i" '(' expr ')'
  512                                | "name" "aka" "name"
  513                                | let_variable_name_with_pos_list ',' "name"
  514                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  515 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  516                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  517                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  518                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  519                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  520 global_variable_declaration_list: %empty

  521 $@33: %empty

  522 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration

  523 optional_shared: %empty
  524                | "shared"

  525 optional_public_or_private_variable: %empty
  526                                    | "private"
  527                                    | "public"

  528 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  529 $@34: %empty

  530 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

  531 enum_list: %empty
  532          | enum_list ';'
  533          | enum_list "name" ';'
  534          | enum_list "name" '=' expr ';'

  535 $@35: %empty

  536 single_alias: "name" $@35 '=' type_declaration

  537 alias_list: single_alias ';'
  538           | alias_list single_alias ';'

  539 alias_declaration: "typedef" '{' alias_list '}'

  540 $@36: %empty

  541 alias_declaration: "typedef" $@36 single_alias ';'

  542 optional_public_or_private_enum: %empty
  543                                | "private"
  544                                | "public"

  545 enum_name: "name"

  546 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  547                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  548 optional_structure_parent: %empty
  549                          | ':' name_in_namespace

  550 optional_sealed: %empty
  551                | "sealed"

  552 structure_name: optional_sealed "name" optional_structure_parent

  553 class_or_struct: "class"
  554                | "struct"

  555 optional_public_or_private_structure: %empty
  556                                     | "private"
  557                                     | "public"

  558 $@37: %empty

  559 $@38: %empty

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list '}'

  561 variable_name_with_pos_list: "name"
  562                            | "$i" '(' expr ')'
  563                            | "name" "aka" "name"
  564                            | variable_name_with_pos_list ',' "name"
  565                            | variable_name_with_pos_list ',' "name" "aka" "name"

  566 basic_type_declaration: "bool"
  567                       | "string"
  568                       | "int"
  569                       | "int8"
  570                       | "int16"
  571                       | "int64"
  572                       | "int2"
  573                       | "int3"
  574                       | "int4"
  575                       | "uint"
  576                       | "uint8"
  577                       | "uint16"
  578                       | "uint64"
  579                       | "uint2"
  580                       | "uint3"
  581                       | "uint4"
  582                       | "float"
  583                       | "float2"
  584                       | "float3"
  585                       | "float4"
  586                       | "void"
  587                       | "range"
  588                       | "urange"
  589                       | "range64"
  590                       | "urange64"
  591                       | "double"
  592                       | "bitfield"

  593 enum_basic_type_declaration: "int"
  594                            | "int8"
  595                            | "int16"
  596                            | "uint"
  597                            | "uint8"
  598                            | "uint16"

  599 structure_type_declaration: name_in_namespace

  600 auto_type_declaration: "auto"
  601                      | "auto" '(' "name" ')'
  602                      | "$t" '(' expr ')'

  603 bitfield_bits: "name"
  604              | bitfield_bits ';' "name"

  605 $@39: %empty

  606 $@40: %empty

  607 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40

  608 table_type_pair: type_declaration
  609                | type_declaration ';' type_declaration

  610 type_declaration_no_options: basic_type_declaration
  611                            | auto_type_declaration
  612                            | bitfield_type_declaration
  613                            | structure_type_declaration
  614                            | type_declaration_no_options '[' expr ']'
  615                            | type_declaration_no_options '[' ']'
  616                            | type_declaration_no_options '-' '[' ']'
  617                            | type_declaration_no_options "explicit"
  618                            | type_declaration_no_options "const"
  619                            | type_declaration_no_options '-' "const"
  620                            | type_declaration_no_options '&'
  621                            | type_declaration_no_options '-' '&'
  622                            | type_declaration_no_options '#'
  623                            | type_declaration_no_options "implicit"
  624                            | type_declaration_no_options '-' '#'
  625                            | type_declaration_no_options "==" "const"
  626                            | type_declaration_no_options "==" '&'
  627                            | type_declaration_no_options '?'

  628 $@41: %empty

  629 $@42: %empty

  630 type_declaration_no_options: "smart_ptr" '<' $@41 type_declaration '>' $@42
  631                            | type_declaration_no_options "??"

  632 $@43: %empty

  633 $@44: %empty

  634 type_declaration_no_options: "array" '<' $@43 type_declaration '>' $@44

  635 $@45: %empty

  636 $@46: %empty

  637 type_declaration_no_options: "table" '<' $@45 table_type_pair '>' $@46

  638 $@47: %empty

  639 $@48: %empty

  640 type_declaration_no_options: "iterator" '<' $@47 type_declaration '>' $@48
  641                            | "block"

  642 $@49: %empty

  643 $@50: %empty

  644 type_declaration_no_options: "block" '<' $@49 type_declaration '>' $@50

  645 $@51: %empty

  646 $@52: %empty

  647 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list optional_function_type '>' $@52
  648                            | "function"

  649 $@53: %empty

  650 $@54: %empty

  651 type_declaration_no_options: "function" '<' $@53 type_declaration '>' $@54

  652 $@55: %empty

  653 $@56: %empty

  654 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list optional_function_type '>' $@56
  655                            | "lambda"

  656 $@57: %empty

  657 $@58: %empty

  658 type_declaration_no_options: "lambda" '<' $@57 type_declaration '>' $@58

  659 $@59: %empty

  660 $@60: %empty

  661 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list optional_function_type '>' $@60

  662 $@61: %empty

  663 $@62: %empty

  664 type_declaration_no_options: "tuple" '<' $@61 tuple_type_list '>' $@62

  665 $@63: %empty

  666 $@64: %empty

  667 type_declaration_no_options: "variant" '<' $@63 variant_type_list '>' $@64

  668 type_declaration: type_declaration_no_options
  669                 | type_declaration '|' type_declaration_no_options
  670                 | type_declaration '|' '#'

  671 $@65: %empty

  672 $@66: %empty

  673 variant_alias_declaration: "variant" $@65 "name" $@66 '{' variant_type_list ';' '}'

  674 $@67: %empty

  675 $@68: %empty

  676 bitfield_alias_declaration: "bitfield" $@67 "name" $@68 '{' bitfield_bits ';' '}'

  677 make_decl: make_struct_decl
  678          | make_dim_decl
  679          | make_table_decl
  680          | array_comprehension

  681 make_struct_fields: "name" copy_or_move expr
  682                   | "name" ":=" expr
  683                   | make_struct_fields ',' "name" copy_or_move expr
  684                   | make_struct_fields ',' "name" ":=" expr
  685                   | "$f" '(' expr ')' copy_or_move expr
  686                   | "$f" '(' expr ')' ":=" expr
  687                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  688                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  689 make_struct_dim: make_struct_fields
  690                | make_struct_dim ';' make_struct_fields

  691 optional_block: %empty
  692               | "where" expr_block

  693 optional_trailing_semicolon_cur_cur: '}' '}'
  694                                    | ";}}"

  695 optional_trailing_semicolon_cur_sqr: '}' ']'
  696                                    | ";}]"

  697 optional_trailing_semicolon_sqr_sqr: ']' ']'
  698                                    | ";]]"

  699 optional_trailing_delim_sqr_sqr: ']' ']'
  700                                | ";]]"
  701                                | ",]]"

  702 optional_trailing_delim_cur_sqr: '}' ']'
  703                                | ";}]"
  704                                | ",}]"

  705 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  706                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  707                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  708                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  709                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  710                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  711 make_tuple: expr
  712           | expr "=>" expr
  713           | make_tuple ',' expr

  714 make_map_tuple: expr "=>" expr
  715               | expr

  716 make_dim: make_tuple
  717         | make_dim ';' make_tuple

  718 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  719              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  720 make_table: make_map_tuple
  721           | make_table ';' make_map_tuple

  722 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur

  723 array_comprehension_where: %empty
  724                          | ';' "where" expr

  725 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  726                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 106 122 372
    '#' (35) 622 624 670
    '$' (36) 19 299
    '%' (37) 34 40 142 384
    '&' (38) 150 302 391 500 509 620 621 626
    '(' (40) 97 104 110 117 118 257 258 291 292 293 344 345 346 347 349 402 410 411 412 413 415 416 417 418 446 448 449 450 451 452 454 455 456 457 458 459 460 461 462 463 487 511 562 601 602 685 686 687 688 707 708 710
    ')' (41) 97 104 110 117 118 257 258 291 292 293 344 345 346 347 349 402 410 411 412 413 415 416 417 418 446 448 449 450 451 452 454 455 456 457 458 459 460 461 462 463 487 511 562 601 602 685 686 687 688 707 708 710
    '*' (42) 140 382 414
    '+' (43) 138 374 380
    ',' (44) 49 86 99 113 295 307 345 513 514 564 565 683 684 687 688 713
    '-' (45) 139 375 381 616 619 621 624
    '.' (46) 41 167 169 170 357 358 361 404 406 408 456 458 459
    '/' (47) 42 141 383
    ':' (58) 51 52 120 420 491 494 501 502 515 516 517 547 549
    ';' (59) 14 15 72 73 215 219 220 227 228 233 234 235 265 270 293 479 481 484 489 493 496 515 516 518 532 533 534 537 538 541 604 609 673 676 690 717 721 724 725 726
    '<' (60) 143 242 254 281 284 287 290 292 293 353 356 385 417 418 423 429 434 607 630 634 637 640 644 647 651 654 658 661 664 667
    '=' (61) 78 90 91 92 93 94 95 97 303 320 338 339 340 497 505 534 536
    '>' (62) 144 242 254 281 284 287 290 292 293 353 356 386 417 418 423 429 434 607 630 634 637 640 644 647 651 654 658 661 664 667
    '?' (63) 179 180 420 431 434 435 461 627
    '@' (64) 300 301 350 353 356 463
    '[' (91) 115 165 344 345 403 404 484 614 615 616
    ']' (93) 115 165 166 309 344 345 403 404 405 406 465 484 614 615 616 695 697 699 702 725 726
    '^' (94) 152 393
    '{' (123) 213 214 528 539 546 547 560 673 676
    '|' (124) 151 392 669 670
    '}' (125) 213 214 528 539 546 547 560 673 676 693 695 702 726
    '~' (126) 123 373
    error (256) 238 361
    "lexer error" (258)
    "struct" (259) 554
    "class" (260) 553
    "let" (261) 274
    "def" (262) 206 481 483
    "while" (263) 75
    "if" (264) 60 72
    "static_if" (265) 61
    "else" (266) 58 64
    "for" (267) 73 725 726
    "recover" (268) 273
    "true" (269) 83 94 368
    "false" (270) 84 95 369
    "new" (271) 256 257 258 259
    "typeinfo" (272) 291 292 293
    "type" (273) 88 290 423 429 434
    "in" (274) 73 89 725 726
    "is" (275) 175 177 423 424 425 462
    "as" (276) 44 176 178 179 180 426 429 430 431 434 435 460 461
    "elif" (277) 55
    "static_elif" (278) 56
    "array" (279) 634
    "return" (280) 262 263 264 266 267
    "null" (281) 362
    "break" (282) 260
    "try" (283) 273
    "options" (284) 35
    "table" (285) 637
    "expect" (286) 47
    "const" (287) 470 618 619 625
    "require" (288) 36 101
    "operator" (289) 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
    "enum" (290) 546 547
    "finally" (291) 214
    "delete" (292) 173 250 251
    "deref" (293) 415
    "typedef" (294) 539 541
    "with" (295) 76
    "aka" (296) 512 514 563 565
    "assume" (297) 78
    "cast" (298) 281
    "override" (299) 467
    "abstract" (300) 481
    "upcast" (301) 284
    "iterator" (302) 640
    "var" (303) 275 486
    "addr" (304) 416
    "continue" (305) 261
    "where" (306) 692 724
    "pass" (307) 235
    "reinterpret" (308) 287
    "module" (309) 21
    "public" (310) 17 46 209 472 527 544 557
    "label" (311) 52 53
    "goto" (312) 53 54
    "implicit" (313) 623
    "explicit" (314) 251 617
    "shared" (315) 524
    "private" (316) 18 102 208 473 526 543 556
    "smart_ptr" (317) 630
    "unsafe" (318) 74 446
    "inscope" (319) 276
    "static" (320) 475
    "bool" (321) 181 566
    "void" (322) 586
    "string" (323) 182 567
    "auto" (324) 600 601
    "int" (325) 183 568 593
    "int2" (326) 184 572
    "int3" (327) 185 573
    "int4" (328) 186 574
    "uint" (329) 187 575 596
    "bitfield" (330) 592 607 676
    "uint2" (331) 188 579
    "uint3" (332) 189 580
    "uint4" (333) 190 581
    "float" (334) 191 582
    "float2" (335) 192 583
    "float3" (336) 193 584
    "float4" (337) 194 585
    "range" (338) 195 587
    "urange" (339) 196 588
    "range64" (340) 197 589
    "urange64" (341) 198 590
    "block" (342) 641 644 647
    "int64" (343) 199 571
    "uint64" (344) 200 578
    "double" (345) 201 591
    "function" (346) 648 651 654
    "lambda" (347) 655 658 661
    "int8" (348) 202 569 594
    "uint8" (349) 203 576 597
    "int16" (350) 204 570 595
    "uint16" (351) 205 577 598
    "tuple" (352) 664
    "variant" (353) 667 673
    "generator" (354) 417 418
    "yield" (355) 268 269 271 272
    "sealed" (356) 468 551
    "+=" (357) 124 329
    "-=" (358) 125 330
    "/=" (359) 127 332
    "*=" (360) 126 331
    "%=" (361) 128 333
    "&=" (362) 129 323
    "|=" (363) 130 324
    "^=" (364) 131 325
    "<<" (365) 157 376
    ">>" (366) 158 377
    "++" (367) 153 155 398 400
    "--" (368) 154 156 399 401
    "<=" (369) 148 389
    "<<=" (370) 159 334
    ">>=" (371) 160 335
    ">=" (372) 149 390
    "==" (373) 146 387 625 626
    "!=" (374) 147 388
    "->" (375) 346 347
    "<-" (376) 264 267 269 272 298 304 321 341 342 343 498 506
    "??" (377) 174 419 631
    "?." (378) 168 171 407 408 457 459
    "?[" (379) 166 405 406
    "<|" (380) 443
    " <|" (381) 243
    "$ <|" (382) 246 340 343
    "@ <|" (383) 244 338 341
    "@@ <|" (384) 245 339 342
    "|>" (385) 111 444
    ":=" (386) 170 172 305 322 507 682 684 686 688
    "<<<" (387) 161 378
    ">>>" (388) 162 379
    "<<<=" (389) 163 336
    ">>>=" (390) 164 337
    "=>" (391) 297 298 712 714
    "::" (392) 248 249
    "&&" (393) 107 135 394
    "||" (394) 108 136 395
    "^^" (395) 109 137 396
    "&&=" (396) 132 326
    "||=" (397) 133 327
    "^^=" (398) 134 328
    ".." (399) 145 397
    "$$" (400) 448
    "$i" (401) 349 449 511 562
    "$v" (402) 450
    "$b" (403) 451
    "$a" (404) 452 487
    "$t" (405) 602
    "$c" (406) 454 455 463
    "$f" (407) 456 457 458 459 460 461 462 685 686 687 688
    "..." (408) 453
    "[[" (409) 309 465 705 706 707 708 718 725
    "[{" (410) 709 710 719 726
    "{{" (411) 722
    "integer constant" <i> (412) 50 51 52 53 81 92 312
    "long integer constant" <i64> (413) 314
    "unsigned integer constant" <ui> (414) 313
    "unsigned long integer constant" <ui64> (415) 315
    "unsigned int8 constant" <ui> (416) 316
    "floating point constant" <fd> (417) 82 93 317
    "double constant" <d> (418) 318
    "name" <s> (419) 20 37 44 78 80 87 91 121 169 170 171 177 178 180 247 248 249 292 293 302 303 304 305 346 347 357 358 407 408 425 426 431 445 491 494 510 512 513 514 533 534 536 545 552 561 563 564 565 601 603 604 673 676 681 682 683 684
    "keyword" <s> (420) 38 239 242
    "start of the string" (421) 26 30
    STRING_CHARACTER <ch> (422) 22 24 31 32
    STRING_CHARACTER_ESC (423) 23 25
    "end of the string" (424) 26 30
    "{" (425) 29
    "}" (426) 29
    "end of failed eader macro" (427)
    ";}}" (428) 694
    ";}]" (429) 696 703
    ";]]" (430) 698 700
    ",]]" (431) 701
    ",}]" (432) 704
    UNARY_MINUS (433)
    UNARY_PLUS (434)
    PRE_INC (435)
    PRE_DEC (436)
    POST_INC (437)
    POST_DEC (438)
    DEREF (439)


Nonterminals, with rules where they appear

    $accept (212)
        on left: 0
    program (213)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14
    top_level_reader_macro (214)
        on left: 15
        on right: 13
    optional_public_or_private_module <b> (215)
        on left: 16 17 18
        on right: 21
    module_name <s> (216)
        on left: 19 20
        on right: 21
    module_declaration (217)
        on left: 21
        on right: 2
    character_sequence <s> (218)
        on left: 22 23 24 25
        on right: 24 25 26 28
    string_constant <s> (219)
        on left: 26
        on right: 79 90
    string_builder_body <pExpression> (220)
        on left: 27 28 29
        on right: 28 29 30
    string_builder <pExpression> (221)
        on left: 30
        on right: 366
    reader_character_sequence (222)
        on left: 31 32
        on right: 32 34
    expr_reader <pExpression> (223)
        on left: 34
        on right: 15 365
    $@1 (224)
        on left: 33
        on right: 34
    options_declaration (225)
        on left: 35
        on right: 9
    require_declaration (226)
        on left: 36
        on right: 8
    keyword_or_name <s> (227)
        on left: 37 38
        on right: 39 41 42
    require_module_name <s> (228)
        on left: 39 40 41 42
        on right: 40 41 42 43 44
    require_module (229)
        on left: 43 44
        on right: 36
    is_public_module <b> (230)
        on left: 45 46
        on right: 43 44
    expect_declaration (231)
        on left: 47
        on right: 7
    expect_list (232)
        on left: 48 49
        on right: 47 49
    expect_error (233)
        on left: 50 51
        on right: 48 49
    expression_label <pExpression> (234)
        on left: 52
        on right: 233
    expression_goto <pExpression> (235)
        on left: 53 54
        on right: 234
    elif_or_static_elif <b> (236)
        on left: 55 56
        on right: 59
    expression_else <pExpression> (237)
        on left: 57 58 59
        on right: 59 70
    if_or_static_if <b> (238)
        on left: 60 61
        on right: 70
    expression_else_one_liner <pExpression> (239)
        on left: 62 64
        on right: 72
    $@2 (240)
        on left: 63
        on right: 64
    expression_if_one_liner <pExpression> (241)
        on left: 65 66 67 68 69
        on right: 64 72
    expression_if_then_else <pExpression> (242)
        on left: 70 72
        on right: 231
    $@3 (243)
        on left: 71
        on right: 72
    expression_for_loop <pExpression> (244)
        on left: 73
        on right: 226
    expression_unsafe <pExpression> (245)
        on left: 74
        on right: 223
    expression_while_loop <pExpression> (246)
        on left: 75
        on right: 222
    expression_with <pExpression> (247)
        on left: 76
        on right: 224
    expression_with_alias <pExpression> (248)
        on left: 78
        on right: 225
    $@4 (249)
        on left: 77
        on right: 78
    annotation_argument_value <aa> (250)
        on left: 79 80 81 82 83 84
        on right: 85 86
    annotation_argument_value_list <aaList> (251)
        on left: 85 86
        on right: 86 97
    annotation_argument_name <s> (252)
        on left: 87 88 89
        on right: 90 91 92 93 94 95 96 97
    annotation_argument <aa> (253)
        on left: 90 91 92 93 94 95 96 97
        on right: 98 99
    annotation_argument_list <aaList> (254)
        on left: 98 99
        on right: 35 99 104 465
    annotation_declaration_name <s> (255)
        on left: 100 101 102
        on right: 103 104
    annotation_declaration_basic <fa> (256)
        on left: 103 104
        on right: 105
    annotation_declaration <fa> (257)
        on left: 105 106 107 108 109 110 111
        on right: 106 107 108 109 110 111 112 113
    annotation_list <faList> (258)
        on left: 112 113
        on right: 113 115 484
    optional_annotation_list <faList> (259)
        on left: 114 115
        on right: 206 311 481 483 546 547 560
    optional_function_argument_list <pVarDeclList> (260)
        on left: 116 117 118
        on right: 210 311 356 647 654 661
    optional_function_type <pTypeDecl> (261)
        on left: 119 120
        on right: 210 311 356 647 654 661
    function_name <s> (262)
        on left: 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205
        on right: 210
    global_function_declaration (263)
        on left: 206
        on right: 6
    optional_public_or_private_function <b> (264)
        on left: 207 208 209
        on right: 212
    function_declaration_header <pFuncDecl> (265)
        on left: 210
        on right: 212 481 483
    function_declaration <pFuncDecl> (266)
        on left: 212
        on right: 206
    $@5 (267)
        on left: 211
        on right: 212
    expression_block <pExpression> (268)
        on left: 213 214
        on right: 58 59 70 73 74 75 76 212 239 273 296 310 483
    expression_any <pExpression> (269)
        on left: 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235
        on right: 237
    expressions <pExpression> (270)
        on left: 236 237 238
        on right: 213 214 237 238
    expr_keyword <pExpression> (271)
        on left: 239
        on right: 217
    expression_keyword <pExpression> (272)
        on left: 242
        on right: 447
    $@6 (273)
        on left: 240
        on right: 242
    $@7 (274)
        on left: 241
        on right: 242
    expr_pipe <pExpression> (275)
        on left: 243 244 245 246
        on right: 216 266 267 271 272 504 517 519
    name_in_namespace <s> (276)
        on left: 247 248 249
        on right: 34 100 291 292 293 344 345 348 363 410 411 445 549 599
    expression_delete <pExpression> (277)
        on left: 250 251
        on right: 220
    new_type_declaration <pTypeDecl> (278)
        on left: 254 255
        on right: 256 257 258
    $@8 (279)
        on left: 252
        on right: 254
    $@9 (280)
        on left: 253
        on right: 254
    expr_new <pExpression> (281)
        on left: 256 257 258 259
        on right: 439
    expression_break <pExpression> (282)
        on left: 260
        on right: 68 227
    expression_continue <pExpression> (283)
        on left: 261
        on right: 69 228
    expression_return_no_pipe <pExpression> (284)
        on left: 262 263 264
        on right: 66 265
    expression_return <pExpression> (285)
        on left: 265 266 267
        on right: 229
    expression_yield_no_pipe <pExpression> (286)
        on left: 268 269
        on right: 67 270
    expression_yield <pExpression> (287)
        on left: 270 271 272
        on right: 230
    expression_try_catch <pExpression> (288)
        on left: 273
        on right: 232
    kwd_let <b> (289)
        on left: 274 275
        on right: 278 528 530
    optional_in_scope <b> (290)
        on left: 276 277
        on right: 278
    expression_let <pExpression> (291)
        on left: 278
        on right: 221
    expr_cast <pExpression> (292)
        on left: 281 284 287
        on right: 438
    $@10 (293)
        on left: 279
        on right: 281
    $@11 (294)
        on left: 280
        on right: 281
    $@12 (295)
        on left: 282
        on right: 284
    $@13 (296)
        on left: 283
        on right: 284
    $@14 (297)
        on left: 285
        on right: 287
    $@15 (298)
        on left: 286
        on right: 287
    expr_type_decl <pExpression> (299)
        on left: 290
        on right: 437
    $@16 (300)
        on left: 288
        on right: 290
    $@17 (301)
        on left: 289
        on right: 290
    expr_type_info <pExpression> (302)
        on left: 291 292 293
        on right: 436
    expr_list <pExpression> (303)
        on left: 294 295
        on right: 73 258 295 345 347 411 413 455 725 726
    block_or_simple_block <pExpression> (304)
        on left: 296 297 298
        on right: 311
    block_or_lambda <i> (305)
        on left: 299 300 301
        on right: 311
    capture_entry <pCapt> (306)
        on left: 302 303 304 305
        on right: 306 307
    capture_list <pCaptList> (307)
        on left: 306 307
        on right: 307 309
    optional_capture_list <pCaptList> (308)
        on left: 308 309
        on right: 311 417 418
    expr_block <pExpression> (309)
        on left: 310 311
        on right: 243 244 245 246 338 339 340 341 342 343 442 692
    expr_numeric_const <pExpression> (310)
        on left: 312 313 314 315 316 317 318
        on right: 364
    expr_assign <pExpression> (311)
        on left: 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337
        on right: 219 243
    expr_assign_pipe <pExpression> (312)
        on left: 338 339 340 341 342 343
        on right: 218
    expr_named_call <pExpression> (313)
        on left: 344 345
        on right: 441
    expr_method_call <pExpression> (314)
        on left: 346 347
        on right: 440
    func_addr_name <pExpression> (315)
        on left: 348 349
        on right: 350 353 356
    func_addr_expr <pExpression> (316)
        on left: 350 353 356
        on right: 409
    $@18 (317)
        on left: 351
        on right: 353
    $@19 (318)
        on left: 352
        on right: 353
    $@20 (319)
        on left: 354
        on right: 356
    $@21 (320)
        on left: 355
        on right: 356
    expr_field <pExpression> (321)
        on left: 357 358 361
        on right: 370
    $@22 (322)
        on left: 359
        on right: 361
    $@23 (323)
        on left: 360
        on right: 361
    expr <pExpression> (324)
        on left: 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 423 424 425 426 429 430 431 434 435 436 437 438 439 440 441 442 443 444 445 446 447
        on right
    $@24 (325)
        on left: 421
        on right: 423
    $@25 (326)
        on left: 422
        on right: 423
    $@26 (327)
        on left: 427
        on right: 429
    $@27 (328)
        on left: 428
        on right: 429
    $@28 (329)
        on left: 432
        on right: 434
    $@29 (330)
        on left: 433
        on right: 434
    expr_mtag <pExpression> (331)
        on left: 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463
        on right: 371
    optional_field_annotation <aaList> (332)
        on left: 464 465
        on right: 476 485 486 522 530
    optional_override <i> (333)
        on left: 466 467 468
        on right: 476 483
    optional_constant <b> (334)
        on left: 469 470
        on right: 481 483
    optional_public_or_private_member_variable <b> (335)
        on left: 471 472 473
        on right: 476 481 483
    optional_static_member_variable <b> (336)
        on left: 474 475
        on right: 476 483
    structure_variable_declaration <pVarDecl> (337)
        on left: 476
        on right: 479
    struct_variable_declaration_list <pVarDeclList> (338)
        on left: 477 479 481 483 484
        on right: 479 481 483 484 560
    $@30 (339)
        on left: 478
        on right: 479
    $@31 (340)
        on left: 480
        on right: 481
    $@32 (341)
        on left: 482
        on right: 483
    function_argument_declaration <pVarDecl> (342)
        on left: 485 486 487
        on right: 488 489
    function_argument_list <pVarDeclList> (343)
        on left: 488 489
        on right: 118 489
    tuple_type <pVarDecl> (344)
        on left: 490 491
        on right: 492 493
    tuple_type_list <pVarDeclList> (345)
        on left: 492 493
        on right: 493 664
    variant_type <pVarDecl> (346)
        on left: 494
        on right: 495 496
    variant_type_list <pVarDeclList> (347)
        on left: 495 496
        on right: 496 667 673
    copy_or_move <b> (348)
        on left: 497 498
        on right: 502 503 504 681 683 685 687
    variable_declaration <pVarDecl> (349)
        on left: 499 500 501 502 503 504
        on right: 476 485 486
    copy_or_move_or_clone <i> (350)
        on left: 505 506 507
        on right: 516 517 518 519
    optional_ref <b> (351)
        on left: 508 509
        on right: 518 519
    let_variable_name_with_pos_list <pNameWithPosList> (352)
        on left: 510 511 512 513 514
        on right: 513 514 515 516 517 518 519
    let_variable_declaration <pVarDecl> (353)
        on left: 515 516 517 518 519
        on right: 278 522 530
    global_variable_declaration_list <pVarDeclList> (354)
        on left: 520 522
        on right: 522 528
    $@33 (355)
        on left: 521
        on right: 522
    optional_shared <b> (356)
        on left: 523 524
        on right: 21 528 530
    optional_public_or_private_variable <b> (357)
        on left: 525 526 527
        on right: 528 530
    global_let (358)
        on left: 528 530
        on right: 5
    $@34 (359)
        on left: 529
        on right: 530
    enum_list <pEnum> (360)
        on left: 531 532 533 534
        on right: 532 533 534 546 547
    single_alias (361)
        on left: 536
        on right: 537 538 541
    $@35 (362)
        on left: 535
        on right: 536
    alias_list (363)
        on left: 537 538
        on right: 538 539
    alias_declaration (364)
        on left: 539 541
        on right: 10
    $@36 (365)
        on left: 540
        on right: 541
    optional_public_or_private_enum <b> (366)
        on left: 542 543 544
        on right: 546 547
    enum_name <pEnum> (367)
        on left: 545
        on right: 546 547
    enum_declaration (368)
        on left: 546 547
        on right: 4
    optional_structure_parent <s> (369)
        on left: 548 549
        on right: 552
    optional_sealed <b> (370)
        on left: 550 551
        on right: 552
    structure_name <pStructure> (371)
        on left: 552
        on right: 560
    class_or_struct <b> (372)
        on left: 553 554
        on right: 560
    optional_public_or_private_structure <b> (373)
        on left: 555 556 557
        on right: 560
    structure_declaration (374)
        on left: 560
        on right: 3
    $@37 (375)
        on left: 558
        on right: 560
    $@38 (376)
        on left: 559
        on right: 560
    variable_name_with_pos_list <pNameWithPosList> (377)
        on left: 561 562 563 564 565
        on right: 73 499 500 501 502 503 504 564 565 725 726
    basic_type_declaration <type> (378)
        on left: 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592
        on right: 412 413 424 430 435 610
    enum_basic_type_declaration <type> (379)
        on left: 593 594 595 596 597 598
        on right: 547
    structure_type_declaration <pTypeDecl> (380)
        on left: 599
        on right: 255 613
    auto_type_declaration <pTypeDecl> (381)
        on left: 600 601 602
        on right: 611
    bitfield_bits <pNameList> (382)
        on left: 603 604
        on right: 604 607 676
    bitfield_type_declaration <pTypeDecl> (383)
        on left: 607
        on right: 612
    $@39 (384)
        on left: 605
        on right: 607
    $@40 (385)
        on left: 606
        on right: 607
    table_type_pair <aTypePair> (386)
        on left: 608 609
        on right: 637
    type_declaration_no_options <pTypeDecl> (387)
        on left: 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 630 631 634 637 640 641 644 647 648 651 654 655 658 661 664 667
        on right: 242 281 284 287 353 417 418 423 515 516 517 614 615 616 617 618 619 620 621 622 623 624 625 626 627 631 668 669 705 706 707 708 709 710 718 719
    $@41 (388)
        on left: 628
        on right: 630
    $@42 (389)
        on left: 629
        on right: 630
    $@43 (390)
        on left: 632
        on right: 634
    $@44 (391)
        on left: 633
        on right: 634
    $@45 (392)
        on left: 635
        on right: 637
    $@46 (393)
        on left: 636
        on right: 637
    $@47 (394)
        on left: 638
        on right: 640
    $@48 (395)
        on left: 639
        on right: 640
    $@49 (396)
        on left: 642
        on right: 644
    $@50 (397)
        on left: 643
        on right: 644
    $@51 (398)
        on left: 645
        on right: 647
    $@52 (399)
        on left: 646
        on right: 647
    $@53 (400)
        on left: 649
        on right: 651
    $@54 (401)
        on left: 650
        on right: 651
    $@55 (402)
        on left: 652
        on right: 654
    $@56 (403)
        on left: 653
        on right: 654
    $@57 (404)
        on left: 656
        on right: 658
    $@58 (405)
        on left: 657
        on right: 658
    $@59 (406)
        on left: 659
        on right: 661
    $@60 (407)
        on left: 660
        on right: 661
    $@61 (408)
        on left: 662
        on right: 664
    $@62 (409)
        on left: 663
        on right: 664
    $@63 (410)
        on left: 665
        on right: 667
    $@64 (411)
        on left: 666
        on right: 667
    type_declaration <pTypeDecl> (412)
        on left: 668 669 670
        on right: 120 254 290 429 434 490 491 494 501 502 536 608 609 630 634 640 644 651 658 669 670
    variant_alias_declaration (413)
        on left: 673
        on right: 11
    $@65 (414)
        on left: 671
        on right: 673
    $@66 (415)
        on left: 672
        on right: 673
    bitfield_alias_declaration (416)
        on left: 676
        on right: 12
    $@67 (417)
        on left: 674
        on right: 676
    $@68 (418)
        on left: 675
        on right: 676
    make_decl <pExpression> (419)
        on left: 677 678 679 680
        on right: 259 367
    make_struct_fields <pMakeStruct> (420)
        on left: 681 682 683 684 685 686 687 688
        on right: 344 345 683 684 687 688 689 690
    make_struct_dim <pExpression> (421)
        on left: 689 690
        on right: 690 705 708 709 710
    optional_block <pExpression> (422)
        on left: 691 692
        on right: 705 706 707 708 709 710
    optional_trailing_semicolon_cur_cur (423)
        on left: 693 694
        on right: 722
    optional_trailing_semicolon_cur_sqr (424)
        on left: 695 696
        on right: 719
    optional_trailing_semicolon_sqr_sqr (425)
        on left: 697 698
        on right: 718
    optional_trailing_delim_sqr_sqr (426)
        on left: 699 700 701
        on right: 705 706 707 708
    optional_trailing_delim_cur_sqr (427)
        on left: 702 703 704
        on right: 709 710
    make_struct_decl <pExpression> (428)
        on left: 705 706 707 708 709 710
        on right: 677
    make_tuple <pExpression> (429)
        on left: 711 712 713
        on right: 713 716 717
    make_map_tuple <pExpression> (430)
        on left: 714 715
        on right: 720 721
    make_dim <pExpression> (431)
        on left: 716 717
        on right: 717 718 719
    make_dim_decl <pExpression> (432)
        on left: 718 719
        on right: 678
    make_table <pExpression> (433)
        on left: 720 721
        on right: 721 722
    make_table_decl <pExpression> (434)
        on left: 722
        on right: 679
    array_comprehension_where <pExpression> (435)
        on left: 723 724
        on right: 725 726
    array_comprehension <pExpression> (436)
        on left: 725 726
        on right: 680


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . top_level_reader_macro
   14        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '%'         shift, and go to state 12
    '['         shift, and go to state 13
    ';'         shift, and go to state 14

    $default  reduce using rule 114 (optional_annotation_list)

    top_level_reader_macro       go to state 15
    module_declaration           go to state 16
    expr_reader                  go to state 17
    options_declaration          go to state 18
    require_declaration          go to state 19
    expect_declaration           go to state 20
    optional_annotation_list     go to state 21
    global_function_declaration  go to state 22
    kwd_let                      go to state 23
    global_let                   go to state 24
    alias_declaration            go to state 25
    enum_declaration             go to state 26
    structure_declaration        go to state 27
    variant_alias_declaration    go to state 28
    bitfield_alias_declaration   go to state 29


State 2

    0 $accept: program $end .

    $default  accept


State 3

  274 kwd_let: "let" .

    $default  reduce using rule 274 (kwd_let)


State 4

   35 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 35


State 5

   47 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 36

    expect_list   go to state 37
    expect_error  go to state 38


State 6

   36 require_declaration: "require" . require_module

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40
    '%'        shift, and go to state 41

    keyword_or_name      go to state 42
    require_module_name  go to state 43
    require_module       go to state 44


State 7

  539 alias_declaration: "typedef" . '{' alias_list '}'
  541                  | "typedef" . $@36 single_alias ';'

    '{'  shift, and go to state 45

    $default  reduce using rule 540 ($@36)

    $@36  go to state 46


State 8

  275 kwd_let: "var" .

    $default  reduce using rule 275 (kwd_let)


State 9

   21 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 47
    '$'     shift, and go to state 48

    module_name  go to state 49


State 10

  676 bitfield_alias_declaration: "bitfield" . $@67 "name" $@68 '{' bitfield_bits ';' '}'

    $default  reduce using rule 674 ($@67)

    $@67  go to state 50


State 11

  673 variant_alias_declaration: "variant" . $@65 "name" $@66 '{' variant_type_list ';' '}'

    $default  reduce using rule 671 ($@65)

    $@65  go to state 51


State 12

   34 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 52
    "name"  shift, and go to state 53

    name_in_namespace  go to state 54


State 13

  115 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 62
    annotation_list               go to state 63
    name_in_namespace             go to state 64


State 14

   14 program: program ';' .

    $default  reduce using rule 14 (program)


State 15

   13 program: program top_level_reader_macro .

    $default  reduce using rule 13 (program)


State 16

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 17

   15 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 65


State 18

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 19

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 20

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 21

  206 global_function_declaration: optional_annotation_list . "def" function_declaration
  546 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  547                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  560 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 66
    "class"   shift, and go to state 67
    "def"     shift, and go to state 68
    "enum"    shift, and go to state 69

    class_or_struct  go to state 70


State 22

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 23

  528 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  530           | kwd_let . optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 71

    $default  reduce using rule 523 (optional_shared)

    optional_shared  go to state 72


State 24

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 25

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 26

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 27

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 28

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 29

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   88 annotation_argument_name: "type" .

    $default  reduce using rule 88 (annotation_argument_name)


State 31

   89 annotation_argument_name: "in" .

    $default  reduce using rule 89 (annotation_argument_name)


State 32

   87 annotation_argument_name: "name" .

    $default  reduce using rule 87 (annotation_argument_name)


State 33

   90 annotation_argument: annotation_argument_name . '=' string_constant
   91                    | annotation_argument_name . '=' "name"
   92                    | annotation_argument_name . '=' "integer constant"
   93                    | annotation_argument_name . '=' "floating point constant"
   94                    | annotation_argument_name . '=' "true"
   95                    | annotation_argument_name . '=' "false"
   96                    | annotation_argument_name .
   97                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 73

    $default  reduce using rule 96 (annotation_argument)


State 34

   98 annotation_argument_list: annotation_argument .

    $default  reduce using rule 98 (annotation_argument_list)


State 35

   35 options_declaration: "options" annotation_argument_list .
   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 74

    $default  reduce using rule 35 (options_declaration)


State 36

   50 expect_error: "integer constant" .
   51             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 75

    $default  reduce using rule 50 (expect_error)


State 37

   47 expect_declaration: "expect" expect_list .
   49 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 76

    $default  reduce using rule 47 (expect_declaration)


State 38

   48 expect_list: expect_error .

    $default  reduce using rule 48 (expect_list)


State 39

   37 keyword_or_name: "name" .

    $default  reduce using rule 37 (keyword_or_name)


State 40

   38 keyword_or_name: "keyword" .

    $default  reduce using rule 38 (keyword_or_name)


State 41

   40 require_module_name: '%' . require_module_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40
    '%'        shift, and go to state 41

    keyword_or_name      go to state 42
    require_module_name  go to state 77


State 42

   39 require_module_name: keyword_or_name .

    $default  reduce using rule 39 (require_module_name)


State 43

   41 require_module_name: require_module_name . '.' keyword_or_name
   42                    | require_module_name . '/' keyword_or_name
   43 require_module: require_module_name . is_public_module
   44               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 78
    "public"  shift, and go to state 79
    '/'       shift, and go to state 80
    '.'       shift, and go to state 81

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 82


State 44

   36 require_declaration: "require" require_module .

    $default  reduce using rule 36 (require_declaration)


State 45

  539 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 83

    single_alias  go to state 84
    alias_list    go to state 85


State 46

  541 alias_declaration: "typedef" $@36 . single_alias ';'

    "name"  shift, and go to state 83

    single_alias  go to state 86


State 47

   20 module_name: "name" .

    $default  reduce using rule 20 (module_name)


State 48

   19 module_name: '$' .

    $default  reduce using rule 19 (module_name)


State 49

   21 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 71

    $default  reduce using rule 523 (optional_shared)

    optional_shared  go to state 87


State 50

  676 bitfield_alias_declaration: "bitfield" $@67 . "name" $@68 '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 88


State 51

  673 variant_alias_declaration: "variant" $@65 . "name" $@66 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 89


State 52

  249 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 90


State 53

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"

    "::"  shift, and go to state 91

    "::"      [reduce using rule 247 (name_in_namespace)]
    $default  reduce using rule 247 (name_in_namespace)


State 54

   34 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 33 ($@1)

    $@1  go to state 92


State 55

  101 annotation_declaration_name: "require" .

    $default  reduce using rule 101 (annotation_declaration_name)


State 56

  102 annotation_declaration_name: "private" .

    $default  reduce using rule 102 (annotation_declaration_name)


State 57

  111 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 93
    name_in_namespace             go to state 64


State 58

  106 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 94
    name_in_namespace             go to state 64


State 59

  110 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 95
    name_in_namespace             go to state 64


State 60

  103 annotation_declaration_basic: annotation_declaration_name .
  104                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 96

    $default  reduce using rule 103 (annotation_declaration_basic)


State 61

  105 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 105 (annotation_declaration)


State 62

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  112 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 97
    "||"  shift, and go to state 98
    "^^"  shift, and go to state 99

    $default  reduce using rule 112 (annotation_list)


State 63

  113 annotation_list: annotation_list . ',' annotation_declaration
  115 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 100
    ']'  shift, and go to state 101


State 64

  100 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 100 (annotation_declaration_name)


State 65

   15 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 15 (top_level_reader_macro)


State 66

  554 class_or_struct: "struct" .

    $default  reduce using rule 554 (class_or_struct)


State 67

  553 class_or_struct: "class" .

    $default  reduce using rule 553 (class_or_struct)


State 68

  206 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 102
    "private"  shift, and go to state 103

    $default  reduce using rule 207 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 104
    function_declaration                 go to state 105


State 69

  546 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  547                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 106
    "private"  shift, and go to state 107

    $default  reduce using rule 542 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 108


State 70

  560 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 109
    "private"  shift, and go to state 110

    $default  reduce using rule 555 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 111


State 71

  524 optional_shared: "shared" .

    $default  reduce using rule 524 (optional_shared)


State 72

  528 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  530           | kwd_let optional_shared . optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 112
    "private"  shift, and go to state 113

    $default  reduce using rule 525 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 114


State 73

   90 annotation_argument: annotation_argument_name '=' . string_constant
   91                    | annotation_argument_name '=' . "name"
   92                    | annotation_argument_name '=' . "integer constant"
   93                    | annotation_argument_name '=' . "floating point constant"
   94                    | annotation_argument_name '=' . "true"
   95                    | annotation_argument_name '=' . "false"
   97                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 115
    "false"                    shift, and go to state 116
    "integer constant"         shift, and go to state 117
    "floating point constant"  shift, and go to state 118
    "name"                     shift, and go to state 119
    "start of the string"      shift, and go to state 120
    '('                        shift, and go to state 121

    string_constant  go to state 122


State 74

   99 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 123


State 75

   51 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 124


State 76

   49 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 36

    expect_error  go to state 125


State 77

   40 require_module_name: '%' require_module_name .
   41                    | require_module_name . '.' keyword_or_name
   42                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 81

    $default  reduce using rule 40 (require_module_name)


State 78

   44 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 126


State 79

   46 is_public_module: "public" .

    $default  reduce using rule 46 (is_public_module)


State 80

   42 require_module_name: require_module_name '/' . keyword_or_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40

    keyword_or_name  go to state 127


State 81

   41 require_module_name: require_module_name '.' . keyword_or_name

    "name"     shift, and go to state 39
    "keyword"  shift, and go to state 40

    keyword_or_name  go to state 128


State 82

   43 require_module: require_module_name is_public_module .

    $default  reduce using rule 43 (require_module)


State 83

  536 single_alias: "name" . $@35 '=' type_declaration

    $default  reduce using rule 535 ($@35)

    $@35  go to state 129


State 84

  537 alias_list: single_alias . ';'

    ';'  shift, and go to state 130


State 85

  538 alias_list: alias_list . single_alias ';'
  539 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 83
    '}'     shift, and go to state 131

    single_alias  go to state 132


State 86

  541 alias_declaration: "typedef" $@36 single_alias . ';'

    ';'  shift, and go to state 133


State 87

   21 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 16 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 88

  676 bitfield_alias_declaration: "bitfield" $@67 "name" . $@68 '{' bitfield_bits ';' '}'

    $default  reduce using rule 675 ($@68)

    $@68  go to state 137


State 89

  673 variant_alias_declaration: "variant" $@65 "name" . $@66 '{' variant_type_list ';' '}'

    $default  reduce using rule 672 ($@66)

    $@66  go to state 138


State 90

  249 name_in_namespace: "::" "name" .

    $default  reduce using rule 249 (name_in_namespace)


State 91

  248 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 139


State 92

   34 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 140

    reader_character_sequence  go to state 141


State 93

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  111                       | "|>" annotation_declaration .

    $default  reduce using rule 111 (annotation_declaration)


State 94

  106 annotation_declaration: '!' annotation_declaration .
  107                       | annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 106 (annotation_declaration)


State 95

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  110                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 97
    "||"  shift, and go to state 98
    "^^"  shift, and go to state 99
    ')'   shift, and go to state 142


State 96

  104 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 143


State 97

  107 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 144
    name_in_namespace             go to state 64


State 98

  108 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 145
    name_in_namespace             go to state 64


State 99

  109 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 146
    name_in_namespace             go to state 64


State 100

  113 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 147
    name_in_namespace             go to state 64


State 101

  115 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 115 (optional_annotation_list)


State 102

  209 optional_public_or_private_function: "public" .

    $default  reduce using rule 209 (optional_public_or_private_function)


State 103

  208 optional_public_or_private_function: "private" .

    $default  reduce using rule 208 (optional_public_or_private_function)


State 104

  212 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 211 ($@5)

    $@5  go to state 148


State 105

  206 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 206 (global_function_declaration)


State 106

  544 optional_public_or_private_enum: "public" .

    $default  reduce using rule 544 (optional_public_or_private_enum)


State 107

  543 optional_public_or_private_enum: "private" .

    $default  reduce using rule 543 (optional_public_or_private_enum)


State 108

  546 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  547                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 149

    enum_name  go to state 150


State 109

  557 optional_public_or_private_structure: "public" .

    $default  reduce using rule 557 (optional_public_or_private_structure)


State 110

  556 optional_public_or_private_structure: "private" .

    $default  reduce using rule 556 (optional_public_or_private_structure)


State 111

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@37 structure_name $@38 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 558 ($@37)

    $@37  go to state 151


State 112

  527 optional_public_or_private_variable: "public" .

    $default  reduce using rule 527 (optional_public_or_private_variable)


State 113

  526 optional_public_or_private_variable: "private" .

    $default  reduce using rule 526 (optional_public_or_private_variable)


State 114

  528 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  530           | kwd_let optional_shared optional_public_or_private_variable . $@34 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 152

    $default  reduce using rule 529 ($@34)

    $@34  go to state 153


State 115

   94 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 94 (annotation_argument)


State 116

   95 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 95 (annotation_argument)


State 117

   92 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 92 (annotation_argument)


State 118

   93 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 93 (annotation_argument)


State 119

   91 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 91 (annotation_argument)


State 120

   26 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 154
    STRING_CHARACTER_ESC  shift, and go to state 155

    character_sequence  go to state 156


State 121

   97 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 157
    "false"                    shift, and go to state 158
    "integer constant"         shift, and go to state 159
    "floating point constant"  shift, and go to state 160
    "name"                     shift, and go to state 161
    "start of the string"      shift, and go to state 120

    string_constant                 go to state 162
    annotation_argument_value       go to state 163
    annotation_argument_value_list  go to state 164


State 122

   90 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 90 (annotation_argument)


State 123

   99 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 99 (annotation_argument_list)


State 124

   51 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 51 (expect_error)


State 125

   49 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 49 (expect_list)


State 126

   44 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 79

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 165


State 127

   42 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 42 (require_module_name)


State 128

   41 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 129

  536 single_alias: "name" $@35 . '=' type_declaration

    '='  shift, and go to state 166


State 130

  537 alias_list: single_alias ';' .

    $default  reduce using rule 537 (alias_list)


State 131

  539 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 539 (alias_declaration)


State 132

  538 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 167


State 133

  541 alias_declaration: "typedef" $@36 single_alias ';' .

    $default  reduce using rule 541 (alias_declaration)


State 134

   17 optional_public_or_private_module: "public" .

    $default  reduce using rule 17 (optional_public_or_private_module)


State 135

   18 optional_public_or_private_module: "private" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 136

   21 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 21 (module_declaration)


State 137

  676 bitfield_alias_declaration: "bitfield" $@67 "name" $@68 . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 168


State 138

  673 variant_alias_declaration: "variant" $@65 "name" $@66 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 169


State 139

  248 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 248 (name_in_namespace)


State 140

   31 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 31 (reader_character_sequence)


State 141

   32 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   34 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 170

    $default  reduce using rule 34 (expr_reader)


State 142

  110 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 110 (annotation_declaration)


State 143

   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  104 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 74
    ')'  shift, and go to state 171


State 144

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  107                       | annotation_declaration "&&" annotation_declaration .
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 107 (annotation_declaration)


State 145

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  108                       | annotation_declaration "||" annotation_declaration .
  109                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 97
    "^^"  shift, and go to state 99

    $default  reduce using rule 108 (annotation_declaration)


State 146

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  109                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 97

    $default  reduce using rule 109 (annotation_declaration)


State 147

  107 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration . "^^" annotation_declaration
  113 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 97
    "||"  shift, and go to state 98
    "^^"  shift, and go to state 99

    $default  reduce using rule 113 (annotation_list)


State 148

  212 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 172
    "bool"      shift, and go to state 173
    "string"    shift, and go to state 174
    "int"       shift, and go to state 175
    "int2"      shift, and go to state 176
    "int3"      shift, and go to state 177
    "int4"      shift, and go to state 178
    "uint"      shift, and go to state 179
    "uint2"     shift, and go to state 180
    "uint3"     shift, and go to state 181
    "uint4"     shift, and go to state 182
    "float"     shift, and go to state 183
    "float2"    shift, and go to state 184
    "float3"    shift, and go to state 185
    "float4"    shift, and go to state 186
    "range"     shift, and go to state 187
    "urange"    shift, and go to state 188
    "range64"   shift, and go to state 189
    "urange64"  shift, and go to state 190
    "int64"     shift, and go to state 191
    "uint64"    shift, and go to state 192
    "double"    shift, and go to state 193
    "int8"      shift, and go to state 194
    "uint8"     shift, and go to state 195
    "int16"     shift, and go to state 196
    "uint16"    shift, and go to state 197
    "++"        shift, and go to state 198
    "--"        shift, and go to state 199
    "name"      shift, and go to state 200

    function_name                go to state 201
    function_declaration_header  go to state 202


State 149

  545 enum_name: "name" .

    $default  reduce using rule 545 (enum_name)


State 150

  546 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  547                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 203
    '{'  shift, and go to state 204


State 151

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 . structure_name $@38 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 205

    $default  reduce using rule 550 (optional_sealed)

    optional_sealed  go to state 206
    structure_name   go to state 207


State 152

  528 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 520 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 208


State 153

  530 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 209

    $default  reduce using rule 464 (optional_field_annotation)

    optional_field_annotation  go to state 210


State 154

   22 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 155

   23 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 156

   24 character_sequence: character_sequence . STRING_CHARACTER
   25                   | character_sequence . STRING_CHARACTER_ESC
   26 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 211
    STRING_CHARACTER_ESC  shift, and go to state 212
    "end of the string"   shift, and go to state 213


State 157

   83 annotation_argument_value: "true" .

    $default  reduce using rule 83 (annotation_argument_value)


State 158

   84 annotation_argument_value: "false" .

    $default  reduce using rule 84 (annotation_argument_value)


State 159

   81 annotation_argument_value: "integer constant" .

    $default  reduce using rule 81 (annotation_argument_value)


State 160

   82 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 82 (annotation_argument_value)


State 161

   80 annotation_argument_value: "name" .

    $default  reduce using rule 80 (annotation_argument_value)


State 162

   79 annotation_argument_value: string_constant .

    $default  reduce using rule 79 (annotation_argument_value)


State 163

   85 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 85 (annotation_argument_value_list)


State 164

   86 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   97 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 214
    ')'  shift, and go to state 215


State 165

   44 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 44 (require_module)


State 166

  536 single_alias: "name" $@35 '=' . type_declaration

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 260


State 167

  538 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 538 (alias_list)


State 168

  676 bitfield_alias_declaration: "bitfield" $@67 "name" $@68 '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 261

    bitfield_bits  go to state 262


State 169

  673 variant_alias_declaration: "variant" $@65 "name" $@66 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 263

    variant_type       go to state 264
    variant_type_list  go to state 265


State 170

   32 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 171

  104 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 104 (annotation_declaration_basic)


State 172

  122 function_name: "operator" . '!'
  123              | "operator" . '~'
  124              | "operator" . "+="
  125              | "operator" . "-="
  126              | "operator" . "*="
  127              | "operator" . "/="
  128              | "operator" . "%="
  129              | "operator" . "&="
  130              | "operator" . "|="
  131              | "operator" . "^="
  132              | "operator" . "&&="
  133              | "operator" . "||="
  134              | "operator" . "^^="
  135              | "operator" . "&&"
  136              | "operator" . "||"
  137              | "operator" . "^^"
  138              | "operator" . '+'
  139              | "operator" . '-'
  140              | "operator" . '*'
  141              | "operator" . '/'
  142              | "operator" . '%'
  143              | "operator" . '<'
  144              | "operator" . '>'
  145              | "operator" . ".."
  146              | "operator" . "=="
  147              | "operator" . "!="
  148              | "operator" . "<="
  149              | "operator" . ">="
  150              | "operator" . '&'
  151              | "operator" . '|'
  152              | "operator" . '^'
  155              | "operator" . "++"
  156              | "operator" . "--"
  157              | "operator" . "<<"
  158              | "operator" . ">>"
  159              | "operator" . "<<="
  160              | "operator" . ">>="
  161              | "operator" . "<<<"
  162              | "operator" . ">>>"
  163              | "operator" . "<<<="
  164              | "operator" . ">>>="
  165              | "operator" . '[' ']'
  166              | "operator" . "?[" ']'
  167              | "operator" . '.'
  168              | "operator" . "?."
  169              | "operator" . '.' "name"
  170              | "operator" . '.' "name" ":="
  171              | "operator" . "?." "name"
  172              | "operator" . ":="
  173              | "operator" . "delete"
  174              | "operator" . "??"
  175              | "operator" . "is"
  176              | "operator" . "as"
  177              | "operator" . "is" "name"
  178              | "operator" . "as" "name"
  179              | "operator" . '?' "as"
  180              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 266
    "as"      shift, and go to state 267
    "delete"  shift, and go to state 268
    "+="      shift, and go to state 269
    "-="      shift, and go to state 270
    "/="      shift, and go to state 271
    "*="      shift, and go to state 272
    "%="      shift, and go to state 273
    "&="      shift, and go to state 274
    "|="      shift, and go to state 275
    "^="      shift, and go to state 276
    "<<"      shift, and go to state 277
    ">>"      shift, and go to state 278
    "++"      shift, and go to state 279
    "--"      shift, and go to state 280
    "<="      shift, and go to state 281
    "<<="     shift, and go to state 282
    ">>="     shift, and go to state 283
    ">="      shift, and go to state 284
    "=="      shift, and go to state 285
    "!="      shift, and go to state 286
    "??"      shift, and go to state 287
    "?."      shift, and go to state 288
    "?["      shift, and go to state 289
    ":="      shift, and go to state 290
    "<<<"     shift, and go to state 291
    ">>>"     shift, and go to state 292
    "<<<="    shift, and go to state 293
    ">>>="    shift, and go to state 294
    "&&"      shift, and go to state 295
    "||"      shift, and go to state 296
    "^^"      shift, and go to state 297
    "&&="     shift, and go to state 298
    "||="     shift, and go to state 299
    "^^="     shift, and go to state 300
    ".."      shift, and go to state 301
    '?'       shift, and go to state 302
    '|'       shift, and go to state 303
    '^'       shift, and go to state 304
    '&'       shift, and go to state 305
    '<'       shift, and go to state 306
    '>'       shift, and go to state 307
    '-'       shift, and go to state 308
    '+'       shift, and go to state 309
    '*'       shift, and go to state 310
    '/'       shift, and go to state 311
    '%'       shift, and go to state 312
    '~'       shift, and go to state 313
    '!'       shift, and go to state 314
    '.'       shift, and go to state 315
    '['       shift, and go to state 316


State 173

  181 function_name: "bool" .

    $default  reduce using rule 181 (function_name)


State 174

  182 function_name: "string" .

    $default  reduce using rule 182 (function_name)


State 175

  183 function_name: "int" .

    $default  reduce using rule 183 (function_name)


State 176

  184 function_name: "int2" .

    $default  reduce using rule 184 (function_name)


State 177

  185 function_name: "int3" .

    $default  reduce using rule 185 (function_name)


State 178

  186 function_name: "int4" .

    $default  reduce using rule 186 (function_name)


State 179

  187 function_name: "uint" .

    $default  reduce using rule 187 (function_name)


State 180

  188 function_name: "uint2" .

    $default  reduce using rule 188 (function_name)


State 181

  189 function_name: "uint3" .

    $default  reduce using rule 189 (function_name)


State 182

  190 function_name: "uint4" .

    $default  reduce using rule 190 (function_name)


State 183

  191 function_name: "float" .

    $default  reduce using rule 191 (function_name)


State 184

  192 function_name: "float2" .

    $default  reduce using rule 192 (function_name)


State 185

  193 function_name: "float3" .

    $default  reduce using rule 193 (function_name)


State 186

  194 function_name: "float4" .

    $default  reduce using rule 194 (function_name)


State 187

  195 function_name: "range" .

    $default  reduce using rule 195 (function_name)


State 188

  196 function_name: "urange" .

    $default  reduce using rule 196 (function_name)


State 189

  197 function_name: "range64" .

    $default  reduce using rule 197 (function_name)


State 190

  198 function_name: "urange64" .

    $default  reduce using rule 198 (function_name)


State 191

  199 function_name: "int64" .

    $default  reduce using rule 199 (function_name)


State 192

  200 function_name: "uint64" .

    $default  reduce using rule 200 (function_name)


State 193

  201 function_name: "double" .

    $default  reduce using rule 201 (function_name)


State 194

  202 function_name: "int8" .

    $default  reduce using rule 202 (function_name)


State 195

  203 function_name: "uint8" .

    $default  reduce using rule 203 (function_name)


State 196

  204 function_name: "int16" .

    $default  reduce using rule 204 (function_name)


State 197

  205 function_name: "uint16" .

    $default  reduce using rule 205 (function_name)


State 198

  153 function_name: "++" . "operator"

    "operator"  shift, and go to state 317


State 199

  154 function_name: "--" . "operator"

    "operator"  shift, and go to state 318


State 200

  121 function_name: "name" .

    $default  reduce using rule 121 (function_name)


State 201

  210 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 319

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 320


State 202

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 321

    expression_block  go to state 322


State 203

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 323
    "uint"    shift, and go to state 324
    "int8"    shift, and go to state 325
    "uint8"   shift, and go to state 326
    "int16"   shift, and go to state 327
    "uint16"  shift, and go to state 328

    enum_basic_type_declaration  go to state 329


State 204

  546 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 531 (enum_list)

    enum_list  go to state 330


State 205

  551 optional_sealed: "sealed" .

    $default  reduce using rule 551 (optional_sealed)


State 206

  552 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 331


State 207

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name . $@38 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 559 ($@38)

    $@38  go to state 332


State 208

  522 global_variable_declaration_list: global_variable_declaration_list . $@33 optional_field_annotation let_variable_declaration
  528 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 333

    $default  reduce using rule 521 ($@33)

    $@33  go to state 334


State 209

  465 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 30
    "in"    shift, and go to state 31
    "name"  shift, and go to state 32

    annotation_argument_name  go to state 33
    annotation_argument       go to state 34
    annotation_argument_list  go to state 335


State 210

  530 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 336
    "name"  shift, and go to state 337

    let_variable_name_with_pos_list  go to state 338
    let_variable_declaration         go to state 339


State 211

   24 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 24 (character_sequence)


State 212

   25 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 25 (character_sequence)


State 213

   26 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 26 (string_constant)


State 214

   86 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 157
    "false"                    shift, and go to state 158
    "integer constant"         shift, and go to state 159
    "floating point constant"  shift, and go to state 160
    "name"                     shift, and go to state 161
    "start of the string"      shift, and go to state 120

    string_constant            go to state 162
    annotation_argument_value  go to state 340


State 215

   97 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 97 (annotation_argument)


State 216

  634 type_declaration_no_options: "array" . '<' $@43 type_declaration '>' $@44

    '<'  shift, and go to state 341


State 217

  637 type_declaration_no_options: "table" . '<' $@45 table_type_pair '>' $@46

    '<'  shift, and go to state 342


State 218

  640 type_declaration_no_options: "iterator" . '<' $@47 type_declaration '>' $@48

    '<'  shift, and go to state 343


State 219

  630 type_declaration_no_options: "smart_ptr" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 344


State 220

  566 basic_type_declaration: "bool" .

    $default  reduce using rule 566 (basic_type_declaration)


State 221

  586 basic_type_declaration: "void" .

    $default  reduce using rule 586 (basic_type_declaration)


State 222

  567 basic_type_declaration: "string" .

    $default  reduce using rule 567 (basic_type_declaration)


State 223

  600 auto_type_declaration: "auto" .
  601                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 345

    '('       [reduce using rule 600 (auto_type_declaration)]
    $default  reduce using rule 600 (auto_type_declaration)


State 224

  568 basic_type_declaration: "int" .

    $default  reduce using rule 568 (basic_type_declaration)


State 225

  572 basic_type_declaration: "int2" .

    $default  reduce using rule 572 (basic_type_declaration)


State 226

  573 basic_type_declaration: "int3" .

    $default  reduce using rule 573 (basic_type_declaration)


State 227

  574 basic_type_declaration: "int4" .

    $default  reduce using rule 574 (basic_type_declaration)


State 228

  575 basic_type_declaration: "uint" .

    $default  reduce using rule 575 (basic_type_declaration)


State 229

  592 basic_type_declaration: "bitfield" .
  607 bitfield_type_declaration: "bitfield" . '<' $@39 bitfield_bits '>' $@40

    '<'  shift, and go to state 346

    $default  reduce using rule 592 (basic_type_declaration)


State 230

  579 basic_type_declaration: "uint2" .

    $default  reduce using rule 579 (basic_type_declaration)


State 231

  580 basic_type_declaration: "uint3" .

    $default  reduce using rule 580 (basic_type_declaration)


State 232

  581 basic_type_declaration: "uint4" .

    $default  reduce using rule 581 (basic_type_declaration)


State 233

  582 basic_type_declaration: "float" .

    $default  reduce using rule 582 (basic_type_declaration)


State 234

  583 basic_type_declaration: "float2" .

    $default  reduce using rule 583 (basic_type_declaration)


State 235

  584 basic_type_declaration: "float3" .

    $default  reduce using rule 584 (basic_type_declaration)


State 236

  585 basic_type_declaration: "float4" .

    $default  reduce using rule 585 (basic_type_declaration)


State 237

  587 basic_type_declaration: "range" .

    $default  reduce using rule 587 (basic_type_declaration)


State 238

  588 basic_type_declaration: "urange" .

    $default  reduce using rule 588 (basic_type_declaration)


State 239

  589 basic_type_declaration: "range64" .

    $default  reduce using rule 589 (basic_type_declaration)


State 240

  590 basic_type_declaration: "urange64" .

    $default  reduce using rule 590 (basic_type_declaration)


State 241

  641 type_declaration_no_options: "block" .
  644                            | "block" . '<' $@49 type_declaration '>' $@50
  647                            | "block" . '<' $@51 optional_function_argument_list optional_function_type '>' $@52

    '<'  shift, and go to state 347

    $default  reduce using rule 641 (type_declaration_no_options)


State 242

  571 basic_type_declaration: "int64" .

    $default  reduce using rule 571 (basic_type_declaration)


State 243

  578 basic_type_declaration: "uint64" .

    $default  reduce using rule 578 (basic_type_declaration)


State 244

  591 basic_type_declaration: "double" .

    $default  reduce using rule 591 (basic_type_declaration)


State 245

  648 type_declaration_no_options: "function" .
  651                            | "function" . '<' $@53 type_declaration '>' $@54
  654                            | "function" . '<' $@55 optional_function_argument_list optional_function_type '>' $@56

    '<'  shift, and go to state 348

    $default  reduce using rule 648 (type_declaration_no_options)


State 246

  655 type_declaration_no_options: "lambda" .
  658                            | "lambda" . '<' $@57 type_declaration '>' $@58
  661                            | "lambda" . '<' $@59 optional_function_argument_list optional_function_type '>' $@60

    '<'  shift, and go to state 349

    $default  reduce using rule 655 (type_declaration_no_options)


State 247

  569 basic_type_declaration: "int8" .

    $default  reduce using rule 569 (basic_type_declaration)


State 248

  576 basic_type_declaration: "uint8" .

    $default  reduce using rule 576 (basic_type_declaration)


State 249

  570 basic_type_declaration: "int16" .

    $default  reduce using rule 570 (basic_type_declaration)


State 250

  577 basic_type_declaration: "uint16" .

    $default  reduce using rule 577 (basic_type_declaration)


State 251

  664 type_declaration_no_options: "tuple" . '<' $@61 tuple_type_list '>' $@62

    '<'  shift, and go to state 350


State 252

  667 type_declaration_no_options: "variant" . '<' $@63 variant_type_list '>' $@64

    '<'  shift, and go to state 351


State 253

  602 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 352


State 254

  599 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 599 (structure_type_declaration)


State 255

  610 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 610 (type_declaration_no_options)


State 256

  613 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 613 (type_declaration_no_options)


State 257

  611 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 611 (type_declaration_no_options)


State 258

  612 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 612 (type_declaration_no_options)


State 259

  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"
  668 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362

    $default  reduce using rule 668 (type_declaration)


State 260

  536 single_alias: "name" $@35 '=' type_declaration .
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363

    $default  reduce using rule 536 (single_alias)


State 261

  603 bitfield_bits: "name" .

    $default  reduce using rule 603 (bitfield_bits)


State 262

  604 bitfield_bits: bitfield_bits . ';' "name"
  676 bitfield_alias_declaration: "bitfield" $@67 "name" $@68 '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 364


State 263

  494 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 365


State 264

  495 variant_type_list: variant_type .

    $default  reduce using rule 495 (variant_type_list)


State 265

  496 variant_type_list: variant_type_list . ';' variant_type
  673 variant_alias_declaration: "variant" $@65 "name" $@66 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 366


State 266

  175 function_name: "operator" "is" .
  177              | "operator" "is" . "name"

    "name"  shift, and go to state 367

    $default  reduce using rule 175 (function_name)


State 267

  176 function_name: "operator" "as" .
  178              | "operator" "as" . "name"

    "name"  shift, and go to state 368

    $default  reduce using rule 176 (function_name)


State 268

  173 function_name: "operator" "delete" .

    $default  reduce using rule 173 (function_name)


State 269

  124 function_name: "operator" "+=" .

    $default  reduce using rule 124 (function_name)


State 270

  125 function_name: "operator" "-=" .

    $default  reduce using rule 125 (function_name)


State 271

  127 function_name: "operator" "/=" .

    $default  reduce using rule 127 (function_name)


State 272

  126 function_name: "operator" "*=" .

    $default  reduce using rule 126 (function_name)


State 273

  128 function_name: "operator" "%=" .

    $default  reduce using rule 128 (function_name)


State 274

  129 function_name: "operator" "&=" .

    $default  reduce using rule 129 (function_name)


State 275

  130 function_name: "operator" "|=" .

    $default  reduce using rule 130 (function_name)


State 276

  131 function_name: "operator" "^=" .

    $default  reduce using rule 131 (function_name)


State 277

  157 function_name: "operator" "<<" .

    $default  reduce using rule 157 (function_name)


State 278

  158 function_name: "operator" ">>" .

    $default  reduce using rule 158 (function_name)


State 279

  155 function_name: "operator" "++" .

    $default  reduce using rule 155 (function_name)


State 280

  156 function_name: "operator" "--" .

    $default  reduce using rule 156 (function_name)


State 281

  148 function_name: "operator" "<=" .

    $default  reduce using rule 148 (function_name)


State 282

  159 function_name: "operator" "<<=" .

    $default  reduce using rule 159 (function_name)


State 283

  160 function_name: "operator" ">>=" .

    $default  reduce using rule 160 (function_name)


State 284

  149 function_name: "operator" ">=" .

    $default  reduce using rule 149 (function_name)


State 285

  146 function_name: "operator" "==" .

    $default  reduce using rule 146 (function_name)


State 286

  147 function_name: "operator" "!=" .

    $default  reduce using rule 147 (function_name)


State 287

  174 function_name: "operator" "??" .

    $default  reduce using rule 174 (function_name)


State 288

  168 function_name: "operator" "?." .
  171              | "operator" "?." . "name"

    "name"  shift, and go to state 369

    $default  reduce using rule 168 (function_name)


State 289

  166 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 370


State 290

  172 function_name: "operator" ":=" .

    $default  reduce using rule 172 (function_name)


State 291

  161 function_name: "operator" "<<<" .

    $default  reduce using rule 161 (function_name)


State 292

  162 function_name: "operator" ">>>" .

    $default  reduce using rule 162 (function_name)


State 293

  163 function_name: "operator" "<<<=" .

    $default  reduce using rule 163 (function_name)


State 294

  164 function_name: "operator" ">>>=" .

    $default  reduce using rule 164 (function_name)


State 295

  135 function_name: "operator" "&&" .

    $default  reduce using rule 135 (function_name)


State 296

  136 function_name: "operator" "||" .

    $default  reduce using rule 136 (function_name)


State 297

  137 function_name: "operator" "^^" .

    $default  reduce using rule 137 (function_name)


State 298

  132 function_name: "operator" "&&=" .

    $default  reduce using rule 132 (function_name)


State 299

  133 function_name: "operator" "||=" .

    $default  reduce using rule 133 (function_name)


State 300

  134 function_name: "operator" "^^=" .

    $default  reduce using rule 134 (function_name)


State 301

  145 function_name: "operator" ".." .

    $default  reduce using rule 145 (function_name)


State 302

  179 function_name: "operator" '?' . "as"
  180              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 371


State 303

  151 function_name: "operator" '|' .

    $default  reduce using rule 151 (function_name)


State 304

  152 function_name: "operator" '^' .

    $default  reduce using rule 152 (function_name)


State 305

  150 function_name: "operator" '&' .

    $default  reduce using rule 150 (function_name)


State 306

  143 function_name: "operator" '<' .

    $default  reduce using rule 143 (function_name)


State 307

  144 function_name: "operator" '>' .

    $default  reduce using rule 144 (function_name)


State 308

  139 function_name: "operator" '-' .

    $default  reduce using rule 139 (function_name)


State 309

  138 function_name: "operator" '+' .

    $default  reduce using rule 138 (function_name)


State 310

  140 function_name: "operator" '*' .

    $default  reduce using rule 140 (function_name)


State 311

  141 function_name: "operator" '/' .

    $default  reduce using rule 141 (function_name)


State 312

  142 function_name: "operator" '%' .

    $default  reduce using rule 142 (function_name)


State 313

  123 function_name: "operator" '~' .

    $default  reduce using rule 123 (function_name)


State 314

  122 function_name: "operator" '!' .

    $default  reduce using rule 122 (function_name)


State 315

  167 function_name: "operator" '.' .
  169              | "operator" '.' . "name"
  170              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 372

    $default  reduce using rule 167 (function_name)


State 316

  165 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 373


State 317

  153 function_name: "++" "operator" .

    $default  reduce using rule 153 (function_name)


State 318

  154 function_name: "--" "operator" .

    $default  reduce using rule 154 (function_name)


State 319

  117 optional_function_argument_list: '(' . ')'
  118                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 374
    "[["  shift, and go to state 209
    ')'   shift, and go to state 375

    $default  reduce using rule 464 (optional_field_annotation)

    optional_field_annotation      go to state 376
    function_argument_declaration  go to state 377
    function_argument_list         go to state 378


State 320

  210 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 379

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 380


State 321

  213 expression_block: '{' . expressions '}'
  214                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 236 (expressions)

    expressions  go to state 381


State 322

  212 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 212 (function_declaration)


State 323

  593 enum_basic_type_declaration: "int" .

    $default  reduce using rule 593 (enum_basic_type_declaration)


State 324

  596 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 596 (enum_basic_type_declaration)


State 325

  594 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 594 (enum_basic_type_declaration)


State 326

  597 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 597 (enum_basic_type_declaration)


State 327

  595 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 595 (enum_basic_type_declaration)


State 328

  598 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 598 (enum_basic_type_declaration)


State 329

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 382


State 330

  532 enum_list: enum_list . ';'
  533          | enum_list . "name" ';'
  534          | enum_list . "name" '=' expr ';'
  546 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 383
    ';'     shift, and go to state 384
    '}'     shift, and go to state 385


State 331

  552 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 386

    $default  reduce using rule 548 (optional_structure_parent)

    optional_structure_parent  go to state 387


State 332

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 388


State 333

  528 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 528 (global_let)


State 334

  522 global_variable_declaration_list: global_variable_declaration_list $@33 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 209

    $default  reduce using rule 464 (optional_field_annotation)

    optional_field_annotation  go to state 389


State 335

   99 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  465 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 74
    ']'  shift, and go to state 390


State 336

  511 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 391


State 337

  510 let_variable_name_with_pos_list: "name" .
  512                                | "name" . "aka" "name"

    "aka"  shift, and go to state 392

    $default  reduce using rule 510 (let_variable_name_with_pos_list)


State 338

  513 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  514                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  515 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  516                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  517                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  518                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  519                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 393
    ':'  shift, and go to state 394
    '&'  shift, and go to state 395

    $default  reduce using rule 508 (optional_ref)

    optional_ref  go to state 396


State 339

  530 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 530 (global_let)


State 340

   86 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 86 (annotation_argument_value_list)


State 341

  634 type_declaration_no_options: "array" '<' . $@43 type_declaration '>' $@44

    $default  reduce using rule 632 ($@43)

    $@43  go to state 397


State 342

  637 type_declaration_no_options: "table" '<' . $@45 table_type_pair '>' $@46

    $default  reduce using rule 635 ($@45)

    $@45  go to state 398


State 343

  640 type_declaration_no_options: "iterator" '<' . $@47 type_declaration '>' $@48

    $default  reduce using rule 638 ($@47)

    $@47  go to state 399


State 344

  630 type_declaration_no_options: "smart_ptr" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 628 ($@41)

    $@41  go to state 400


State 345

  601 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 401


State 346

  607 bitfield_type_declaration: "bitfield" '<' . $@39 bitfield_bits '>' $@40

    $default  reduce using rule 605 ($@39)

    $@39  go to state 402


State 347

  644 type_declaration_no_options: "block" '<' . $@49 type_declaration '>' $@50
  647                            | "block" '<' . $@51 optional_function_argument_list optional_function_type '>' $@52

    ':'       reduce using rule 645 ($@51)
    '>'       reduce using rule 645 ($@51)
    '('       reduce using rule 645 ($@51)
    $default  reduce using rule 642 ($@49)

    $@49  go to state 403
    $@51  go to state 404


State 348

  651 type_declaration_no_options: "function" '<' . $@53 type_declaration '>' $@54
  654                            | "function" '<' . $@55 optional_function_argument_list optional_function_type '>' $@56

    ':'       reduce using rule 652 ($@55)
    '>'       reduce using rule 652 ($@55)
    '('       reduce using rule 652 ($@55)
    $default  reduce using rule 649 ($@53)

    $@53  go to state 405
    $@55  go to state 406


State 349

  658 type_declaration_no_options: "lambda" '<' . $@57 type_declaration '>' $@58
  661                            | "lambda" '<' . $@59 optional_function_argument_list optional_function_type '>' $@60

    ':'       reduce using rule 659 ($@59)
    '>'       reduce using rule 659 ($@59)
    '('       reduce using rule 659 ($@59)
    $default  reduce using rule 656 ($@57)

    $@57  go to state 407
    $@59  go to state 408


State 350

  664 type_declaration_no_options: "tuple" '<' . $@61 tuple_type_list '>' $@62

    $default  reduce using rule 662 ($@61)

    $@61  go to state 409


State 351

  667 type_declaration_no_options: "variant" '<' . $@63 variant_type_list '>' $@64

    $default  reduce using rule 665 ($@63)

    $@63  go to state 410


State 352

  602 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 470
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 353

  618 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 618 (type_declaration_no_options)


State 354

  623 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 623 (type_declaration_no_options)


State 355

  617 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 617 (type_declaration_no_options)


State 356

  625 type_declaration_no_options: type_declaration_no_options "==" . "const"
  626                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 478
    '&'      shift, and go to state 479


State 357

  631 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 631 (type_declaration_no_options)


State 358

  627 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 627 (type_declaration_no_options)


State 359

  620 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 620 (type_declaration_no_options)


State 360

  616 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  619                            | type_declaration_no_options '-' . "const"
  621                            | type_declaration_no_options '-' . '&'
  624                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 480
    '&'      shift, and go to state 481
    '['      shift, and go to state 482
    '#'      shift, and go to state 483


State 361

  614 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  615                            | type_declaration_no_options '[' . ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    ']'                               shift, and go to state 484
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 485
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 362

  622 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 622 (type_declaration_no_options)


State 363

  669 type_declaration: type_declaration '|' . type_declaration_no_options
  670                 | type_declaration '|' . '#'

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53
    '#'          shift, and go to state 486

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 487


State 364

  604 bitfield_bits: bitfield_bits ';' . "name"
  676 bitfield_alias_declaration: "bitfield" $@67 "name" $@68 '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 488
    '}'     shift, and go to state 489


State 365

  494 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 490


State 366

  496 variant_type_list: variant_type_list ';' . variant_type
  673 variant_alias_declaration: "variant" $@65 "name" $@66 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 263
    '}'     shift, and go to state 491

    variant_type  go to state 492


State 367

  177 function_name: "operator" "is" "name" .

    $default  reduce using rule 177 (function_name)


State 368

  178 function_name: "operator" "as" "name" .

    $default  reduce using rule 178 (function_name)


State 369

  171 function_name: "operator" "?." "name" .

    $default  reduce using rule 171 (function_name)


State 370

  166 function_name: "operator" "?[" ']' .

    $default  reduce using rule 166 (function_name)


State 371

  179 function_name: "operator" '?' "as" .
  180              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 493

    $default  reduce using rule 179 (function_name)


State 372

  169 function_name: "operator" '.' "name" .
  170              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 494

    $default  reduce using rule 169 (function_name)


State 373

  165 function_name: "operator" '[' ']' .

    $default  reduce using rule 165 (function_name)


State 374

  487 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 495


State 375

  117 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 117 (optional_function_argument_list)


State 376

  485 function_argument_declaration: optional_field_annotation . variable_declaration
  486                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 496
    "$i"    shift, and go to state 497
    "name"  shift, and go to state 498

    variable_declaration         go to state 499
    variable_name_with_pos_list  go to state 500


State 377

  488 function_argument_list: function_argument_declaration .

    $default  reduce using rule 488 (function_argument_list)


State 378

  118 optional_function_argument_list: '(' function_argument_list . ')'
  489 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 501
    ';'  shift, and go to state 502


State 379

  120 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 503


State 380

  210 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 210 (function_declaration_header)


State 381

  213 expression_block: '{' expressions . '}'
  214                 | '{' expressions . '}' "finally" '{' expressions '}'
  237 expressions: expressions . expression_any
  238            | expressions . error

    error                             shift, and go to state 504
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 505
    "if"                              shift, and go to state 506
    "static_if"                       shift, and go to state 507
    "for"                             shift, and go to state 508
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "return"                          shift, and go to state 509
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 510
    "try"                             shift, and go to state 511
    "delete"                          shift, and go to state 512
    "deref"                           shift, and go to state 417
    "with"                            shift, and go to state 513
    "assume"                          shift, and go to state 514
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 420
    "continue"                        shift, and go to state 515
    "pass"                            shift, and go to state 516
    "reinterpret"                     shift, and go to state 421
    "label"                           shift, and go to state 517
    "goto"                            shift, and go to state 518
    "unsafe"                          shift, and go to state 519
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "yield"                           shift, and go to state 520
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 524
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    ';'                               shift, and go to state 525
    '{'                               shift, and go to state 321
    '}'                               shift, and go to state 526

    string_builder             go to state 454
    expr_reader                go to state 455
    expression_label           go to state 527
    expression_goto            go to state 528
    if_or_static_if            go to state 529
    expression_if_one_liner    go to state 530
    expression_if_then_else    go to state 531
    expression_for_loop        go to state 532
    expression_unsafe          go to state 533
    expression_while_loop      go to state 534
    expression_with            go to state 535
    expression_with_alias      go to state 536
    expression_block           go to state 456
    expression_any             go to state 537
    expr_keyword               go to state 538
    expression_keyword         go to state 457
    expr_pipe                  go to state 539
    name_in_namespace          go to state 458
    expression_delete          go to state 540
    expr_new                   go to state 459
    expression_break           go to state 541
    expression_continue        go to state 542
    expression_return_no_pipe  go to state 543
    expression_return          go to state 544
    expression_yield_no_pipe   go to state 545
    expression_yield           go to state 546
    expression_try_catch       go to state 547
    kwd_let                    go to state 548
    expression_let             go to state 549
    expr_cast                  go to state 460
    expr_type_decl             go to state 461
    expr_type_info             go to state 462
    block_or_lambda            go to state 463
    expr_block                 go to state 464
    expr_numeric_const         go to state 465
    expr_assign                go to state 550
    expr_assign_pipe           go to state 551
    expr_named_call            go to state 466
    expr_method_call           go to state 467
    func_addr_expr             go to state 468
    expr_field                 go to state 469
    expr                       go to state 552
    expr_mtag                  go to state 471
    basic_type_declaration     go to state 472
    make_decl                  go to state 473
    make_struct_decl           go to state 474
    make_dim_decl              go to state 475
    make_table_decl            go to state 476
    array_comprehension        go to state 477


State 382

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 531 (enum_list)

    enum_list  go to state 553


State 383

  533 enum_list: enum_list "name" . ';'
  534          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 554
    ';'  shift, and go to state 555


State 384

  532 enum_list: enum_list ';' .

    $default  reduce using rule 532 (enum_list)


State 385

  546 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 546 (enum_declaration)


State 386

  549 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 52
    "name"  shift, and go to state 53

    name_in_namespace  go to state 556


State 387

  552 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 552 (structure_name)


State 388

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 477 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 557


State 389

  522 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 336
    "name"  shift, and go to state 337

    let_variable_name_with_pos_list  go to state 338
    let_variable_declaration         go to state 558


State 390

  465 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 559


State 391

  511 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 560
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 392

  512 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 561


State 393

  513 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  514                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 562


State 394

  515 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  516                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  517                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 563


State 395

  509 optional_ref: '&' .

    $default  reduce using rule 509 (optional_ref)


State 396

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  519                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 564
    ":="  shift, and go to state 565
    '='   shift, and go to state 566

    copy_or_move_or_clone  go to state 567


State 397

  634 type_declaration_no_options: "array" '<' $@43 . type_declaration '>' $@44

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 568


State 398

  637 type_declaration_no_options: "table" '<' $@45 . table_type_pair '>' $@46

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    table_type_pair              go to state 569
    type_declaration_no_options  go to state 259
    type_declaration             go to state 570


State 399

  640 type_declaration_no_options: "iterator" '<' $@47 . type_declaration '>' $@48

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 571


State 400

  630 type_declaration_no_options: "smart_ptr" '<' $@41 . type_declaration '>' $@42

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 572


State 401

  601 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 573


State 402

  607 bitfield_type_declaration: "bitfield" '<' $@39 . bitfield_bits '>' $@40

    "name"  shift, and go to state 261

    bitfield_bits  go to state 574


State 403

  644 type_declaration_no_options: "block" '<' $@49 . type_declaration '>' $@50

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 575


State 404

  647 type_declaration_no_options: "block" '<' $@51 . optional_function_argument_list optional_function_type '>' $@52

    '('  shift, and go to state 319

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 576


State 405

  651 type_declaration_no_options: "function" '<' $@53 . type_declaration '>' $@54

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 577


State 406

  654 type_declaration_no_options: "function" '<' $@55 . optional_function_argument_list optional_function_type '>' $@56

    '('  shift, and go to state 319

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 578


State 407

  658 type_declaration_no_options: "lambda" '<' $@57 . type_declaration '>' $@58

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 579


State 408

  661 type_declaration_no_options: "lambda" '<' $@59 . optional_function_argument_list optional_function_type '>' $@60

    '('  shift, and go to state 319

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 580


State 409

  664 type_declaration_no_options: "tuple" '<' $@61 . tuple_type_list '>' $@62

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 581

    name_in_namespace            go to state 254
    tuple_type                   go to state 582
    tuple_type_list              go to state 583
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 584


State 410

  667 type_declaration_no_options: "variant" '<' $@63 . variant_type_list '>' $@64

    "name"  shift, and go to state 263

    variant_type       go to state 264
    variant_type_list  go to state 585


State 411

  368 expr: "true" .

    $default  reduce using rule 368 (expr)


State 412

  369 expr: "false" .

    $default  reduce using rule 369 (expr)


State 413

  256 expr_new: "new" . new_type_declaration
  257         | "new" . new_type_declaration '(' ')'
  258         | "new" . new_type_declaration '(' expr_list ')'
  259         | "new" . make_decl

    "::"    shift, and go to state 52
    "[["    shift, and go to state 434
    "[{"    shift, and go to state 435
    "{{"    shift, and go to state 436
    "name"  shift, and go to state 53
    '<'     shift, and go to state 586

    name_in_namespace           go to state 254
    new_type_declaration        go to state 587
    structure_type_declaration  go to state 588
    make_decl                   go to state 589
    make_struct_decl            go to state 474
    make_dim_decl               go to state 475
    make_table_decl             go to state 476
    array_comprehension         go to state 477


State 414

  291 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  292               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  293               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 590


State 415

  290 expr_type_decl: "type" . '<' $@16 type_declaration '>' $@17

    '<'  shift, and go to state 591


State 416

  362 expr: "null" .

    $default  reduce using rule 362 (expr)


State 417

  415 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 592


State 418

  281 expr_cast: "cast" . '<' $@10 type_declaration_no_options '>' $@11 expr

    '<'  shift, and go to state 593


State 419

  284 expr_cast: "upcast" . '<' $@12 type_declaration_no_options '>' $@13 expr

    '<'  shift, and go to state 594


State 420

  416 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 595


State 421

  287 expr_cast: "reinterpret" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 596


State 422

  446 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 597


State 423

  592 basic_type_declaration: "bitfield" .

    $default  reduce using rule 592 (basic_type_declaration)


State 424

  417 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  418     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 598


State 425

  398 expr: "++" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 599
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 426

  399 expr: "--" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 600
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 427

  448 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 601


State 428

  449 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 602


State 429

  450 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 603


State 430

  451 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 604


State 431

  452 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 605


State 432

  454 expr_mtag: "$c" . '(' expr ')' '(' ')'
  455          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 606


State 433

  453 expr_mtag: "..." .

    $default  reduce using rule 453 (expr_mtag)


State 434

  705 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  706                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  707                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  708                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  718 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  725 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 607
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 608


State 435

  709 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  710                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  719 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  726 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 609
    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 610


State 436

  722 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 611
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_map_tuple          go to state 612
    make_dim_decl           go to state 475
    make_table              go to state 613
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 437

  312 expr_numeric_const: "integer constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 438

  314 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 314 (expr_numeric_const)


State 439

  313 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 440

  315 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 315 (expr_numeric_const)


State 441

  316 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 316 (expr_numeric_const)


State 442

  317 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 317 (expr_numeric_const)


State 443

  318 expr_numeric_const: "double constant" .

    $default  reduce using rule 318 (expr_numeric_const)


State 444

  242 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    '<'  shift, and go to state 614


State 445

   30 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 27 (string_builder_body)

    string_builder_body  go to state 615


State 446

  375 expr: '-' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 616
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 447

  374 expr: '+' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 617
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 448

  414 expr: '*' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 618
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 449

  373 expr: '~' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 619
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 450

  372 expr: '!' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 620
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 451

  402 expr: '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 621
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 452

  299 block_or_lambda: '$' .

    $default  reduce using rule 299 (block_or_lambda)


State 453

  300 block_or_lambda: '@' .
  301                | '@' . '@'
  350 func_addr_expr: '@' . '@' func_addr_name
  353               | '@' . '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  356               | '@' . '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  463 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 622

    $default  reduce using rule 300 (block_or_lambda)


State 454

  366 expr: string_builder .

    $default  reduce using rule 366 (expr)


State 455

  365 expr: expr_reader .

    $default  reduce using rule 365 (expr)


State 456

  310 expr_block: expression_block .

    $default  reduce using rule 310 (expr_block)


State 457

  447 expr: expression_keyword .

    $default  reduce using rule 447 (expr)


State 458

  344 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  345                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  363 expr: name_in_namespace .
  410     | name_in_namespace . '(' ')'
  411     | name_in_namespace . '(' expr_list ')'
  445     | name_in_namespace . "name"

    "name"  shift, and go to state 623
    '('     shift, and go to state 624

    "name"    [reduce using rule 363 (expr)]
    '('       [reduce using rule 363 (expr)]
    $default  reduce using rule 363 (expr)


State 459

  439 expr: expr_new .

    $default  reduce using rule 439 (expr)


State 460

  438 expr: expr_cast .

    $default  reduce using rule 438 (expr)


State 461

  437 expr: expr_type_decl .

    $default  reduce using rule 437 (expr)


State 462

  436 expr: expr_type_info .

    $default  reduce using rule 436 (expr)


State 463

  311 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 13

    $default  reduce using rule 114 (optional_annotation_list)

    optional_annotation_list  go to state 625


State 464

  442 expr: expr_block .

    $default  reduce using rule 442 (expr)


State 465

  364 expr: expr_numeric_const .

    $default  reduce using rule 364 (expr)


State 466

  441 expr: expr_named_call .

    $default  reduce using rule 441 (expr)


State 467

  440 expr: expr_method_call .

    $default  reduce using rule 440 (expr)


State 468

  409 expr: func_addr_expr .

    $default  reduce using rule 409 (expr)


State 469

  370 expr: expr_field .

    $default  reduce using rule 370 (expr)


State 470

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  602 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 661


State 471

  371 expr: expr_mtag .

    $default  reduce using rule 371 (expr)


State 472

  412 expr: basic_type_declaration . '(' ')'
  413     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 662


State 473

  367 expr: make_decl .

    $default  reduce using rule 367 (expr)


State 474

  677 make_decl: make_struct_decl .

    $default  reduce using rule 677 (make_decl)


State 475

  678 make_decl: make_dim_decl .

    $default  reduce using rule 678 (make_decl)


State 476

  679 make_decl: make_table_decl .

    $default  reduce using rule 679 (make_decl)


State 477

  680 make_decl: array_comprehension .

    $default  reduce using rule 680 (make_decl)


State 478

  625 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 625 (type_declaration_no_options)


State 479

  626 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 626 (type_declaration_no_options)


State 480

  619 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 619 (type_declaration_no_options)


State 481

  621 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 621 (type_declaration_no_options)


State 482

  616 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 663


State 483

  624 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 624 (type_declaration_no_options)


State 484

  615 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 615 (type_declaration_no_options)


State 485

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  614 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ']'    shift, and go to state 664


State 486

  670 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 670 (type_declaration)


State 487

  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"
  669 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362

    $default  reduce using rule 669 (type_declaration)


State 488

  604 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 604 (bitfield_bits)


State 489

  676 bitfield_alias_declaration: "bitfield" $@67 "name" $@68 '{' bitfield_bits ';' '}' .

    $default  reduce using rule 676 (bitfield_alias_declaration)


State 490

  494 variant_type: "name" ':' type_declaration .
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363

    $default  reduce using rule 494 (variant_type)


State 491

  673 variant_alias_declaration: "variant" $@65 "name" $@66 '{' variant_type_list ';' '}' .

    $default  reduce using rule 673 (variant_alias_declaration)


State 492

  496 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 496 (variant_type_list)


State 493

  180 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 180 (function_name)


State 494

  170 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 170 (function_name)


State 495

  487 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 665
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 496

  486 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 497
    "name"  shift, and go to state 498

    variable_declaration         go to state 666
    variable_name_with_pos_list  go to state 500


State 497

  562 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 667


State 498

  561 variable_name_with_pos_list: "name" .
  563                            | "name" . "aka" "name"

    "aka"  shift, and go to state 668

    $default  reduce using rule 561 (variable_name_with_pos_list)


State 499

  485 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 485 (function_argument_declaration)


State 500

  499 variable_declaration: variable_name_with_pos_list .
  500                     | variable_name_with_pos_list . '&'
  501                     | variable_name_with_pos_list . ':' type_declaration
  502                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  503                     | variable_name_with_pos_list . copy_or_move expr
  504                     | variable_name_with_pos_list . copy_or_move expr_pipe
  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 669
    ','   shift, and go to state 670
    '='   shift, and go to state 671
    ':'   shift, and go to state 672
    '&'   shift, and go to state 673

    $default  reduce using rule 499 (variable_declaration)

    copy_or_move  go to state 674


State 501

  118 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 118 (optional_function_argument_list)


State 502

  489 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 374
    "[["  shift, and go to state 209

    $default  reduce using rule 464 (optional_field_annotation)

    optional_field_annotation      go to state 376
    function_argument_declaration  go to state 675


State 503

  120 optional_function_type: ':' type_declaration .
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363

    $default  reduce using rule 120 (optional_function_type)


State 504

  238 expressions: expressions error .

    $default  reduce using rule 238 (expressions)


State 505

   75 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 676
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 506

   60 if_or_static_if: "if" .

    $default  reduce using rule 60 (if_or_static_if)


State 507

   61 if_or_static_if: "static_if" .

    $default  reduce using rule 61 (if_or_static_if)


State 508

   73 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 497
    "name"  shift, and go to state 498

    variable_name_with_pos_list  go to state 677


State 509

  262 expression_return_no_pipe: "return" .
  263                          | "return" . expr
  264                          | "return" . "<-" expr
  266 expression_return: "return" . expr_pipe
  267                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "<-"                              shift, and go to state 678
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    $default  reduce using rule 262 (expression_return_no_pipe)

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    expr_pipe               go to state 679
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_assign             go to state 680
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 681
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 510

  260 expression_break: "break" .

    $default  reduce using rule 260 (expression_break)


State 511

  273 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 321

    expression_block  go to state 682


State 512

  250 expression_delete: "delete" . expr
  251                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "explicit"                        shift, and go to state 683
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 684
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 513

   76 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 685
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 514

   78 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 686


State 515

  261 expression_continue: "continue" .

    $default  reduce using rule 261 (expression_continue)


State 516

  235 expression_any: "pass" . ';'

    ';'  shift, and go to state 687


State 517

   52 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 688


State 518

   53 expression_goto: "goto" . "label" "integer constant"
   54                | "goto" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "label"                           shift, and go to state 689
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 690
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 519

   74 expression_unsafe: "unsafe" . expression_block
  446 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 597
    '{'  shift, and go to state 321

    expression_block  go to state 691


State 520

  268 expression_yield_no_pipe: "yield" . expr
  269                         | "yield" . "<-" expr
  271 expression_yield: "yield" . expr_pipe
  272                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "<-"                              shift, and go to state 692
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    expr_pipe               go to state 693
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_assign             go to state 680
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 694
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 521

  246 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 696


State 522

  244 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 697


State 523

  245 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 698


State 524

  239 expr_keyword: "keyword" . expr expression_block
  242 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '<'                               shift, and go to state 614
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 699
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 525

  215 expression_any: ';' .

    $default  reduce using rule 215 (expression_any)


State 526

  213 expression_block: '{' expressions '}' .
  214                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 700

    $default  reduce using rule 213 (expression_block)


State 527

  233 expression_any: expression_label . ';'

    ';'  shift, and go to state 701


State 528

  234 expression_any: expression_goto . ';'

    ';'  shift, and go to state 702


State 529

   70 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 703
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 530

   72 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 704


State 531

  231 expression_any: expression_if_then_else .

    $default  reduce using rule 231 (expression_any)


State 532

  226 expression_any: expression_for_loop .

    $default  reduce using rule 226 (expression_any)


State 533

  223 expression_any: expression_unsafe .

    $default  reduce using rule 223 (expression_any)


State 534

  222 expression_any: expression_while_loop .

    $default  reduce using rule 222 (expression_any)


State 535

  224 expression_any: expression_with .

    $default  reduce using rule 224 (expression_any)


State 536

  225 expression_any: expression_with_alias .

    $default  reduce using rule 225 (expression_any)


State 537

  237 expressions: expressions expression_any .

    $default  reduce using rule 237 (expressions)


State 538

  217 expression_any: expr_keyword .

    $default  reduce using rule 217 (expression_any)


State 539

  216 expression_any: expr_pipe .

    $default  reduce using rule 216 (expression_any)


State 540

  220 expression_any: expression_delete . ';'

    ';'  shift, and go to state 705


State 541

   68 expression_if_one_liner: expression_break .
  227 expression_any: expression_break . ';'

    ';'  shift, and go to state 706

    $default  reduce using rule 68 (expression_if_one_liner)


State 542

   69 expression_if_one_liner: expression_continue .
  228 expression_any: expression_continue . ';'

    ';'  shift, and go to state 707

    $default  reduce using rule 69 (expression_if_one_liner)


State 543

   66 expression_if_one_liner: expression_return_no_pipe .
  265 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 708

    $default  reduce using rule 66 (expression_if_one_liner)


State 544

  229 expression_any: expression_return .

    $default  reduce using rule 229 (expression_any)


State 545

   67 expression_if_one_liner: expression_yield_no_pipe .
  270 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 709

    $default  reduce using rule 67 (expression_if_one_liner)


State 546

  230 expression_any: expression_yield .

    $default  reduce using rule 230 (expression_any)


State 547

  232 expression_any: expression_try_catch .

    $default  reduce using rule 232 (expression_any)


State 548

  278 expression_let: kwd_let . optional_in_scope let_variable_declaration

    "inscope"  shift, and go to state 710

    $default  reduce using rule 277 (optional_in_scope)

    optional_in_scope  go to state 711


State 549

  221 expression_any: expression_let .

    $default  reduce using rule 221 (expression_any)


State 550

  219 expression_any: expr_assign . ';'
  243 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 712
    ';'    shift, and go to state 713


State 551

  218 expression_any: expr_assign_pipe .

    $default  reduce using rule 218 (expression_any)


State 552

   65 expression_if_one_liner: expr .
  319 expr_assign: expr .
  320            | expr . '=' expr
  321            | expr . "<-" expr
  322            | expr . ":=" expr
  323            | expr . "&=" expr
  324            | expr . "|=" expr
  325            | expr . "^=" expr
  326            | expr . "&&=" expr
  327            | expr . "||=" expr
  328            | expr . "^^=" expr
  329            | expr . "+=" expr
  330            | expr . "-=" expr
  331            | expr . "*=" expr
  332            | expr . "/=" expr
  333            | expr . "%=" expr
  334            | expr . "<<=" expr
  335            | expr . ">>=" expr
  336            | expr . "<<<=" expr
  337            | expr . ">>>=" expr
  338 expr_assign_pipe: expr . '=' "@ <|" expr_block
  339                 | expr . '=' "@@ <|" expr_block
  340                 | expr . '=' "$ <|" expr_block
  341                 | expr . "<-" "@ <|" expr_block
  342                 | expr . "<-" "@@ <|" expr_block
  343                 | expr . "<-" "$ <|" expr_block
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "+="    shift, and go to state 714
    "-="    shift, and go to state 715
    "/="    shift, and go to state 716
    "*="    shift, and go to state 717
    "%="    shift, and go to state 718
    "&="    shift, and go to state 719
    "|="    shift, and go to state 720
    "^="    shift, and go to state 721
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    "<<="   shift, and go to state 722
    ">>="   shift, and go to state 723
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "<-"    shift, and go to state 724
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "<<<="  shift, and go to state 726
    ">>>="  shift, and go to state 727
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    "&&="   shift, and go to state 728
    "||="   shift, and go to state 729
    "^^="   shift, and go to state 730
    ".."    shift, and go to state 647
    '='     shift, and go to state 731
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660

    "if"      reduce using rule 65 (expression_if_one_liner)
    $default  reduce using rule 319 (expr_assign)


State 553

  532 enum_list: enum_list . ';'
  533          | enum_list . "name" ';'
  534          | enum_list . "name" '=' expr ';'
  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 383
    ';'     shift, and go to state 384
    '}'     shift, and go to state 732


State 554

  534 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 733
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 555

  533 enum_list: enum_list "name" ';' .

    $default  reduce using rule 533 (enum_list)


State 556

  549 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 549 (optional_structure_parent)


State 557

  479 struct_variable_declaration_list: struct_variable_declaration_list . $@30 structure_variable_declaration ';'
  481                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  483                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  484                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 734
    '}'  shift, and go to state 735

    "def"     reduce using rule 114 (optional_annotation_list)
    $default  reduce using rule 478 ($@30)

    optional_annotation_list  go to state 736
    $@30                      go to state 737


State 558

  522 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 522 (global_variable_declaration_list)


State 559

  465 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 465 (optional_field_annotation)


State 560

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  511 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 738


State 561

  512 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 512 (let_variable_name_with_pos_list)


State 562

  513 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  514                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 739

    $default  reduce using rule 513 (let_variable_name_with_pos_list)


State 563

  515 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  516                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  517                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "<-"        shift, and go to state 564
    "??"        shift, and go to state 357
    ":="        shift, and go to state 565
    '='         shift, and go to state 566
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    ';'         shift, and go to state 740
    '#'         shift, and go to state 362

    copy_or_move_or_clone  go to state 741


State 564

  506 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 506 (copy_or_move_or_clone)


State 565

  507 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 507 (copy_or_move_or_clone)


State 566

  505 copy_or_move_or_clone: '=' .

    $default  reduce using rule 505 (copy_or_move_or_clone)


State 567

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  519                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    expr_pipe               go to state 742
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_assign             go to state 680
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 743
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 568

  634 type_declaration_no_options: "array" '<' $@43 type_declaration . '>' $@44
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 744


State 569

  637 type_declaration_no_options: "table" '<' $@45 table_type_pair . '>' $@46

    '>'  shift, and go to state 745


State 570

  608 table_type_pair: type_declaration .
  609                | type_declaration . ';' type_declaration
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    ';'  shift, and go to state 746

    $default  reduce using rule 608 (table_type_pair)


State 571

  640 type_declaration_no_options: "iterator" '<' $@47 type_declaration . '>' $@48
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 747


State 572

  630 type_declaration_no_options: "smart_ptr" '<' $@41 type_declaration . '>' $@42
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 748


State 573

  601 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 601 (auto_type_declaration)


State 574

  604 bitfield_bits: bitfield_bits . ';' "name"
  607 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits . '>' $@40

    '>'  shift, and go to state 749
    ';'  shift, and go to state 750


State 575

  644 type_declaration_no_options: "block" '<' $@49 type_declaration . '>' $@50
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 751


State 576

  647 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list . optional_function_type '>' $@52

    ':'  shift, and go to state 379

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 752


State 577

  651 type_declaration_no_options: "function" '<' $@53 type_declaration . '>' $@54
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 753


State 578

  654 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list . optional_function_type '>' $@56

    ':'  shift, and go to state 379

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 754


State 579

  658 type_declaration_no_options: "lambda" '<' $@57 type_declaration . '>' $@58
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 755


State 580

  661 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list . optional_function_type '>' $@60

    ':'  shift, and go to state 379

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 756


State 581

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"
  491 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 91
    ':'   shift, and go to state 757

    $default  reduce using rule 247 (name_in_namespace)


State 582

  492 tuple_type_list: tuple_type .

    $default  reduce using rule 492 (tuple_type_list)


State 583

  493 tuple_type_list: tuple_type_list . ';' tuple_type
  664 type_declaration_no_options: "tuple" '<' $@61 tuple_type_list . '>' $@62

    '>'  shift, and go to state 758
    ';'  shift, and go to state 759


State 584

  490 tuple_type: type_declaration .
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363

    $default  reduce using rule 490 (tuple_type)


State 585

  496 variant_type_list: variant_type_list . ';' variant_type
  667 type_declaration_no_options: "variant" '<' $@63 variant_type_list . '>' $@64

    '>'  shift, and go to state 760
    ';'  shift, and go to state 761


State 586

  254 new_type_declaration: '<' . $@8 type_declaration '>' $@9

    $default  reduce using rule 252 ($@8)

    $@8  go to state 762


State 587

  256 expr_new: "new" new_type_declaration .
  257         | "new" new_type_declaration . '(' ')'
  258         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 763

    '('       [reduce using rule 256 (expr_new)]
    $default  reduce using rule 256 (expr_new)


State 588

  255 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 255 (new_type_declaration)


State 589

  259 expr_new: "new" make_decl .

    $default  reduce using rule 259 (expr_new)


State 590

  291 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  292               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  293               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 52
    "name"  shift, and go to state 53

    name_in_namespace  go to state 764


State 591

  290 expr_type_decl: "type" '<' . $@16 type_declaration '>' $@17

    $default  reduce using rule 288 ($@16)

    $@16  go to state 765


State 592

  415 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 766
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 593

  281 expr_cast: "cast" '<' . $@10 type_declaration_no_options '>' $@11 expr

    $default  reduce using rule 279 ($@10)

    $@10  go to state 767


State 594

  284 expr_cast: "upcast" '<' . $@12 type_declaration_no_options '>' $@13 expr

    $default  reduce using rule 282 ($@12)

    $@12  go to state 768


State 595

  416 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 769
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 596

  287 expr_cast: "reinterpret" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 285 ($@14)

    $@14  go to state 770


State 597

  446 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 771
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 598

  417 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  418     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 772


State 599

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  398     | "++" expr .
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 398 (expr)


State 600

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  399     | "--" expr .
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 399 (expr)


State 601

  448 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 773
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 602

  449 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 774
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 603

  450 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 775
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 604

  451 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 776
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 605

  452 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 777
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 606

  454 expr_mtag: "$c" '(' . expr ')' '(' ')'
  455          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 778
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 607

  725 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 497
    "name"  shift, and go to state 498

    variable_name_with_pos_list  go to state 779


State 608

  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"
  705 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  706                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  707                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  708                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  718 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "const"                           shift, and go to state 353
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "where"                           shift, and go to state 780
    "reinterpret"                     shift, and go to state 421
    "implicit"                        shift, and go to state 354
    "explicit"                        shift, and go to state 355
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "=="                              shift, and go to state 356
    "??"                              shift, and go to state 357
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "$f"                              shift, and go to state 781
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 782
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '?'                               shift, and go to state 358
    '&'                               shift, and go to state 359
    '-'                               shift, and go to state 783
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '['                               shift, and go to state 361
    '('                               shift, and go to state 784
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321
    '#'                               shift, and go to state 362

    $default  reduce using rule 691 (optional_block)

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 785
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_fields      go to state 786
    make_struct_dim         go to state 787
    optional_block          go to state 788
    make_struct_decl        go to state 474
    make_tuple              go to state 789
    make_dim                go to state 790
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 609

  726 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 497
    "name"  shift, and go to state 498

    variable_name_with_pos_list  go to state 791


State 610

  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"
  709 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  710                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  719 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "const"                           shift, and go to state 353
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "implicit"                        shift, and go to state 354
    "explicit"                        shift, and go to state 355
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "=="                              shift, and go to state 356
    "??"                              shift, and go to state 357
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "$f"                              shift, and go to state 781
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 782
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '?'                               shift, and go to state 358
    '&'                               shift, and go to state 359
    '-'                               shift, and go to state 783
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '['                               shift, and go to state 361
    '('                               shift, and go to state 792
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321
    '#'                               shift, and go to state 362

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 785
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_fields      go to state 786
    make_struct_dim         go to state 793
    make_struct_decl        go to state 474
    make_tuple              go to state 789
    make_dim                go to state 794
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 611

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  714 make_map_tuple: expr . "=>" expr
  715               | expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "=>"   shift, and go to state 795
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 715 (make_map_tuple)


State 612

  720 make_table: make_map_tuple .

    $default  reduce using rule 720 (make_table)


State 613

  721 make_table: make_table . ';' make_map_tuple
  722 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 796
    ';'    shift, and go to state 797
    '}'    shift, and go to state 798

    optional_trailing_semicolon_cur_cur  go to state 799


State 614

  242 expression_keyword: "keyword" '<' . $@6 type_declaration_no_options '>' $@7 expr

    $default  reduce using rule 240 ($@6)

    $@6  go to state 800


State 615

   28 string_builder_body: string_builder_body . character_sequence
   29                    | string_builder_body . "{" expr "}"
   30 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 154
    STRING_CHARACTER_ESC  shift, and go to state 155
    "end of the string"   shift, and go to state 801
    "{"                   shift, and go to state 802

    character_sequence  go to state 803


State 616

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  375 expr: '-' expr .
  376     | expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 375 (expr)


State 617

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  374 expr: '+' expr .
  376     | expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 374 (expr)


State 618

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  414     | '*' expr .
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 414 (expr)


State 619

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  373 expr: '~' expr .
  376     | expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 373 (expr)


State 620

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  372 expr: '!' expr .
  376     | expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 372 (expr)


State 621

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  402     | '(' expr . ')'
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 804


State 622

  301 block_or_lambda: '@' '@' .
  350 func_addr_expr: '@' '@' . func_addr_name
  353               | '@' '@' . '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  356               | '@' '@' . '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  463 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 52
    "$i"    shift, and go to state 805
    "$c"    shift, and go to state 806
    "name"  shift, and go to state 53
    '<'     shift, and go to state 807

    $default  reduce using rule 301 (block_or_lambda)

    name_in_namespace  go to state 808
    func_addr_name     go to state 809


State 623

  445 expr: name_in_namespace "name" .

    $default  reduce using rule 445 (expr)


State 624

  344 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  345                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  410 expr: name_in_namespace '(' . ')'
  411     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '['                               shift, and go to state 810
    '('                               shift, and go to state 451
    ')'                               shift, and go to state 811
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    expr_list               go to state 812
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 813
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 625

  311 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 814

    $default  reduce using rule 308 (optional_capture_list)

    optional_capture_list  go to state 815


State 626

  423 expr: expr "is" . "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr "is" . basic_type_declaration
  425     | expr "is" . "name"
  462 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 816
    "bool"      shift, and go to state 220
    "void"      shift, and go to state 221
    "string"    shift, and go to state 222
    "int"       shift, and go to state 224
    "int2"      shift, and go to state 225
    "int3"      shift, and go to state 226
    "int4"      shift, and go to state 227
    "uint"      shift, and go to state 228
    "bitfield"  shift, and go to state 423
    "uint2"     shift, and go to state 230
    "uint3"     shift, and go to state 231
    "uint4"     shift, and go to state 232
    "float"     shift, and go to state 233
    "float2"    shift, and go to state 234
    "float3"    shift, and go to state 235
    "float4"    shift, and go to state 236
    "range"     shift, and go to state 237
    "urange"    shift, and go to state 238
    "range64"   shift, and go to state 239
    "urange64"  shift, and go to state 240
    "int64"     shift, and go to state 242
    "uint64"    shift, and go to state 243
    "double"    shift, and go to state 244
    "int8"      shift, and go to state 247
    "uint8"     shift, and go to state 248
    "int16"     shift, and go to state 249
    "uint16"    shift, and go to state 250
    "$f"        shift, and go to state 817
    "name"      shift, and go to state 818

    basic_type_declaration  go to state 819


State 627

  426 expr: expr "as" . "name"
  429     | expr "as" . "type" '<' $@26 type_declaration '>' $@27
  430     | expr "as" . basic_type_declaration
  460 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 820
    "bool"      shift, and go to state 220
    "void"      shift, and go to state 221
    "string"    shift, and go to state 222
    "int"       shift, and go to state 224
    "int2"      shift, and go to state 225
    "int3"      shift, and go to state 226
    "int4"      shift, and go to state 227
    "uint"      shift, and go to state 228
    "bitfield"  shift, and go to state 423
    "uint2"     shift, and go to state 230
    "uint3"     shift, and go to state 231
    "uint4"     shift, and go to state 232
    "float"     shift, and go to state 233
    "float2"    shift, and go to state 234
    "float3"    shift, and go to state 235
    "float4"    shift, and go to state 236
    "range"     shift, and go to state 237
    "urange"    shift, and go to state 238
    "range64"   shift, and go to state 239
    "urange64"  shift, and go to state 240
    "int64"     shift, and go to state 242
    "uint64"    shift, and go to state 243
    "double"    shift, and go to state 244
    "int8"      shift, and go to state 247
    "uint8"     shift, and go to state 248
    "int16"     shift, and go to state 249
    "uint16"    shift, and go to state 250
    "$f"        shift, and go to state 821
    "name"      shift, and go to state 822

    basic_type_declaration  go to state 823


State 628

  376 expr: expr "<<" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 824
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 629

  377 expr: expr ">>" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 825
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 630

  400 expr: expr "++" .

    $default  reduce using rule 400 (expr)


State 631

  401 expr: expr "--" .

    $default  reduce using rule 401 (expr)


State 632

  389 expr: expr "<=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 826
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 633

  390 expr: expr ">=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 827
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 634

  387 expr: expr "==" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 828
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 635

  388 expr: expr "!=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 829
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 636

  346 expr_method_call: expr "->" . "name" '(' ')'
  347                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 830


State 637

  419 expr: expr "??" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 831
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 638

  407 expr: expr "?." . "name"
  457 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 832
    "name"  shift, and go to state 833


State 639

  405 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 834
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 640

  443 expr: expr "<|" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 835
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 641

  444 expr: expr "|>" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 836
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 642

  378 expr: expr "<<<" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 837
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 643

  379 expr: expr ">>>" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 838
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 644

  394 expr: expr "&&" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 839
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 645

  395 expr: expr "||" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 840
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 646

  396 expr: expr "^^" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 841
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 647

  397 expr: expr ".." . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 842
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 648

  420 expr: expr '?' . expr ':' expr
  431     | expr '?' . "as" "name"
  434     | expr '?' . "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr '?' . "as" basic_type_declaration
  461 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "as"                              shift, and go to state 843
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 844
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 649

  392 expr: expr '|' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 845
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 650

  393 expr: expr '^' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 846
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 651

  391 expr: expr '&' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 847
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 652

  385 expr: expr '<' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 848
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 653

  386 expr: expr '>' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 849
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 654

  381 expr: expr '-' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 850
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 655

  380 expr: expr '+' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 851
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 656

  382 expr: expr '*' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 852
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 657

  383 expr: expr '/' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 853
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 658

  384 expr: expr '%' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 854
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 659

  357 expr_field: expr '.' . "name"
  358           | expr '.' . '.' "name"
  361           | expr '.' . $@22 error $@23
  404 expr: expr '.' . '[' expr ']'
  406     | expr '.' . "?[" expr ']'
  408     | expr '.' . "?." "name"
  456 expr_mtag: expr '.' . "$f" '(' expr ')'
  458          | expr '.' . '.' "$f" '(' expr ')'
  459          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 855
    "?["    shift, and go to state 856
    "$f"    shift, and go to state 857
    "name"  shift, and go to state 858
    '.'     shift, and go to state 859
    '['     shift, and go to state 860

    $default  reduce using rule 359 ($@22)

    $@22  go to state 861


State 660

  403 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 862
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 661

  602 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 602 (auto_type_declaration)


State 662

  412 expr: basic_type_declaration '(' . ')'
  413     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    ')'                               shift, and go to state 863
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    expr_list               go to state 864
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 813
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 663

  616 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 616 (type_declaration_no_options)


State 664

  614 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 614 (type_declaration_no_options)


State 665

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  487 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 865


State 666

  486 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 486 (function_argument_declaration)


State 667

  562 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 866
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 668

  563 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 867


State 669

  498 copy_or_move: "<-" .

    $default  reduce using rule 498 (copy_or_move)


State 670

  564 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  565                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 868


State 671

  497 copy_or_move: '=' .

    $default  reduce using rule 497 (copy_or_move)


State 672

  501 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  502                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 869


State 673

  500 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 500 (variable_declaration)


State 674

  503 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  504                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    expr_pipe               go to state 870
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_assign             go to state 680
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 871
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 675

  489 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 489 (function_argument_list)


State 676

   75 expression_while_loop: "while" expr . expression_block
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    '{'    shift, and go to state 321

    expression_block  go to state 872


State 677

   73 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 873
    ','   shift, and go to state 670


State 678

  264 expression_return_no_pipe: "return" "<-" . expr
  267 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    expr_pipe               go to state 874
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_assign             go to state 680
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 875
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 679

  266 expression_return: "return" expr_pipe .

    $default  reduce using rule 266 (expression_return)


State 680

  243 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 712


State 681

  263 expression_return_no_pipe: "return" expr .
  319 expr_assign: expr .
  320            | expr . '=' expr
  321            | expr . "<-" expr
  322            | expr . ":=" expr
  323            | expr . "&=" expr
  324            | expr . "|=" expr
  325            | expr . "^=" expr
  326            | expr . "&&=" expr
  327            | expr . "||=" expr
  328            | expr . "^^=" expr
  329            | expr . "+=" expr
  330            | expr . "-=" expr
  331            | expr . "*=" expr
  332            | expr . "/=" expr
  333            | expr . "%=" expr
  334            | expr . "<<=" expr
  335            | expr . ">>=" expr
  336            | expr . "<<<=" expr
  337            | expr . ">>>=" expr
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "+="    shift, and go to state 714
    "-="    shift, and go to state 715
    "/="    shift, and go to state 716
    "*="    shift, and go to state 717
    "%="    shift, and go to state 718
    "&="    shift, and go to state 719
    "|="    shift, and go to state 720
    "^="    shift, and go to state 721
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    "<<="   shift, and go to state 722
    ">>="   shift, and go to state 723
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "<-"    shift, and go to state 876
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "<<<="  shift, and go to state 726
    ">>>="  shift, and go to state 727
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    "&&="   shift, and go to state 728
    "||="   shift, and go to state 729
    "^^="   shift, and go to state 730
    ".."    shift, and go to state 647
    '='     shift, and go to state 877
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660

    " <|"     reduce using rule 319 (expr_assign)
    $default  reduce using rule 263 (expression_return_no_pipe)


State 682

  273 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 878


State 683

  251 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 879
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 684

  250 expression_delete: "delete" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 250 (expression_delete)


State 685

   76 expression_with: "with" expr . expression_block
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    '{'    shift, and go to state 321

    expression_block  go to state 880


State 686

   78 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 881


State 687

  235 expression_any: "pass" ';' .

    $default  reduce using rule 235 (expression_any)


State 688

   52 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 882


State 689

   53 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 883


State 690

   54 expression_goto: "goto" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 54 (expression_goto)


State 691

   74 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 74 (expression_unsafe)


State 692

  269 expression_yield_no_pipe: "yield" "<-" . expr
  272 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    expr_pipe               go to state 884
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_assign             go to state 680
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 885
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 693

  271 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 271 (expression_yield)


State 694

  268 expression_yield_no_pipe: "yield" expr .
  319 expr_assign: expr .
  320            | expr . '=' expr
  321            | expr . "<-" expr
  322            | expr . ":=" expr
  323            | expr . "&=" expr
  324            | expr . "|=" expr
  325            | expr . "^=" expr
  326            | expr . "&&=" expr
  327            | expr . "||=" expr
  328            | expr . "^^=" expr
  329            | expr . "+=" expr
  330            | expr . "-=" expr
  331            | expr . "*=" expr
  332            | expr . "/=" expr
  333            | expr . "%=" expr
  334            | expr . "<<=" expr
  335            | expr . ">>=" expr
  336            | expr . "<<<=" expr
  337            | expr . ">>>=" expr
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "+="    shift, and go to state 714
    "-="    shift, and go to state 715
    "/="    shift, and go to state 716
    "*="    shift, and go to state 717
    "%="    shift, and go to state 718
    "&="    shift, and go to state 719
    "|="    shift, and go to state 720
    "^="    shift, and go to state 721
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    "<<="   shift, and go to state 722
    ">>="   shift, and go to state 723
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "<-"    shift, and go to state 876
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "<<<="  shift, and go to state 726
    ">>>="  shift, and go to state 727
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    "&&="   shift, and go to state 728
    "||="   shift, and go to state 729
    "^^="   shift, and go to state 730
    ".."    shift, and go to state 647
    '='     shift, and go to state 877
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660

    " <|"     reduce using rule 319 (expr_assign)
    $default  reduce using rule 268 (expression_yield_no_pipe)


State 695

  300 block_or_lambda: '@' .
  301                | '@' . '@'

    '@'  shift, and go to state 886

    $default  reduce using rule 300 (block_or_lambda)


State 696

  246 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 246 (expr_pipe)


State 697

  244 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 244 (expr_pipe)


State 698

  245 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 245 (expr_pipe)


State 699

  239 expr_keyword: "keyword" expr . expression_block
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    '{'    shift, and go to state 321

    expression_block  go to state 887


State 700

  214 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 888


State 701

  233 expression_any: expression_label ';' .

    $default  reduce using rule 233 (expression_any)


State 702

  234 expression_any: expression_goto ';' .

    $default  reduce using rule 234 (expression_any)


State 703

   70 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    '{'    shift, and go to state 321

    expression_block  go to state 889


State 704

   72 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 71 ($@3)

    $@3  go to state 890


State 705

  220 expression_any: expression_delete ';' .

    $default  reduce using rule 220 (expression_any)


State 706

  227 expression_any: expression_break ';' .

    $default  reduce using rule 227 (expression_any)


State 707

  228 expression_any: expression_continue ';' .

    $default  reduce using rule 228 (expression_any)


State 708

  265 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 265 (expression_return)


State 709

  270 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 270 (expression_yield)


State 710

  276 optional_in_scope: "inscope" .

    $default  reduce using rule 276 (optional_in_scope)


State 711

  278 expression_let: kwd_let optional_in_scope . let_variable_declaration

    "$i"    shift, and go to state 336
    "name"  shift, and go to state 337

    let_variable_name_with_pos_list  go to state 338
    let_variable_declaration         go to state 891


State 712

  243 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 892


State 713

  219 expression_any: expr_assign ';' .

    $default  reduce using rule 219 (expression_any)


State 714

  329 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 893
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 715

  330 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 894
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 716

  332 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 895
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 717

  331 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 896
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 718

  333 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 897
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 719

  323 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 898
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 720

  324 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 899
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 721

  325 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 900
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 722

  334 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 901
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 723

  335 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 902
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 724

  321 expr_assign: expr "<-" . expr
  341 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  342                 | expr "<-" . "@@ <|" expr_block
  343                 | expr "<-" . "$ <|" expr_block

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 903
    "@ <|"                            shift, and go to state 904
    "@@ <|"                           shift, and go to state 905
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 906
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 725

  322 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 907
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 726

  336 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 908
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 727

  337 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 909
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 728

  326 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 910
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 729

  327 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 911
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 730

  328 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 912
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 731

  320 expr_assign: expr '=' . expr
  338 expr_assign_pipe: expr '=' . "@ <|" expr_block
  339                 | expr '=' . "@@ <|" expr_block
  340                 | expr '=' . "$ <|" expr_block

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 913
    "@ <|"                            shift, and go to state 914
    "@@ <|"                           shift, and go to state 915
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 916
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 732

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 547 (enum_declaration)


State 733

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  534 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ';'    shift, and go to state 917


State 734

  115 optional_annotation_list: '[' . annotation_list ']'
  484 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 55
    "private"  shift, and go to state 56
    "|>"       shift, and go to state 57
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 58
    '('        shift, and go to state 59

    annotation_declaration_name   go to state 60
    annotation_declaration_basic  go to state 61
    annotation_declaration        go to state 62
    annotation_list               go to state 918
    name_in_namespace             go to state 64


State 735

  560 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 560 (structure_declaration)


State 736

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  483                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "def"  shift, and go to state 919


State 737

  479 struct_variable_declaration_list: struct_variable_declaration_list $@30 . structure_variable_declaration ';'

    "[["  shift, and go to state 209

    $default  reduce using rule 464 (optional_field_annotation)

    optional_field_annotation       go to state 920
    structure_variable_declaration  go to state 921


State 738

  511 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 511 (let_variable_name_with_pos_list)


State 739

  514 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 922


State 740

  515 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 515 (let_variable_declaration)


State 741

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  517                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    expr_pipe               go to state 923
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_assign             go to state 680
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 924
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 742

  519 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 519 (let_variable_declaration)


State 743

  319 expr_assign: expr .
  320            | expr . '=' expr
  321            | expr . "<-" expr
  322            | expr . ":=" expr
  323            | expr . "&=" expr
  324            | expr . "|=" expr
  325            | expr . "^=" expr
  326            | expr . "&&=" expr
  327            | expr . "||=" expr
  328            | expr . "^^=" expr
  329            | expr . "+=" expr
  330            | expr . "-=" expr
  331            | expr . "*=" expr
  332            | expr . "/=" expr
  333            | expr . "%=" expr
  334            | expr . "<<=" expr
  335            | expr . ">>=" expr
  336            | expr . "<<<=" expr
  337            | expr . ">>>=" expr
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "+="    shift, and go to state 714
    "-="    shift, and go to state 715
    "/="    shift, and go to state 716
    "*="    shift, and go to state 717
    "%="    shift, and go to state 718
    "&="    shift, and go to state 719
    "|="    shift, and go to state 720
    "^="    shift, and go to state 721
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    "<<="   shift, and go to state 722
    ">>="   shift, and go to state 723
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "<-"    shift, and go to state 876
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "<<<="  shift, and go to state 726
    ">>>="  shift, and go to state 727
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    "&&="   shift, and go to state 728
    "||="   shift, and go to state 729
    "^^="   shift, and go to state 730
    ".."    shift, and go to state 647
    '='     shift, and go to state 877
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660
    ';'     shift, and go to state 925

    $default  reduce using rule 319 (expr_assign)


State 744

  634 type_declaration_no_options: "array" '<' $@43 type_declaration '>' . $@44

    $default  reduce using rule 633 ($@44)

    $@44  go to state 926


State 745

  637 type_declaration_no_options: "table" '<' $@45 table_type_pair '>' . $@46

    $default  reduce using rule 636 ($@46)

    $@46  go to state 927


State 746

  609 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 928


State 747

  640 type_declaration_no_options: "iterator" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 639 ($@48)

    $@48  go to state 929


State 748

  630 type_declaration_no_options: "smart_ptr" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 629 ($@42)

    $@42  go to state 930


State 749

  607 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' . $@40

    $default  reduce using rule 606 ($@40)

    $@40  go to state 931


State 750

  604 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 488


State 751

  644 type_declaration_no_options: "block" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 643 ($@50)

    $@50  go to state 932


State 752

  647 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list optional_function_type . '>' $@52

    '>'  shift, and go to state 933


State 753

  651 type_declaration_no_options: "function" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 650 ($@54)

    $@54  go to state 934


State 754

  654 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list optional_function_type . '>' $@56

    '>'  shift, and go to state 935


State 755

  658 type_declaration_no_options: "lambda" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 657 ($@58)

    $@58  go to state 936


State 756

  661 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list optional_function_type . '>' $@60

    '>'  shift, and go to state 937


State 757

  491 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 938


State 758

  664 type_declaration_no_options: "tuple" '<' $@61 tuple_type_list '>' . $@62

    $default  reduce using rule 663 ($@62)

    $@62  go to state 939


State 759

  493 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 581

    name_in_namespace            go to state 254
    tuple_type                   go to state 940
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 584


State 760

  667 type_declaration_no_options: "variant" '<' $@63 variant_type_list '>' . $@64

    $default  reduce using rule 666 ($@64)

    $@64  go to state 941


State 761

  496 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 263

    variant_type  go to state 492


State 762

  254 new_type_declaration: '<' $@8 . type_declaration '>' $@9

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 942


State 763

  257 expr_new: "new" new_type_declaration '(' . ')'
  258         | "new" new_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    ')'                               shift, and go to state 943
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    expr_list               go to state 944
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 813
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 764

  291 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  292               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  293               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '<'                               shift, and go to state 945
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 946
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 765

  290 expr_type_decl: "type" '<' $@16 . type_declaration '>' $@17

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 947


State 766

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  415     | "deref" '(' expr . ')'
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 948


State 767

  281 expr_cast: "cast" '<' $@10 . type_declaration_no_options '>' $@11 expr

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 949


State 768

  284 expr_cast: "upcast" '<' $@12 . type_declaration_no_options '>' $@13 expr

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 950


State 769

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  416     | "addr" '(' expr . ')'
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 951


State 770

  287 expr_cast: "reinterpret" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 952


State 771

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  446     | "unsafe" '(' expr . ')'
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 953


State 772

  417 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  418     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '>'         shift, and go to state 954
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362


State 773

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  448 expr_mtag: "$$" '(' expr . ')'
  456          | expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 955


State 774

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  449 expr_mtag: "$i" '(' expr . ')'
  456          | expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 956


State 775

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  450 expr_mtag: "$v" '(' expr . ')'
  456          | expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 957


State 776

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  451 expr_mtag: "$b" '(' expr . ')'
  456          | expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 958


State 777

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  452 expr_mtag: "$a" '(' expr . ')'
  456          | expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 959


State 778

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  454 expr_mtag: "$c" '(' expr . ')' '(' ')'
  455          | "$c" '(' expr . ')' '(' expr_list ')'
  456          | expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 960


State 779

  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  725 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 961
    ','   shift, and go to state 670


State 780

  692 optional_block: "where" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 962


State 781

  685 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  686                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 963


State 782

  247 name_in_namespace: "name" .
  248                  | "name" . "::" "name"
  681 make_struct_fields: "name" . copy_or_move expr
  682                   | "name" . ":=" expr

    "<-"  shift, and go to state 669
    ":="  shift, and go to state 964
    "::"  shift, and go to state 91
    '='   shift, and go to state 671

    $default  reduce using rule 247 (name_in_namespace)

    copy_or_move  go to state 965


State 783

  375 expr: '-' . expr
  616 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  619                            | type_declaration_no_options '-' . "const"
  621                            | type_declaration_no_options '-' . '&'
  624                            | type_declaration_no_options '-' . '#'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "const"                           shift, and go to state 480
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '&'                               shift, and go to state 481
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '['                               shift, and go to state 482
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321
    '#'                               shift, and go to state 483

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 616
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 784

  402 expr: '(' . expr ')'
  707 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  708                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    ')'                               shift, and go to state 966
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 621
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 785

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  711 make_tuple: expr .
  712           | expr . "=>" expr

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "=>"   shift, and go to state 967
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 711 (make_tuple)


State 786

  683 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  684                   | make_struct_fields . ',' "name" ":=" expr
  687                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  688                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  689 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 968

    $default  reduce using rule 689 (make_struct_dim)


State 787

  690 make_struct_dim: make_struct_dim . ';' make_struct_fields
  705 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 780
    ';'      shift, and go to state 969

    $default  reduce using rule 691 (optional_block)

    optional_block  go to state 970


State 788

  706 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 971
    ",]]"  shift, and go to state 972
    ']'    shift, and go to state 973

    optional_trailing_delim_sqr_sqr  go to state 974


State 789

  713 make_tuple: make_tuple . ',' expr
  716 make_dim: make_tuple .

    ','  shift, and go to state 975

    $default  reduce using rule 716 (make_dim)


State 790

  717 make_dim: make_dim . ';' make_tuple
  718 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 976
    ']'    shift, and go to state 977
    ';'    shift, and go to state 978

    optional_trailing_semicolon_sqr_sqr  go to state 979


State 791

  564 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  565                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  726 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 980
    ','   shift, and go to state 670


State 792

  402 expr: '(' . expr ')'
  710 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    ')'                               shift, and go to state 981
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 621
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 793

  690 make_struct_dim: make_struct_dim . ';' make_struct_fields
  709 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 780
    ';'      shift, and go to state 969

    $default  reduce using rule 691 (optional_block)

    optional_block  go to state 982


State 794

  717 make_dim: make_dim . ';' make_tuple
  719 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 983
    ';'    shift, and go to state 978
    '}'    shift, and go to state 984

    optional_trailing_semicolon_cur_sqr  go to state 985


State 795

  714 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 986
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 796

  694 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 694 (optional_trailing_semicolon_cur_cur)


State 797

  721 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 611
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_map_tuple          go to state 987
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 798

  693 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 988


State 799

  722 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 722 (make_table_decl)


State 800

  242 expression_keyword: "keyword" '<' $@6 . type_declaration_no_options '>' $@7 expr

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 989


State 801

   30 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 30 (string_builder)


State 802

   29 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 990
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 803

   24 character_sequence: character_sequence . STRING_CHARACTER
   25                   | character_sequence . STRING_CHARACTER_ESC
   28 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 211
    STRING_CHARACTER_ESC  shift, and go to state 212

    STRING_CHARACTER      [reduce using rule 28 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 28 (string_builder_body)]
    $default              reduce using rule 28 (string_builder_body)


State 804

  402 expr: '(' expr ')' .

    $default  reduce using rule 402 (expr)


State 805

  349 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 991


State 806

  463 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 992


State 807

  353 func_addr_expr: '@' '@' '<' . $@18 type_declaration_no_options '>' $@19 func_addr_name
  356               | '@' '@' '<' . $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    ':'       reduce using rule 354 ($@20)
    '>'       reduce using rule 354 ($@20)
    '('       reduce using rule 354 ($@20)
    $default  reduce using rule 351 ($@18)

    $@18  go to state 993
    $@20  go to state 994


State 808

  348 func_addr_name: name_in_namespace .

    $default  reduce using rule 348 (func_addr_name)


State 809

  350 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 350 (func_addr_expr)


State 810

  344 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 781
    "name"  shift, and go to state 995

    make_struct_fields  go to state 996


State 811

  410 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 410 (expr)


State 812

  295 expr_list: expr_list . ',' expr
  345 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  411 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 997
    ')'  shift, and go to state 998


State 813

  294 expr_list: expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 294 (expr_list)


State 814

  309 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 999
    ":="  shift, and go to state 1000
    '='   shift, and go to state 1001
    '&'   shift, and go to state 1002

    capture_entry  go to state 1003
    capture_list   go to state 1004


State 815

  311 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 319

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 1005


State 816

  423 expr: expr "is" "type" . '<' $@24 type_declaration_no_options '>' $@25

    '<'  shift, and go to state 1006


State 817

  462 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1007


State 818

  425 expr: expr "is" "name" .

    $default  reduce using rule 425 (expr)


State 819

  424 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 424 (expr)


State 820

  429 expr: expr "as" "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 1008


State 821

  460 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1009


State 822

  426 expr: expr "as" "name" .

    $default  reduce using rule 426 (expr)


State 823

  430 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 430 (expr)


State 824

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  376     | expr "<<" expr .
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '-'   shift, and go to state 654
    '+'   shift, and go to state 655
    '*'   shift, and go to state 656
    '/'   shift, and go to state 657
    '%'   shift, and go to state 658
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 376 (expr)


State 825

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  377     | expr ">>" expr .
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '-'   shift, and go to state 654
    '+'   shift, and go to state 655
    '*'   shift, and go to state 656
    '/'   shift, and go to state 657
    '%'   shift, and go to state 658
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 377 (expr)


State 826

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  389     | expr "<=" expr .
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 389 (expr)


State 827

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  390     | expr ">=" expr .
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 390 (expr)


State 828

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  387     | expr "==" expr .
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 387 (expr)


State 829

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  388     | expr "!=" expr .
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 388 (expr)


State 830

  346 expr_method_call: expr "->" "name" . '(' ')'
  347                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1010


State 831

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  419     | expr "??" expr .
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 419 (expr)


State 832

  457 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1011


State 833

  407 expr: expr "?." "name" .

    $default  reduce using rule 407 (expr)


State 834

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  405     | expr "?[" expr . ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ']'    shift, and go to state 1012


State 835

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  443     | expr "<|" expr .
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 636
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 443 (expr)


State 836

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  444     | expr "|>" expr .
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 636
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 444 (expr)


State 837

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  378     | expr "<<<" expr .
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '-'   shift, and go to state 654
    '+'   shift, and go to state 655
    '*'   shift, and go to state 656
    '/'   shift, and go to state 657
    '%'   shift, and go to state 658
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 378 (expr)


State 838

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  379     | expr ">>>" expr .
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '-'   shift, and go to state 654
    '+'   shift, and go to state 655
    '*'   shift, and go to state 656
    '/'   shift, and go to state 657
    '%'   shift, and go to state 658
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 379 (expr)


State 839

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  394     | expr "&&" expr .
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 394 (expr)


State 840

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  395     | expr "||" expr .
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "^^"   shift, and go to state 646
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 395 (expr)


State 841

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  396     | expr "^^" expr .
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 396 (expr)


State 842

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  397     | expr ".." expr .
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    ".."  error (nonassociative)

    $default  reduce using rule 397 (expr)


State 843

  431 expr: expr '?' "as" . "name"
  434     | expr '?' "as" . "type" '<' $@28 type_declaration '>' $@29
  435     | expr '?' "as" . basic_type_declaration
  461 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1013
    "bool"      shift, and go to state 220
    "void"      shift, and go to state 221
    "string"    shift, and go to state 222
    "int"       shift, and go to state 224
    "int2"      shift, and go to state 225
    "int3"      shift, and go to state 226
    "int4"      shift, and go to state 227
    "uint"      shift, and go to state 228
    "bitfield"  shift, and go to state 423
    "uint2"     shift, and go to state 230
    "uint3"     shift, and go to state 231
    "uint4"     shift, and go to state 232
    "float"     shift, and go to state 233
    "float2"    shift, and go to state 234
    "float3"    shift, and go to state 235
    "float4"    shift, and go to state 236
    "range"     shift, and go to state 237
    "urange"    shift, and go to state 238
    "range64"   shift, and go to state 239
    "urange64"  shift, and go to state 240
    "int64"     shift, and go to state 242
    "uint64"    shift, and go to state 243
    "double"    shift, and go to state 244
    "int8"      shift, and go to state 247
    "uint8"     shift, and go to state 248
    "int16"     shift, and go to state 249
    "uint16"    shift, and go to state 250
    "$f"        shift, and go to state 1014
    "name"      shift, and go to state 1015

    basic_type_declaration  go to state 1016


State 844

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  420     | expr '?' expr . ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    ':'    shift, and go to state 1017
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660


State 845

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  392     | expr '|' expr .
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 392 (expr)


State 846

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  393     | expr '^' expr .
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 393 (expr)


State 847

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  391     | expr '&' expr .
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 391 (expr)


State 848

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  385     | expr '<' expr .
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 385 (expr)


State 849

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  386     | expr '>' expr .
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 386 (expr)


State 850

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  381     | expr '-' expr .
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '*'   shift, and go to state 656
    '/'   shift, and go to state 657
    '%'   shift, and go to state 658
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 381 (expr)


State 851

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  380     | expr '+' expr .
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '*'   shift, and go to state 656
    '/'   shift, and go to state 657
    '%'   shift, and go to state 658
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 380 (expr)


State 852

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  382     | expr '*' expr .
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 382 (expr)


State 853

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  383     | expr '/' expr .
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 383 (expr)


State 854

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  384     | expr '%' expr .
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 626
    "as"  shift, and go to state 627
    "++"  shift, and go to state 630
    "--"  shift, and go to state 631
    "->"  shift, and go to state 636
    "??"  shift, and go to state 637
    "?."  shift, and go to state 638
    "?["  shift, and go to state 639
    "<|"  shift, and go to state 640
    "|>"  shift, and go to state 641
    '.'   shift, and go to state 659
    '['   shift, and go to state 660

    $default  reduce using rule 384 (expr)


State 855

  408 expr: expr '.' "?." . "name"
  459 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1018
    "name"  shift, and go to state 1019


State 856

  406 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1020
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 857

  456 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1021


State 858

  357 expr_field: expr '.' "name" .

    $default  reduce using rule 357 (expr_field)


State 859

  358 expr_field: expr '.' '.' . "name"
  458 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1022
    "name"  shift, and go to state 1023


State 860

  404 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1024
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 861

  361 expr_field: expr '.' $@22 . error $@23

    error  shift, and go to state 1025


State 862

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  403     | expr '[' expr . ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ']'    shift, and go to state 1026


State 863

  412 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 412 (expr)


State 864

  295 expr_list: expr_list . ',' expr
  413 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1027
    ')'  shift, and go to state 1028


State 865

  487 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 487 (function_argument_declaration)


State 866

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  562 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1029


State 867

  563 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 563 (variable_name_with_pos_list)


State 868

  564 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  565                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1030

    $default  reduce using rule 564 (variable_name_with_pos_list)


State 869

  501 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  502                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 669
    '='   shift, and go to state 671
    '|'   shift, and go to state 363

    $default  reduce using rule 501 (variable_declaration)

    copy_or_move  go to state 1031


State 870

  504 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 504 (variable_declaration)


State 871

  319 expr_assign: expr .
  320            | expr . '=' expr
  321            | expr . "<-" expr
  322            | expr . ":=" expr
  323            | expr . "&=" expr
  324            | expr . "|=" expr
  325            | expr . "^=" expr
  326            | expr . "&&=" expr
  327            | expr . "||=" expr
  328            | expr . "^^=" expr
  329            | expr . "+=" expr
  330            | expr . "-=" expr
  331            | expr . "*=" expr
  332            | expr . "/=" expr
  333            | expr . "%=" expr
  334            | expr . "<<=" expr
  335            | expr . ">>=" expr
  336            | expr . "<<<=" expr
  337            | expr . ">>>=" expr
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  503 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "+="    shift, and go to state 714
    "-="    shift, and go to state 715
    "/="    shift, and go to state 716
    "*="    shift, and go to state 717
    "%="    shift, and go to state 718
    "&="    shift, and go to state 719
    "|="    shift, and go to state 720
    "^="    shift, and go to state 721
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    "<<="   shift, and go to state 722
    ">>="   shift, and go to state 723
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "<-"    shift, and go to state 876
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "<<<="  shift, and go to state 726
    ">>>="  shift, and go to state 727
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    "&&="   shift, and go to state 728
    "||="   shift, and go to state 729
    "^^="   shift, and go to state 730
    ".."    shift, and go to state 647
    '='     shift, and go to state 877
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660

    " <|"     reduce using rule 319 (expr_assign)
    $default  reduce using rule 503 (variable_declaration)


State 872

   75 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 75 (expression_while_loop)


State 873

   73 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    expr_list               go to state 1032
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 813
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 874

  267 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 267 (expression_return)


State 875

  264 expression_return_no_pipe: "return" "<-" expr .
  319 expr_assign: expr .
  320            | expr . '=' expr
  321            | expr . "<-" expr
  322            | expr . ":=" expr
  323            | expr . "&=" expr
  324            | expr . "|=" expr
  325            | expr . "^=" expr
  326            | expr . "&&=" expr
  327            | expr . "||=" expr
  328            | expr . "^^=" expr
  329            | expr . "+=" expr
  330            | expr . "-=" expr
  331            | expr . "*=" expr
  332            | expr . "/=" expr
  333            | expr . "%=" expr
  334            | expr . "<<=" expr
  335            | expr . ">>=" expr
  336            | expr . "<<<=" expr
  337            | expr . ">>>=" expr
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "+="    shift, and go to state 714
    "-="    shift, and go to state 715
    "/="    shift, and go to state 716
    "*="    shift, and go to state 717
    "%="    shift, and go to state 718
    "&="    shift, and go to state 719
    "|="    shift, and go to state 720
    "^="    shift, and go to state 721
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    "<<="   shift, and go to state 722
    ">>="   shift, and go to state 723
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "<-"    shift, and go to state 876
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "<<<="  shift, and go to state 726
    ">>>="  shift, and go to state 727
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    "&&="   shift, and go to state 728
    "||="   shift, and go to state 729
    "^^="   shift, and go to state 730
    ".."    shift, and go to state 647
    '='     shift, and go to state 877
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660

    " <|"     reduce using rule 319 (expr_assign)
    $default  reduce using rule 264 (expression_return_no_pipe)


State 876

  321 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 906
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 877

  320 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 916
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 878

  273 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 321

    expression_block  go to state 1033


State 879

  251 expression_delete: "delete" "explicit" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 251 (expression_delete)


State 880

   76 expression_with: "with" expr expression_block .

    $default  reduce using rule 76 (expression_with)


State 881

   78 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 77 ($@4)

    $@4  go to state 1034


State 882

   52 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 52 (expression_label)


State 883

   53 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 53 (expression_goto)


State 884

  272 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 272 (expression_yield)


State 885

  269 expression_yield_no_pipe: "yield" "<-" expr .
  319 expr_assign: expr .
  320            | expr . '=' expr
  321            | expr . "<-" expr
  322            | expr . ":=" expr
  323            | expr . "&=" expr
  324            | expr . "|=" expr
  325            | expr . "^=" expr
  326            | expr . "&&=" expr
  327            | expr . "||=" expr
  328            | expr . "^^=" expr
  329            | expr . "+=" expr
  330            | expr . "-=" expr
  331            | expr . "*=" expr
  332            | expr . "/=" expr
  333            | expr . "%=" expr
  334            | expr . "<<=" expr
  335            | expr . ">>=" expr
  336            | expr . "<<<=" expr
  337            | expr . ">>>=" expr
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "+="    shift, and go to state 714
    "-="    shift, and go to state 715
    "/="    shift, and go to state 716
    "*="    shift, and go to state 717
    "%="    shift, and go to state 718
    "&="    shift, and go to state 719
    "|="    shift, and go to state 720
    "^="    shift, and go to state 721
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    "<<="   shift, and go to state 722
    ">>="   shift, and go to state 723
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "<-"    shift, and go to state 876
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "<<<="  shift, and go to state 726
    ">>>="  shift, and go to state 727
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    "&&="   shift, and go to state 728
    "||="   shift, and go to state 729
    "^^="   shift, and go to state 730
    ".."    shift, and go to state 647
    '='     shift, and go to state 877
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660

    " <|"     reduce using rule 319 (expr_assign)
    $default  reduce using rule 269 (expression_yield_no_pipe)


State 886

  301 block_or_lambda: '@' '@' .

    $default  reduce using rule 301 (block_or_lambda)


State 887

  239 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 239 (expr_keyword)


State 888

  214 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 236 (expressions)

    expressions  go to state 1035


State 889

   70 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1036
    "elif"         shift, and go to state 1037
    "static_elif"  shift, and go to state 1038

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1039
    expression_else      go to state 1040


State 890

   72 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1041
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 891

  278 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 278 (expression_let)


State 892

  243 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 243 (expr_pipe)


State 893

  329 expr_assign: expr "+=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 329 (expr_assign)


State 894

  330 expr_assign: expr "-=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 330 (expr_assign)


State 895

  332 expr_assign: expr "/=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 332 (expr_assign)


State 896

  331 expr_assign: expr "*=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 331 (expr_assign)


State 897

  333 expr_assign: expr "%=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 333 (expr_assign)


State 898

  323 expr_assign: expr "&=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 323 (expr_assign)


State 899

  324 expr_assign: expr "|=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 324 (expr_assign)


State 900

  325 expr_assign: expr "^=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 325 (expr_assign)


State 901

  334 expr_assign: expr "<<=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 334 (expr_assign)


State 902

  335 expr_assign: expr ">>=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 335 (expr_assign)


State 903

  343 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 1042


State 904

  341 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 1043


State 905

  342 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 1044


State 906

  321 expr_assign: expr "<-" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 321 (expr_assign)


State 907

  322 expr_assign: expr ":=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 322 (expr_assign)


State 908

  336 expr_assign: expr "<<<=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 336 (expr_assign)


State 909

  337 expr_assign: expr ">>>=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 337 (expr_assign)


State 910

  326 expr_assign: expr "&&=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 326 (expr_assign)


State 911

  327 expr_assign: expr "||=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 327 (expr_assign)


State 912

  328 expr_assign: expr "^^=" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 328 (expr_assign)


State 913

  340 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 1045


State 914

  338 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 1046


State 915

  339 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 452
    '@'  shift, and go to state 695
    '{'  shift, and go to state 321

    expression_block  go to state 456
    block_or_lambda   go to state 463
    expr_block        go to state 1047


State 916

  320 expr_assign: expr '=' expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 320 (expr_assign)


State 917

  534 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 534 (enum_list)


State 918

  113 annotation_list: annotation_list . ',' annotation_declaration
  115 optional_annotation_list: '[' annotation_list . ']'
  484 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 100
    ']'  shift, and go to state 1048


State 919

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  483                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "public"   shift, and go to state 1049
    "private"  shift, and go to state 1050

    $default  reduce using rule 471 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1051


State 920

  476 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1052

    $default  reduce using rule 474 (optional_static_member_variable)

    optional_static_member_variable  go to state 1053


State 921

  479 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration . ';'

    ';'  shift, and go to state 1054


State 922

  514 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 514 (let_variable_name_with_pos_list)


State 923

  517 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 517 (let_variable_declaration)


State 924

  319 expr_assign: expr .
  320            | expr . '=' expr
  321            | expr . "<-" expr
  322            | expr . ":=" expr
  323            | expr . "&=" expr
  324            | expr . "|=" expr
  325            | expr . "^=" expr
  326            | expr . "&&=" expr
  327            | expr . "||=" expr
  328            | expr . "^^=" expr
  329            | expr . "+=" expr
  330            | expr . "-=" expr
  331            | expr . "*=" expr
  332            | expr . "/=" expr
  333            | expr . "%=" expr
  334            | expr . "<<=" expr
  335            | expr . ">>=" expr
  336            | expr . "<<<=" expr
  337            | expr . ">>>=" expr
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "+="    shift, and go to state 714
    "-="    shift, and go to state 715
    "/="    shift, and go to state 716
    "*="    shift, and go to state 717
    "%="    shift, and go to state 718
    "&="    shift, and go to state 719
    "|="    shift, and go to state 720
    "^="    shift, and go to state 721
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    "<<="   shift, and go to state 722
    ">>="   shift, and go to state 723
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "<-"    shift, and go to state 876
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    ":="    shift, and go to state 725
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "<<<="  shift, and go to state 726
    ">>>="  shift, and go to state 727
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    "&&="   shift, and go to state 728
    "||="   shift, and go to state 729
    "^^="   shift, and go to state 730
    ".."    shift, and go to state 647
    '='     shift, and go to state 877
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660
    ';'     shift, and go to state 1055

    $default  reduce using rule 319 (expr_assign)


State 925

  518 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 518 (let_variable_declaration)


State 926

  634 type_declaration_no_options: "array" '<' $@43 type_declaration '>' $@44 .

    $default  reduce using rule 634 (type_declaration_no_options)


State 927

  637 type_declaration_no_options: "table" '<' $@45 table_type_pair '>' $@46 .

    $default  reduce using rule 637 (type_declaration_no_options)


State 928

  609 table_type_pair: type_declaration ';' type_declaration .
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363

    $default  reduce using rule 609 (table_type_pair)


State 929

  640 type_declaration_no_options: "iterator" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 640 (type_declaration_no_options)


State 930

  630 type_declaration_no_options: "smart_ptr" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 630 (type_declaration_no_options)


State 931

  607 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40 .

    $default  reduce using rule 607 (bitfield_type_declaration)


State 932

  644 type_declaration_no_options: "block" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 644 (type_declaration_no_options)


State 933

  647 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list optional_function_type '>' . $@52

    $default  reduce using rule 646 ($@52)

    $@52  go to state 1056


State 934

  651 type_declaration_no_options: "function" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 651 (type_declaration_no_options)


State 935

  654 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list optional_function_type '>' . $@56

    $default  reduce using rule 653 ($@56)

    $@56  go to state 1057


State 936

  658 type_declaration_no_options: "lambda" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 658 (type_declaration_no_options)


State 937

  661 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list optional_function_type '>' . $@60

    $default  reduce using rule 660 ($@60)

    $@60  go to state 1058


State 938

  491 tuple_type: "name" ':' type_declaration .
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363

    $default  reduce using rule 491 (tuple_type)


State 939

  664 type_declaration_no_options: "tuple" '<' $@61 tuple_type_list '>' $@62 .

    $default  reduce using rule 664 (type_declaration_no_options)


State 940

  493 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 493 (tuple_type_list)


State 941

  667 type_declaration_no_options: "variant" '<' $@63 variant_type_list '>' $@64 .

    $default  reduce using rule 667 (type_declaration_no_options)


State 942

  254 new_type_declaration: '<' $@8 type_declaration . '>' $@9
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 1059


State 943

  257 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 257 (expr_new)


State 944

  258 expr_new: "new" new_type_declaration '(' expr_list . ')'
  295 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1027
    ')'  shift, and go to state 1060


State 945

  292 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  293               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1061


State 946

  291 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1062


State 947

  290 expr_type_decl: "type" '<' $@16 type_declaration . '>' $@17
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 1063


State 948

  415 expr: "deref" '(' expr ')' .

    $default  reduce using rule 415 (expr)


State 949

  281 expr_cast: "cast" '<' $@10 type_declaration_no_options . '>' $@11 expr
  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '>'         shift, and go to state 1064
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362


State 950

  284 expr_cast: "upcast" '<' $@12 type_declaration_no_options . '>' $@13 expr
  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '>'         shift, and go to state 1065
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362


State 951

  416 expr: "addr" '(' expr ')' .

    $default  reduce using rule 416 (expr)


State 952

  287 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options . '>' $@15 expr
  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '>'         shift, and go to state 1066
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362


State 953

  446 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 446 (expr)


State 954

  417 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  418     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 814

    $default  reduce using rule 308 (optional_capture_list)

    optional_capture_list  go to state 1067


State 955

  448 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 448 (expr_mtag)


State 956

  449 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 449 (expr_mtag)


State 957

  450 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 450 (expr_mtag)


State 958

  451 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 451 (expr_mtag)


State 959

  452 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 452 (expr_mtag)


State 960

  454 expr_mtag: "$c" '(' expr ')' . '(' ')'
  455          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1068


State 961

  725 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    expr_list               go to state 1069
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 813
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 962

  692 optional_block: "where" expr_block .

    $default  reduce using rule 692 (optional_block)


State 963

  685 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  686                   | "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1070
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 964

  682 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1071
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 965

  681 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1072
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 966

  707 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  708                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 780
    "$f"     shift, and go to state 781
    "name"   shift, and go to state 995

    $default  reduce using rule 691 (optional_block)

    make_struct_fields  go to state 786
    make_struct_dim     go to state 1073
    optional_block      go to state 1074


State 967

  712 make_tuple: expr "=>" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1075
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 968

  683 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  684                   | make_struct_fields ',' . "name" ":=" expr
  687                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  688                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1076
    "name"  shift, and go to state 1077


State 969

  690 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 781
    "name"  shift, and go to state 995

    make_struct_fields  go to state 1078


State 970

  705 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 971
    ",]]"  shift, and go to state 972
    ']'    shift, and go to state 973

    optional_trailing_delim_sqr_sqr  go to state 1079


State 971

  700 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 700 (optional_trailing_delim_sqr_sqr)


State 972

  701 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 701 (optional_trailing_delim_sqr_sqr)


State 973

  699 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1080


State 974

  706 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 706 (make_struct_decl)


State 975

  713 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1081
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 976

  698 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 698 (optional_trailing_semicolon_sqr_sqr)


State 977

  697 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1082


State 978

  717 make_dim: make_dim ';' . make_tuple

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 785
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_tuple              go to state 1083
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 979

  718 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 718 (make_dim_decl)


State 980

  726 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    expr_list               go to state 1084
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 813
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 981

  710 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 781
    "name"  shift, and go to state 995

    make_struct_fields  go to state 786
    make_struct_dim     go to state 1085


State 982

  709 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1086
    ",}]"  shift, and go to state 1087
    '}'    shift, and go to state 1088

    optional_trailing_delim_cur_sqr  go to state 1089


State 983

  696 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 696 (optional_trailing_semicolon_cur_sqr)


State 984

  695 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1090


State 985

  719 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 719 (make_dim_decl)


State 986

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  714 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 714 (make_map_tuple)


State 987

  721 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 721 (make_table)


State 988

  693 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 693 (optional_trailing_semicolon_cur_cur)


State 989

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options . '>' $@7 expr
  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '>'         shift, and go to state 1091
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362


State 990

   29 string_builder_body: string_builder_body "{" expr . "}"
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    "}"    shift, and go to state 1092
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660


State 991

  349 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1093
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 992

  463 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1094
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 993

  353 func_addr_expr: '@' '@' '<' $@18 . type_declaration_no_options '>' $@19 func_addr_name

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 1095


State 994

  356 func_addr_expr: '@' '@' '<' $@20 . optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    '('  shift, and go to state 319

    $default  reduce using rule 116 (optional_function_argument_list)

    optional_function_argument_list  go to state 1096


State 995

  681 make_struct_fields: "name" . copy_or_move expr
  682                   | "name" . ":=" expr

    "<-"  shift, and go to state 669
    ":="  shift, and go to state 964
    '='   shift, and go to state 671

    copy_or_move  go to state 965


State 996

  344 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  683 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  684                   | make_struct_fields . ',' "name" ":=" expr
  687                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  688                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 968
    ']'  shift, and go to state 1097


State 997

  295 expr_list: expr_list ',' . expr
  345 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '['                               shift, and go to state 1098
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1099
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 998

  411 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 411 (expr)


State 999

  304 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1100


State 1000

  305 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1101


State 1001

  303 capture_entry: '=' . "name"

    "name"  shift, and go to state 1102


State 1002

  302 capture_entry: '&' . "name"

    "name"  shift, and go to state 1103


State 1003

  306 capture_list: capture_entry .

    $default  reduce using rule 306 (capture_list)


State 1004

  307 capture_list: capture_list . ',' capture_entry
  309 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1104
    ']'  shift, and go to state 1105


State 1005

  311 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 379

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 1106


State 1006

  423 expr: expr "is" "type" '<' . $@24 type_declaration_no_options '>' $@25

    $default  reduce using rule 421 ($@24)

    $@24  go to state 1107


State 1007

  462 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1108
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1008

  429 expr: expr "as" "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 427 ($@26)

    $@26  go to state 1109


State 1009

  460 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1110
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1010

  346 expr_method_call: expr "->" "name" '(' . ')'
  347                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    ')'                               shift, and go to state 1111
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    expr_list               go to state 1112
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 813
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1011

  457 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1113
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1012

  405 expr: expr "?[" expr ']' .

    $default  reduce using rule 405 (expr)


State 1013

  434 expr: expr '?' "as" "type" . '<' $@28 type_declaration '>' $@29

    '<'  shift, and go to state 1114


State 1014

  461 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1115


State 1015

  431 expr: expr '?' "as" "name" .

    $default  reduce using rule 431 (expr)


State 1016

  435 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 435 (expr)


State 1017

  420 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1116
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1018

  459 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1117


State 1019

  408 expr: expr '.' "?." "name" .

    $default  reduce using rule 408 (expr)


State 1020

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  406     | expr '.' "?[" expr . ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ']'    shift, and go to state 1118


State 1021

  456 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1119
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1022

  458 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1120


State 1023

  358 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 358 (expr_field)


State 1024

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  404     | expr '.' '[' expr . ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ']'    shift, and go to state 1121


State 1025

  361 expr_field: expr '.' $@22 error . $@23

    $default  reduce using rule 360 ($@23)

    $@23  go to state 1122


State 1026

  403 expr: expr '[' expr ']' .

    $default  reduce using rule 403 (expr)


State 1027

  295 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1099
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1028

  413 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 413 (expr)


State 1029

  562 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 562 (variable_name_with_pos_list)


State 1030

  565 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1123


State 1031

  502 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1124
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1032

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  295 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1027
    ';'  shift, and go to state 1125


State 1033

  273 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 273 (expression_try_catch)


State 1034

   78 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1126
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1035

  214 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  237 expressions: expressions . expression_any
  238            | expressions . error

    error                             shift, and go to state 504
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 505
    "if"                              shift, and go to state 506
    "static_if"                       shift, and go to state 507
    "for"                             shift, and go to state 508
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "return"                          shift, and go to state 509
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 510
    "try"                             shift, and go to state 511
    "delete"                          shift, and go to state 512
    "deref"                           shift, and go to state 417
    "with"                            shift, and go to state 513
    "assume"                          shift, and go to state 514
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 420
    "continue"                        shift, and go to state 515
    "pass"                            shift, and go to state 516
    "reinterpret"                     shift, and go to state 421
    "label"                           shift, and go to state 517
    "goto"                            shift, and go to state 518
    "unsafe"                          shift, and go to state 519
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "yield"                           shift, and go to state 520
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "$ <|"                            shift, and go to state 521
    "@ <|"                            shift, and go to state 522
    "@@ <|"                           shift, and go to state 523
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 524
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    ';'                               shift, and go to state 525
    '{'                               shift, and go to state 321
    '}'                               shift, and go to state 1127

    string_builder             go to state 454
    expr_reader                go to state 455
    expression_label           go to state 527
    expression_goto            go to state 528
    if_or_static_if            go to state 529
    expression_if_one_liner    go to state 530
    expression_if_then_else    go to state 531
    expression_for_loop        go to state 532
    expression_unsafe          go to state 533
    expression_while_loop      go to state 534
    expression_with            go to state 535
    expression_with_alias      go to state 536
    expression_block           go to state 456
    expression_any             go to state 537
    expr_keyword               go to state 538
    expression_keyword         go to state 457
    expr_pipe                  go to state 539
    name_in_namespace          go to state 458
    expression_delete          go to state 540
    expr_new                   go to state 459
    expression_break           go to state 541
    expression_continue        go to state 542
    expression_return_no_pipe  go to state 543
    expression_return          go to state 544
    expression_yield_no_pipe   go to state 545
    expression_yield           go to state 546
    expression_try_catch       go to state 547
    kwd_let                    go to state 548
    expression_let             go to state 549
    expr_cast                  go to state 460
    expr_type_decl             go to state 461
    expr_type_info             go to state 462
    block_or_lambda            go to state 463
    expr_block                 go to state 464
    expr_numeric_const         go to state 465
    expr_assign                go to state 550
    expr_assign_pipe           go to state 551
    expr_named_call            go to state 466
    expr_method_call           go to state 467
    func_addr_expr             go to state 468
    expr_field                 go to state 469
    expr                       go to state 552
    expr_mtag                  go to state 471
    basic_type_declaration     go to state 472
    make_decl                  go to state 473
    make_struct_decl           go to state 474
    make_dim_decl              go to state 475
    make_table_decl            go to state 476
    array_comprehension        go to state 477


State 1036

   58 expression_else: "else" . expression_block

    '{'  shift, and go to state 321

    expression_block  go to state 1128


State 1037

   55 elif_or_static_elif: "elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1038

   56 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1039

   59 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1129
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1040

   70 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 70 (expression_if_then_else)


State 1041

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1130
    "is"    shift, and go to state 626
    "as"    shift, and go to state 627
    "<<"    shift, and go to state 628
    ">>"    shift, and go to state 629
    "++"    shift, and go to state 630
    "--"    shift, and go to state 631
    "<="    shift, and go to state 632
    ">="    shift, and go to state 633
    "=="    shift, and go to state 634
    "!="    shift, and go to state 635
    "->"    shift, and go to state 636
    "??"    shift, and go to state 637
    "?."    shift, and go to state 638
    "?["    shift, and go to state 639
    "<|"    shift, and go to state 640
    "|>"    shift, and go to state 641
    "<<<"   shift, and go to state 642
    ">>>"   shift, and go to state 643
    "&&"    shift, and go to state 644
    "||"    shift, and go to state 645
    "^^"    shift, and go to state 646
    ".."    shift, and go to state 647
    '?'     shift, and go to state 648
    '|'     shift, and go to state 649
    '^'     shift, and go to state 650
    '&'     shift, and go to state 651
    '<'     shift, and go to state 652
    '>'     shift, and go to state 653
    '-'     shift, and go to state 654
    '+'     shift, and go to state 655
    '*'     shift, and go to state 656
    '/'     shift, and go to state 657
    '%'     shift, and go to state 658
    '.'     shift, and go to state 659
    '['     shift, and go to state 660

    $default  reduce using rule 62 (expression_else_one_liner)

    expression_else_one_liner  go to state 1131


State 1042

  343 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 343 (expr_assign_pipe)


State 1043

  341 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 341 (expr_assign_pipe)


State 1044

  342 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 342 (expr_assign_pipe)


State 1045

  340 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 340 (expr_assign_pipe)


State 1046

  338 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 338 (expr_assign_pipe)


State 1047

  339 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 339 (expr_assign_pipe)


State 1048

  115 optional_annotation_list: '[' annotation_list ']' .
  484 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1132

    $default  reduce using rule 115 (optional_annotation_list)


State 1049

  472 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 472 (optional_public_or_private_member_variable)


State 1050

  473 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 473 (optional_public_or_private_member_variable)


State 1051

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@31 function_declaration_header ';'
  483                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "abstract"  shift, and go to state 1133
    "static"    shift, and go to state 1052

    $default  reduce using rule 474 (optional_static_member_variable)

    optional_static_member_variable  go to state 1134


State 1052

  475 optional_static_member_variable: "static" .

    $default  reduce using rule 475 (optional_static_member_variable)


State 1053

  476 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1135
    "sealed"    shift, and go to state 1136

    $default  reduce using rule 466 (optional_override)

    optional_override  go to state 1137


State 1054

  479 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';' .

    $default  reduce using rule 479 (struct_variable_declaration_list)


State 1055

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 516 (let_variable_declaration)


State 1056

  647 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list optional_function_type '>' $@52 .

    $default  reduce using rule 647 (type_declaration_no_options)


State 1057

  654 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list optional_function_type '>' $@56 .

    $default  reduce using rule 654 (type_declaration_no_options)


State 1058

  661 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list optional_function_type '>' $@60 .

    $default  reduce using rule 661 (type_declaration_no_options)


State 1059

  254 new_type_declaration: '<' $@8 type_declaration '>' . $@9

    $default  reduce using rule 253 ($@9)

    $@9  go to state 1138


State 1060

  258 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 258 (expr_new)


State 1061

  292 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  293               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1139
    ';'  shift, and go to state 1140


State 1062

  291 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 291 (expr_type_info)


State 1063

  290 expr_type_decl: "type" '<' $@16 type_declaration '>' . $@17

    $default  reduce using rule 289 ($@17)

    $@17  go to state 1141


State 1064

  281 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' . $@11 expr

    $default  reduce using rule 280 ($@11)

    $@11  go to state 1142


State 1065

  284 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' . $@13 expr

    $default  reduce using rule 283 ($@13)

    $@13  go to state 1143


State 1066

  287 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 286 ($@15)

    $@15  go to state 1144


State 1067

  417 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  418     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1145


State 1068

  454 expr_mtag: "$c" '(' expr ')' '(' . ')'
  455          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    ')'                               shift, and go to state 1146
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    expr_list               go to state 1147
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 813
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1069

  295 expr_list: expr_list . ',' expr
  725 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 1027
    ';'  shift, and go to state 1148


State 1070

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  685 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  686                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1149


State 1071

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  682 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 682 (make_struct_fields)


State 1072

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  681 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 681 (make_struct_fields)


State 1073

  690 make_struct_dim: make_struct_dim . ';' make_struct_fields
  708 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 780
    ';'      shift, and go to state 969

    $default  reduce using rule 691 (optional_block)

    optional_block  go to state 1150


State 1074

  707 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 971
    ",]]"  shift, and go to state 972
    ']'    shift, and go to state 973

    optional_trailing_delim_sqr_sqr  go to state 1151


State 1075

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  712 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 712 (make_tuple)


State 1076

  687 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  688                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1152


State 1077

  683 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  684                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 669
    ":="  shift, and go to state 1153
    '='   shift, and go to state 671

    copy_or_move  go to state 1154


State 1078

  683 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  684                   | make_struct_fields . ',' "name" ":=" expr
  687                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  688                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  690 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 968

    $default  reduce using rule 690 (make_struct_dim)


State 1079

  705 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 705 (make_struct_decl)


State 1080

  699 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 699 (optional_trailing_delim_sqr_sqr)


State 1081

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  713 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 713 (make_tuple)


State 1082

  697 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 697 (optional_trailing_semicolon_sqr_sqr)


State 1083

  713 make_tuple: make_tuple . ',' expr
  717 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 975

    $default  reduce using rule 717 (make_dim)


State 1084

  295 expr_list: expr_list . ',' expr
  726 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 1027
    ';'  shift, and go to state 1155


State 1085

  690 make_struct_dim: make_struct_dim . ';' make_struct_fields
  710 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 780
    ';'      shift, and go to state 969

    $default  reduce using rule 691 (optional_block)

    optional_block  go to state 1156


State 1086

  703 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 703 (optional_trailing_delim_cur_sqr)


State 1087

  704 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 704 (optional_trailing_delim_cur_sqr)


State 1088

  702 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1157


State 1089

  709 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 709 (make_struct_decl)


State 1090

  695 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 695 (optional_trailing_semicolon_cur_sqr)


State 1091

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' . $@7 expr

    $default  reduce using rule 241 ($@7)

    $@7  go to state 1158


State 1092

   29 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 29 (string_builder_body)


State 1093

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  349 func_addr_name: "$i" '(' expr . ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1159


State 1094

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  463          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1160


State 1095

  353 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options . '>' $@19 func_addr_name
  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '>'         shift, and go to state 1161
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362


State 1096

  356 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list . optional_function_type '>' $@21 func_addr_name

    ':'  shift, and go to state 379

    $default  reduce using rule 119 (optional_function_type)

    optional_function_type  go to state 1162


State 1097

  344 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1163


State 1098

  345 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 781
    "name"  shift, and go to state 995

    make_struct_fields  go to state 1164


State 1099

  295 expr_list: expr_list ',' expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 295 (expr_list)


State 1100

  304 capture_entry: "<-" "name" .

    $default  reduce using rule 304 (capture_entry)


State 1101

  305 capture_entry: ":=" "name" .

    $default  reduce using rule 305 (capture_entry)


State 1102

  303 capture_entry: '=' "name" .

    $default  reduce using rule 303 (capture_entry)


State 1103

  302 capture_entry: '&' "name" .

    $default  reduce using rule 302 (capture_entry)


State 1104

  307 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 999
    ":="  shift, and go to state 1000
    '='   shift, and go to state 1001
    '&'   shift, and go to state 1002

    capture_entry  go to state 1165


State 1105

  309 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1166


State 1106

  311 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1167
    '{'   shift, and go to state 321

    expression_block       go to state 1168
    block_or_simple_block  go to state 1169


State 1107

  423 expr: expr "is" "type" '<' $@24 . type_declaration_no_options '>' $@25

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 1170


State 1108

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  462          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1171


State 1109

  429 expr: expr "as" "type" '<' $@26 . type_declaration '>' $@27

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 1172


State 1110

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  460          | expr "as" "$f" '(' expr . ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1173


State 1111

  346 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 346 (expr_method_call)


State 1112

  295 expr_list: expr_list . ',' expr
  347 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1027
    ')'  shift, and go to state 1174


State 1113

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  457          | expr "?." "$f" '(' expr . ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1175


State 1114

  434 expr: expr '?' "as" "type" '<' . $@28 type_declaration '>' $@29

    $default  reduce using rule 432 ($@28)

    $@28  go to state 1176


State 1115

  461 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1177
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1116

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  420     | expr '?' expr ':' expr .
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 420 (expr)


State 1117

  459 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1178
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1118

  406 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 406 (expr)


State 1119

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  456          | expr '.' "$f" '(' expr . ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1179


State 1120

  458 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1180
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1121

  404 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 404 (expr)


State 1122

  361 expr_field: expr '.' $@22 error $@23 .

    $default  reduce using rule 361 (expr_field)


State 1123

  565 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 565 (variable_name_with_pos_list)


State 1124

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  502 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 502 (variable_declaration)


State 1125

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 321

    expression_block  go to state 1181


State 1126

   78 expression_with_alias: "assume" "name" '=' $@4 expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 78 (expression_with_alias)


State 1127

  214 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 214 (expression_block)


State 1128

   58 expression_else: "else" expression_block .

    $default  reduce using rule 58 (expression_else)


State 1129

   59 expression_else: elif_or_static_elif expr . expression_block expression_else
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    '{'    shift, and go to state 321

    expression_block  go to state 1182


State 1130

   64 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 63 ($@2)

    $@2  go to state 1183


State 1131

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1184


State 1132

  484 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 484 (struct_variable_declaration_list)


State 1133

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@31 function_declaration_header ';'

    "const"  shift, and go to state 1185

    $default  reduce using rule 469 (optional_constant)

    optional_constant  go to state 1186


State 1134

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@32 function_declaration_header expression_block

    "override"  shift, and go to state 1135
    "sealed"    shift, and go to state 1136

    $default  reduce using rule 466 (optional_override)

    optional_override  go to state 1187


State 1135

  467 optional_override: "override" .

    $default  reduce using rule 467 (optional_override)


State 1136

  468 optional_override: "sealed" .

    $default  reduce using rule 468 (optional_override)


State 1137

  476 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1049
    "private"  shift, and go to state 1050

    $default  reduce using rule 471 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1188


State 1138

  254 new_type_declaration: '<' $@8 type_declaration '>' $@9 .

    $default  reduce using rule 254 (new_type_declaration)


State 1139

  292 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1189
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1140

  293 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1190


State 1141

  290 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17 .

    $default  reduce using rule 290 (expr_type_decl)


State 1142

  281 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1191
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1143

  284 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1192
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1144

  287 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1193
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1145

  417 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  418     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    ')'                               shift, and go to state 1194
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1195
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1146

  454 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1147

  295 expr_list: expr_list . ',' expr
  455 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1027
    ')'  shift, and go to state 1196


State 1148

  725 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1197
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1149

  685 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  686                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 669
    ":="  shift, and go to state 1198
    '='   shift, and go to state 671

    copy_or_move  go to state 1199


State 1150

  708 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 971
    ",]]"  shift, and go to state 972
    ']'    shift, and go to state 973

    optional_trailing_delim_sqr_sqr  go to state 1200


State 1151

  707 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 707 (make_struct_decl)


State 1152

  687 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  688                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1201
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1153

  684 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1202
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1154

  683 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1203
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1155

  726 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1204
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1156

  710 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1086
    ",}]"  shift, and go to state 1087
    '}'    shift, and go to state 1088

    optional_trailing_delim_cur_sqr  go to state 1205


State 1157

  702 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 702 (optional_trailing_delim_cur_sqr)


State 1158

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1206
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1159

  349 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 349 (func_addr_name)


State 1160

  463 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 463 (expr_mtag)


State 1161

  353 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' . $@19 func_addr_name

    $default  reduce using rule 352 ($@19)

    $@19  go to state 1207


State 1162

  356 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type . '>' $@21 func_addr_name

    '>'  shift, and go to state 1208


State 1163

  344 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 344 (expr_named_call)


State 1164

  345 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  683 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  684                   | make_struct_fields . ',' "name" ":=" expr
  687                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  688                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 968
    ']'  shift, and go to state 1209


State 1165

  307 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 307 (capture_list)


State 1166

  309 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 309 (optional_capture_list)


State 1167

  297 block_or_simple_block: "=>" . expr
  298                      | "=>" . "<-" expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "<-"                              shift, and go to state 1210
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1211
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1168

  296 block_or_simple_block: expression_block .

    $default  reduce using rule 296 (block_or_simple_block)


State 1169

  311 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 311 (expr_block)


State 1170

  423 expr: expr "is" "type" '<' $@24 type_declaration_no_options . '>' $@25
  614 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  615                            | type_declaration_no_options . '[' ']'
  616                            | type_declaration_no_options . '-' '[' ']'
  617                            | type_declaration_no_options . "explicit"
  618                            | type_declaration_no_options . "const"
  619                            | type_declaration_no_options . '-' "const"
  620                            | type_declaration_no_options . '&'
  621                            | type_declaration_no_options . '-' '&'
  622                            | type_declaration_no_options . '#'
  623                            | type_declaration_no_options . "implicit"
  624                            | type_declaration_no_options . '-' '#'
  625                            | type_declaration_no_options . "==" "const"
  626                            | type_declaration_no_options . "==" '&'
  627                            | type_declaration_no_options . '?'
  631                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 353
    "implicit"  shift, and go to state 354
    "explicit"  shift, and go to state 355
    "=="        shift, and go to state 356
    "??"        shift, and go to state 357
    '?'         shift, and go to state 358
    '&'         shift, and go to state 359
    '>'         shift, and go to state 1212
    '-'         shift, and go to state 360
    '['         shift, and go to state 361
    '#'         shift, and go to state 362


State 1171

  462 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 462 (expr_mtag)


State 1172

  429 expr: expr "as" "type" '<' $@26 type_declaration . '>' $@27
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 1213


State 1173

  460 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 460 (expr_mtag)


State 1174

  347 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 347 (expr_method_call)


State 1175

  457 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 1176

  434 expr: expr '?' "as" "type" '<' $@28 . type_declaration '>' $@29

    "array"      shift, and go to state 216
    "table"      shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 53

    name_in_namespace            go to state 254
    basic_type_declaration       go to state 255
    structure_type_declaration   go to state 256
    auto_type_declaration        go to state 257
    bitfield_type_declaration    go to state 258
    type_declaration_no_options  go to state 259
    type_declaration             go to state 1214


State 1177

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  461          | expr '?' "as" "$f" '(' expr . ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1215


State 1178

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  459          | expr '.' "?." "$f" '(' expr . ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1216


State 1179

  456 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1180

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  458          | expr '.' '.' "$f" '(' expr . ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1217


State 1181

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 73 (expression_for_loop)


State 1182

   59 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1036
    "elif"         shift, and go to state 1037
    "static_elif"  shift, and go to state 1038

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1039
    expression_else      go to state 1218


State 1183

   64 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "return"                          shift, and go to state 1219
    "null"                            shift, and go to state 416
    "break"                           shift, and go to state 510
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "continue"                        shift, and go to state 515
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "yield"                           shift, and go to state 1220
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder             go to state 454
    expr_reader                go to state 455
    expression_if_one_liner    go to state 1221
    expression_block           go to state 456
    expression_keyword         go to state 457
    name_in_namespace          go to state 458
    expr_new                   go to state 459
    expression_break           go to state 1222
    expression_continue        go to state 1223
    expression_return_no_pipe  go to state 1224
    expression_yield_no_pipe   go to state 1225
    expr_cast                  go to state 460
    expr_type_decl             go to state 461
    expr_type_info             go to state 462
    block_or_lambda            go to state 463
    expr_block                 go to state 464
    expr_numeric_const         go to state 465
    expr_named_call            go to state 466
    expr_method_call           go to state 467
    func_addr_expr             go to state 468
    expr_field                 go to state 469
    expr                       go to state 1226
    expr_mtag                  go to state 471
    basic_type_declaration     go to state 472
    make_decl                  go to state 473
    make_struct_decl           go to state 474
    make_dim_decl              go to state 475
    make_table_decl            go to state 476
    array_comprehension        go to state 477


State 1184

   72 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 72 (expression_if_then_else)


State 1185

  470 optional_constant: "const" .

    $default  reduce using rule 470 (optional_constant)


State 1186

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@31 function_declaration_header ';'

    $default  reduce using rule 480 ($@31)

    $@31  go to state 1227


State 1187

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@32 function_declaration_header expression_block

    "const"  shift, and go to state 1185

    $default  reduce using rule 469 (optional_constant)

    optional_constant  go to state 1228


State 1188

  476 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 497
    "name"  shift, and go to state 498

    variable_declaration         go to state 1229
    variable_name_with_pos_list  go to state 500


State 1189

  292 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1230


State 1190

  293 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1231


State 1191

  281 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 281 (expr_cast)


State 1192

  284 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 284 (expr_cast)


State 1193

  287 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 287 (expr_cast)


State 1194

  417 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 417 (expr)


State 1195

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  418     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1232


State 1196

  455 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1197

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  725 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ';'    shift, and go to state 1233

    $default  reduce using rule 723 (array_comprehension_where)

    array_comprehension_where  go to state 1234


State 1198

  686 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1235
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1199

  685 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1236
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1200

  708 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 708 (make_struct_decl)


State 1201

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  687 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  688                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1237


State 1202

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  684 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 684 (make_struct_fields)


State 1203

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  683 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 683 (make_struct_fields)


State 1204

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  726 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ';'    shift, and go to state 1233

    $default  reduce using rule 723 (array_comprehension_where)

    array_comprehension_where  go to state 1238


State 1205

  710 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 710 (make_struct_decl)


State 1206

  242 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 242 (expression_keyword)


State 1207

  353 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 . func_addr_name

    "::"    shift, and go to state 52
    "$i"    shift, and go to state 805
    "name"  shift, and go to state 53

    name_in_namespace  go to state 808
    func_addr_name     go to state 1239


State 1208

  356 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' . $@21 func_addr_name

    $default  reduce using rule 355 ($@21)

    $@21  go to state 1240


State 1209

  345 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1241


State 1210

  298 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1242
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1211

  297 block_or_simple_block: "=>" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    ".."  error (nonassociative)

    $default  reduce using rule 297 (block_or_simple_block)


State 1212

  423 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' . $@25

    $default  reduce using rule 422 ($@25)

    $@25  go to state 1243


State 1213

  429 expr: expr "as" "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 428 ($@27)

    $@27  go to state 1244


State 1214

  434 expr: expr '?' "as" "type" '<' $@28 type_declaration . '>' $@29
  669 type_declaration: type_declaration . '|' type_declaration_no_options
  670                 | type_declaration . '|' '#'

    '|'  shift, and go to state 363
    '>'  shift, and go to state 1245


State 1215

  461 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 461 (expr_mtag)


State 1216

  459 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 459 (expr_mtag)


State 1217

  458 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 1218

   59 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 59 (expression_else)


State 1219

  262 expression_return_no_pipe: "return" .
  263                          | "return" . expr
  264                          | "return" . "<-" expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "<-"                              shift, and go to state 1246
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    $default  reduce using rule 262 (expression_return_no_pipe)

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1247
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1220

  268 expression_yield_no_pipe: "yield" . expr
  269                         | "yield" . "<-" expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "<-"                              shift, and go to state 1248
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1249
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1221

   64 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 64 (expression_else_one_liner)


State 1222

   68 expression_if_one_liner: expression_break .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1223

   69 expression_if_one_liner: expression_continue .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1224

   66 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1225

   67 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1226

   65 expression_if_one_liner: expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 65 (expression_if_one_liner)


State 1227

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 . function_declaration_header ';'

    "operator"  shift, and go to state 172
    "bool"      shift, and go to state 173
    "string"    shift, and go to state 174
    "int"       shift, and go to state 175
    "int2"      shift, and go to state 176
    "int3"      shift, and go to state 177
    "int4"      shift, and go to state 178
    "uint"      shift, and go to state 179
    "uint2"     shift, and go to state 180
    "uint3"     shift, and go to state 181
    "uint4"     shift, and go to state 182
    "float"     shift, and go to state 183
    "float2"    shift, and go to state 184
    "float3"    shift, and go to state 185
    "float4"    shift, and go to state 186
    "range"     shift, and go to state 187
    "urange"    shift, and go to state 188
    "range64"   shift, and go to state 189
    "urange64"  shift, and go to state 190
    "int64"     shift, and go to state 191
    "uint64"    shift, and go to state 192
    "double"    shift, and go to state 193
    "int8"      shift, and go to state 194
    "uint8"     shift, and go to state 195
    "int16"     shift, and go to state 196
    "uint16"    shift, and go to state 197
    "++"        shift, and go to state 198
    "--"        shift, and go to state 199
    "name"      shift, and go to state 200

    function_name                go to state 201
    function_declaration_header  go to state 1250


State 1228

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@32 function_declaration_header expression_block

    $default  reduce using rule 482 ($@32)

    $@32  go to state 1251


State 1229

  476 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 476 (structure_variable_declaration)


State 1230

  292 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 292 (expr_type_info)


State 1231

  293 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1252
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1232

  418 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 418 (expr)


State 1233

  724 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1253


State 1234

  725 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1254


State 1235

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  686 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 686 (make_struct_fields)


State 1236

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  685 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 685 (make_struct_fields)


State 1237

  687 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  688                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 669
    ":="  shift, and go to state 1255
    '='   shift, and go to state 671

    copy_or_move  go to state 1256


State 1238

  726 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1257


State 1239

  353 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name .

    $default  reduce using rule 353 (func_addr_expr)


State 1240

  356 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 . func_addr_name

    "::"    shift, and go to state 52
    "$i"    shift, and go to state 805
    "name"  shift, and go to state 53

    name_in_namespace  go to state 808
    func_addr_name     go to state 1258


State 1241

  345 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 345 (expr_named_call)


State 1242

  298 block_or_simple_block: "=>" "<-" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 298 (block_or_simple_block)


State 1243

  423 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25 .

    $default  reduce using rule 423 (expr)


State 1244

  429 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 429 (expr)


State 1245

  434 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' . $@29

    $default  reduce using rule 433 ($@29)

    $@29  go to state 1259


State 1246

  264 expression_return_no_pipe: "return" "<-" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1260
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1247

  263 expression_return_no_pipe: "return" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 263 (expression_return_no_pipe)


State 1248

  269 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1261
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1249

  268 expression_yield_no_pipe: "yield" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 268 (expression_yield_no_pipe)


State 1250

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header . ';'

    ';'  shift, and go to state 1262


State 1251

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 . function_declaration_header expression_block

    "operator"  shift, and go to state 172
    "bool"      shift, and go to state 173
    "string"    shift, and go to state 174
    "int"       shift, and go to state 175
    "int2"      shift, and go to state 176
    "int3"      shift, and go to state 177
    "int4"      shift, and go to state 178
    "uint"      shift, and go to state 179
    "uint2"     shift, and go to state 180
    "uint3"     shift, and go to state 181
    "uint4"     shift, and go to state 182
    "float"     shift, and go to state 183
    "float2"    shift, and go to state 184
    "float3"    shift, and go to state 185
    "float4"    shift, and go to state 186
    "range"     shift, and go to state 187
    "urange"    shift, and go to state 188
    "range64"   shift, and go to state 189
    "urange64"  shift, and go to state 190
    "int64"     shift, and go to state 191
    "uint64"    shift, and go to state 192
    "double"    shift, and go to state 193
    "int8"      shift, and go to state 194
    "uint8"     shift, and go to state 195
    "int16"     shift, and go to state 196
    "uint16"    shift, and go to state 197
    "++"        shift, and go to state 198
    "--"        shift, and go to state 199
    "name"      shift, and go to state 200

    function_name                go to state 201
    function_declaration_header  go to state 1263


State 1252

  293 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660
    ')'    shift, and go to state 1264


State 1253

  724 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1265
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1254

  725 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1266


State 1255

  688 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1267
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1256

  687 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "null"                            shift, and go to state 416
    "deref"                           shift, and go to state 417
    "cast"                            shift, and go to state 418
    "upcast"                          shift, and go to state 419
    "addr"                            shift, and go to state 420
    "reinterpret"                     shift, and go to state 421
    "unsafe"                          shift, and go to state 422
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 423
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "generator"                       shift, and go to state 424
    "++"                              shift, and go to state 425
    "--"                              shift, and go to state 426
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 427
    "$i"                              shift, and go to state 428
    "$v"                              shift, and go to state 429
    "$b"                              shift, and go to state 430
    "$a"                              shift, and go to state 431
    "$c"                              shift, and go to state 432
    "..."                             shift, and go to state 433
    "[["                              shift, and go to state 434
    "[{"                              shift, and go to state 435
    "{{"                              shift, and go to state 436
    "integer constant"                shift, and go to state 437
    "long integer constant"           shift, and go to state 438
    "unsigned integer constant"       shift, and go to state 439
    "unsigned long integer constant"  shift, and go to state 440
    "unsigned int8 constant"          shift, and go to state 441
    "floating point constant"         shift, and go to state 442
    "double constant"                 shift, and go to state 443
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 444
    "start of the string"             shift, and go to state 445
    '-'                               shift, and go to state 446
    '+'                               shift, and go to state 447
    '*'                               shift, and go to state 448
    '%'                               shift, and go to state 12
    '~'                               shift, and go to state 449
    '!'                               shift, and go to state 450
    '('                               shift, and go to state 451
    '$'                               shift, and go to state 452
    '@'                               shift, and go to state 453
    '{'                               shift, and go to state 321

    string_builder          go to state 454
    expr_reader             go to state 455
    expression_block        go to state 456
    expression_keyword      go to state 457
    name_in_namespace       go to state 458
    expr_new                go to state 459
    expr_cast               go to state 460
    expr_type_decl          go to state 461
    expr_type_info          go to state 462
    block_or_lambda         go to state 463
    expr_block              go to state 464
    expr_numeric_const      go to state 465
    expr_named_call         go to state 466
    expr_method_call        go to state 467
    func_addr_expr          go to state 468
    expr_field              go to state 469
    expr                    go to state 1268
    expr_mtag               go to state 471
    basic_type_declaration  go to state 472
    make_decl               go to state 473
    make_struct_decl        go to state 474
    make_dim_decl           go to state 475
    make_table_decl         go to state 476
    array_comprehension     go to state 477


State 1257

  726 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1269


State 1258

  356 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name .

    $default  reduce using rule 356 (func_addr_expr)


State 1259

  434 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29 .

    $default  reduce using rule 434 (expr)


State 1260

  264 expression_return_no_pipe: "return" "<-" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 264 (expression_return_no_pipe)


State 1261

  269 expression_yield_no_pipe: "yield" "<-" expr .
  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 269 (expression_yield_no_pipe)


State 1262

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';' .

    $default  reduce using rule 481 (struct_variable_declaration_list)


State 1263

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header . expression_block

    '{'  shift, and go to state 321

    expression_block  go to state 1270


State 1264

  293 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 293 (expr_type_info)


State 1265

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  724 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 724 (array_comprehension_where)


State 1266

  725 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 725 (array_comprehension)


State 1267

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  688 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 688 (make_struct_fields)


State 1268

  346 expr_method_call: expr . "->" "name" '(' ')'
  347                 | expr . "->" "name" '(' expr_list ')'
  357 expr_field: expr . '.' "name"
  358           | expr . '.' '.' "name"
  361           | expr . '.' $@22 error $@23
  376 expr: expr . "<<" expr
  377     | expr . ">>" expr
  378     | expr . "<<<" expr
  379     | expr . ">>>" expr
  380     | expr . '+' expr
  381     | expr . '-' expr
  382     | expr . '*' expr
  383     | expr . '/' expr
  384     | expr . '%' expr
  385     | expr . '<' expr
  386     | expr . '>' expr
  387     | expr . "==" expr
  388     | expr . "!=" expr
  389     | expr . "<=" expr
  390     | expr . ">=" expr
  391     | expr . '&' expr
  392     | expr . '|' expr
  393     | expr . '^' expr
  394     | expr . "&&" expr
  395     | expr . "||" expr
  396     | expr . "^^" expr
  397     | expr . ".." expr
  400     | expr . "++"
  401     | expr . "--"
  403     | expr . '[' expr ']'
  404     | expr . '.' '[' expr ']'
  405     | expr . "?[" expr ']'
  406     | expr . '.' "?[" expr ']'
  407     | expr . "?." "name"
  408     | expr . '.' "?." "name"
  419     | expr . "??" expr
  420     | expr . '?' expr ':' expr
  423     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  424     | expr . "is" basic_type_declaration
  425     | expr . "is" "name"
  426     | expr . "as" "name"
  429     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  430     | expr . "as" basic_type_declaration
  431     | expr . '?' "as" "name"
  434     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  435     | expr . '?' "as" basic_type_declaration
  443     | expr . "<|" expr
  444     | expr . "|>" expr
  456 expr_mtag: expr . '.' "$f" '(' expr ')'
  457          | expr . "?." "$f" '(' expr ')'
  458          | expr . '.' '.' "$f" '(' expr ')'
  459          | expr . '.' "?." "$f" '(' expr ')'
  460          | expr . "as" "$f" '(' expr ')'
  461          | expr . '?' "as" "$f" '(' expr ')'
  462          | expr . "is" "$f" '(' expr ')'
  687 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 626
    "as"   shift, and go to state 627
    "<<"   shift, and go to state 628
    ">>"   shift, and go to state 629
    "++"   shift, and go to state 630
    "--"   shift, and go to state 631
    "<="   shift, and go to state 632
    ">="   shift, and go to state 633
    "=="   shift, and go to state 634
    "!="   shift, and go to state 635
    "->"   shift, and go to state 636
    "??"   shift, and go to state 637
    "?."   shift, and go to state 638
    "?["   shift, and go to state 639
    "<|"   shift, and go to state 640
    "|>"   shift, and go to state 641
    "<<<"  shift, and go to state 642
    ">>>"  shift, and go to state 643
    "&&"   shift, and go to state 644
    "||"   shift, and go to state 645
    "^^"   shift, and go to state 646
    ".."   shift, and go to state 647
    '?'    shift, and go to state 648
    '|'    shift, and go to state 649
    '^'    shift, and go to state 650
    '&'    shift, and go to state 651
    '<'    shift, and go to state 652
    '>'    shift, and go to state 653
    '-'    shift, and go to state 654
    '+'    shift, and go to state 655
    '*'    shift, and go to state 656
    '/'    shift, and go to state 657
    '%'    shift, and go to state 658
    '.'    shift, and go to state 659
    '['    shift, and go to state 660

    $default  reduce using rule 687 (make_struct_fields)


State 1269

  726 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 726 (array_comprehension)


State 1270

  483 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block .

    $default  reduce using rule 483 (struct_variable_declaration_list)

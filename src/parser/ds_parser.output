Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 53 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 451 conflicts: 2 shift/reduce
State 578 conflicts: 1 shift/reduce
State 795 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program ';'

   14 optional_public_or_private_module: %empty
   15                                  | "public"
   16                                  | "private"

   17 module_name: '$'
   18            | "name"

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   20 character_sequence: STRING_CHARACTER
   21                   | STRING_CHARACTER_ESC
   22                   | character_sequence STRING_CHARACTER
   23                   | character_sequence STRING_CHARACTER_ESC

   24 string_constant: "start of the string" character_sequence "end of the string"

   25 string_builder_body: %empty
   26                    | string_builder_body character_sequence
   27                    | string_builder_body "{" expr "}"

   28 string_builder: "start of the string" string_builder_body "end of the string"

   29 reader_character_sequence: STRING_CHARACTER
   30                          | reader_character_sequence STRING_CHARACTER

   31 $@1: %empty

   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   33 options_declaration: "options" annotation_argument_list

   34 require_declaration: "require" require_module

   35 keyword_or_name: "name"
   36                | "keyword"

   37 require_module_name: keyword_or_name
   38                    | '%' require_module_name
   39                    | require_module_name '.' keyword_or_name
   40                    | require_module_name '/' keyword_or_name

   41 require_module: require_module_name is_public_module
   42               | require_module_name "as" "name" is_public_module

   43 is_public_module: %empty
   44                 | "public"

   45 expect_declaration: "expect" expect_list

   46 expect_list: expect_error
   47            | expect_list ',' expect_error

   48 expect_error: "integer constant"
   49             | "integer constant" ':' "integer constant"

   50 expression_label: "label" "integer constant" ':'

   51 expression_goto: "goto" "label" "integer constant"
   52                | "goto" expr

   53 elif_or_static_elif: "elif"
   54                    | "static_elif"

   55 expression_else: %empty
   56                | "else" expression_block
   57                | elif_or_static_elif expr expression_block expression_else

   58 if_or_static_if: "if"
   59                | "static_if"

   60 expression_else_one_liner: %empty

   61 $@2: %empty

   62 expression_else_one_liner: "else" $@2 expression_if_one_liner

   63 expression_if_one_liner: expr
   64                        | expression_return_no_pipe
   65                        | expression_yield_no_pipe
   66                        | expression_break
   67                        | expression_continue

   68 expression_if_then_else: if_or_static_if expr expression_block expression_else

   69 $@3: %empty

   70 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';'

   71 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   72 expression_unsafe: "unsafe" expression_block

   73 expression_while_loop: "while" expr expression_block

   74 expression_with: "with" expr expression_block

   75 $@4: %empty

   76 expression_with_alias: "assume" "name" '=' $@4 expr

   77 annotation_argument_value: string_constant
   78                          | "name"
   79                          | "integer constant"
   80                          | "floating point constant"
   81                          | "true"
   82                          | "false"

   83 annotation_argument_value_list: annotation_argument_value
   84                               | annotation_argument_value_list ',' annotation_argument_value

   85 annotation_argument_name: "name"
   86                         | "type"
   87                         | "in"

   88 annotation_argument: annotation_argument_name '=' string_constant
   89                    | annotation_argument_name '=' "name"
   90                    | annotation_argument_name '=' "integer constant"
   91                    | annotation_argument_name '=' "floating point constant"
   92                    | annotation_argument_name '=' "true"
   93                    | annotation_argument_name '=' "false"
   94                    | annotation_argument_name
   95                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   96 annotation_argument_list: annotation_argument
   97                         | annotation_argument_list ',' annotation_argument

   98 annotation_declaration_name: name_in_namespace
   99                            | "require"
  100                            | "private"

  101 annotation_declaration_basic: annotation_declaration_name
  102                             | annotation_declaration_name '(' annotation_argument_list ')'

  103 annotation_declaration: annotation_declaration_basic
  104                       | '!' annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration
  108                       | '(' annotation_declaration ')'
  109                       | "|>" annotation_declaration

  110 annotation_list: annotation_declaration
  111                | annotation_list ',' annotation_declaration

  112 optional_annotation_list: %empty
  113                         | '[' annotation_list ']'

  114 optional_function_argument_list: %empty
  115                                | '(' ')'
  116                                | '(' function_argument_list ')'

  117 optional_function_type: %empty
  118                       | ':' type_declaration

  119 function_name: "name"
  120              | "operator" '!'
  121              | "operator" '~'
  122              | "operator" "+="
  123              | "operator" "-="
  124              | "operator" "*="
  125              | "operator" "/="
  126              | "operator" "%="
  127              | "operator" "&="
  128              | "operator" "|="
  129              | "operator" "^="
  130              | "operator" "&&="
  131              | "operator" "||="
  132              | "operator" "^^="
  133              | "operator" "&&"
  134              | "operator" "||"
  135              | "operator" "^^"
  136              | "operator" '+'
  137              | "operator" '-'
  138              | "operator" '*'
  139              | "operator" '/'
  140              | "operator" '%'
  141              | "operator" '<'
  142              | "operator" '>'
  143              | "operator" ".."
  144              | "operator" "=="
  145              | "operator" "!="
  146              | "operator" "<="
  147              | "operator" ">="
  148              | "operator" '&'
  149              | "operator" '|'
  150              | "operator" '^'
  151              | "++" "operator"
  152              | "--" "operator"
  153              | "operator" "++"
  154              | "operator" "--"
  155              | "operator" "<<"
  156              | "operator" ">>"
  157              | "operator" "<<="
  158              | "operator" ">>="
  159              | "operator" "<<<"
  160              | "operator" ">>>"
  161              | "operator" "<<<="
  162              | "operator" ">>>="
  163              | "operator" '[' ']'
  164              | "operator" "?[" ']'
  165              | "operator" '.'
  166              | "operator" "?."
  167              | "operator" '.' "name"
  168              | "operator" '.' "name" ":="
  169              | "operator" "?." "name"
  170              | "operator" ":="
  171              | "operator" "delete"
  172              | "operator" "??"
  173              | "operator" "is"
  174              | "operator" "as"
  175              | "operator" "is" "name"
  176              | "operator" "as" "name"
  177              | "operator" '?' "as"
  178              | "operator" '?' "as" "name"
  179              | "bool"
  180              | "string"
  181              | "int"
  182              | "int2"
  183              | "int3"
  184              | "int4"
  185              | "uint"
  186              | "uint2"
  187              | "uint3"
  188              | "uint4"
  189              | "float"
  190              | "float2"
  191              | "float3"
  192              | "float4"
  193              | "range"
  194              | "urange"
  195              | "range64"
  196              | "urange64"
  197              | "int64"
  198              | "uint64"
  199              | "double"
  200              | "int8"
  201              | "uint8"
  202              | "int16"
  203              | "uint16"

  204 global_function_declaration: optional_annotation_list "def" function_declaration

  205 optional_public_or_private_function: %empty
  206                                    | "private"
  207                                    | "public"

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type

  209 $@5: %empty

  210 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block

  211 expression_block: '{' expressions '}'
  212                 | '{' expressions '}' "finally" '{' expressions '}'

  213 expression_any: ';'
  214               | expr_pipe
  215               | expr_keyword
  216               | expr_assign_pipe
  217               | expr_assign ';'
  218               | expression_delete ';'
  219               | expression_let
  220               | expression_while_loop
  221               | expression_unsafe
  222               | expression_with
  223               | expression_with_alias
  224               | expression_for_loop
  225               | expression_break ';'
  226               | expression_continue ';'
  227               | expression_return
  228               | expression_yield
  229               | expression_if_then_else
  230               | expression_try_catch
  231               | expression_label ';'
  232               | expression_goto ';'
  233               | "pass" ';'

  234 expressions: %empty
  235            | expressions expression_any
  236            | expressions error

  237 expr_keyword: "keyword" expr expression_block

  238 $@6: %empty

  239 $@7: %empty

  240 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr

  241 expr_pipe: expr_assign " <|" expr_block
  242          | "@ <|" expr_block
  243          | "@@ <|" expr_block
  244          | "$ <|" expr_block

  245 name_in_namespace: "name"
  246                  | "name" "::" "name"
  247                  | "::" "name"

  248 expression_delete: "delete" expr
  249                  | "delete" "explicit" expr

  250 $@8: %empty

  251 $@9: %empty

  252 new_type_declaration: '<' $@8 type_declaration '>' $@9
  253                     | structure_type_declaration

  254 expr_new: "new" new_type_declaration
  255         | "new" new_type_declaration '(' ')'
  256         | "new" new_type_declaration '(' expr_list ')'
  257         | "new" make_decl

  258 expression_break: "break"

  259 expression_continue: "continue"

  260 expression_return_no_pipe: "return"
  261                          | "return" expr
  262                          | "return" "<-" expr

  263 expression_return: expression_return_no_pipe ';'
  264                  | "return" expr_pipe
  265                  | "return" "<-" expr_pipe

  266 expression_yield_no_pipe: "yield" expr
  267                         | "yield" "<-" expr

  268 expression_yield: expression_yield_no_pipe ';'
  269                 | "yield" expr_pipe
  270                 | "yield" "<-" expr_pipe

  271 expression_try_catch: "try" expression_block "recover" expression_block

  272 kwd_let: "let"
  273        | "var"

  274 optional_in_scope: "inscope"
  275                  | %empty

  276 expression_let: kwd_let optional_in_scope let_variable_declaration

  277 $@10: %empty

  278 $@11: %empty

  279 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr

  280 $@12: %empty

  281 $@13: %empty

  282 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr

  283 $@14: %empty

  284 $@15: %empty

  285 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr

  286 $@16: %empty

  287 $@17: %empty

  288 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17

  289 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  290               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  291               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  292 expr_list: expr
  293          | expr_list ',' expr

  294 block_or_simple_block: expression_block
  295                      | "=>" expr
  296                      | "=>" "<-" expr

  297 block_or_lambda: '$'
  298                | '@'
  299                | '@' '@'

  300 capture_entry: '&' "name"
  301              | '=' "name"
  302              | "<-" "name"
  303              | ":=" "name"

  304 capture_list: capture_entry
  305             | capture_list ',' capture_entry

  306 optional_capture_list: %empty
  307                      | "[[" capture_list ']' ']'

  308 expr_block: expression_block
  309           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  310 expr_numeric_const: "integer constant"
  311                   | "unsigned integer constant"
  312                   | "long integer constant"
  313                   | "unsigned long integer constant"
  314                   | "unsigned int8 constant"
  315                   | "floating point constant"
  316                   | "double constant"

  317 expr_assign: expr
  318            | expr '=' expr
  319            | expr "<-" expr
  320            | expr ":=" expr
  321            | expr "&=" expr
  322            | expr "|=" expr
  323            | expr "^=" expr
  324            | expr "&&=" expr
  325            | expr "||=" expr
  326            | expr "^^=" expr
  327            | expr "+=" expr
  328            | expr "-=" expr
  329            | expr "*=" expr
  330            | expr "/=" expr
  331            | expr "%=" expr
  332            | expr "<<=" expr
  333            | expr ">>=" expr
  334            | expr "<<<=" expr
  335            | expr ">>>=" expr

  336 expr_assign_pipe: expr '=' "@ <|" expr_block
  337                 | expr '=' "@@ <|" expr_block
  338                 | expr '=' "$ <|" expr_block
  339                 | expr "<-" "@ <|" expr_block
  340                 | expr "<-" "@@ <|" expr_block
  341                 | expr "<-" "$ <|" expr_block

  342 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  343                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  344 expr_method_call: expr "->" "name" '(' ')'
  345                 | expr "->" "name" '(' expr_list ')'

  346 func_addr_name: name_in_namespace
  347               | "$i" '(' expr ')'

  348 func_addr_expr: '@' '@' func_addr_name

  349 $@18: %empty

  350 $@19: %empty

  351 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name

  352 $@20: %empty

  353 $@21: %empty

  354 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

  355 expr_field: expr '.' "name"
  356           | expr '.' '.' "name"

  357 $@22: %empty

  358 $@23: %empty

  359 expr_field: expr '.' $@22 error $@23

  360 expr: "null"
  361     | name_in_namespace
  362     | expr_numeric_const
  363     | expr_reader
  364     | string_builder
  365     | make_decl
  366     | "true"
  367     | "false"
  368     | expr_field
  369     | expr_mtag
  370     | '!' expr
  371     | '~' expr
  372     | '+' expr
  373     | '-' expr
  374     | expr "<<" expr
  375     | expr ">>" expr
  376     | expr "<<<" expr
  377     | expr ">>>" expr
  378     | expr '+' expr
  379     | expr '-' expr
  380     | expr '*' expr
  381     | expr '/' expr
  382     | expr '%' expr
  383     | expr '<' expr
  384     | expr '>' expr
  385     | expr "==" expr
  386     | expr "!=" expr
  387     | expr "<=" expr
  388     | expr ">=" expr
  389     | expr '&' expr
  390     | expr '|' expr
  391     | expr '^' expr
  392     | expr "&&" expr
  393     | expr "||" expr
  394     | expr "^^" expr
  395     | expr ".." expr
  396     | "++" expr
  397     | "--" expr
  398     | expr "++"
  399     | expr "--"
  400     | '(' expr ')'
  401     | expr '[' expr ']'
  402     | expr '.' '[' expr ']'
  403     | expr "?[" expr ']'
  404     | expr '.' "?[" expr ']'
  405     | expr "?." "name"
  406     | expr '.' "?." "name"
  407     | func_addr_expr
  408     | name_in_namespace '(' ')'
  409     | name_in_namespace '(' expr_list ')'
  410     | basic_type_declaration '(' ')'
  411     | basic_type_declaration '(' expr_list ')'
  412     | '*' expr
  413     | "deref" '(' expr ')'
  414     | "addr" '(' expr ')'
  415     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  416     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  417     | expr "??" expr
  418     | expr '?' expr ':' expr

  419 $@24: %empty

  420 $@25: %empty

  421 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr "is" basic_type_declaration
  423     | expr "is" "name"
  424     | expr "as" "name"

  425 $@26: %empty

  426 $@27: %empty

  427 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr "as" basic_type_declaration
  429     | expr '?' "as" "name"

  430 $@28: %empty

  431 $@29: %empty

  432 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr '?' "as" basic_type_declaration
  434     | expr_type_info
  435     | expr_type_decl
  436     | expr_cast
  437     | expr_new
  438     | expr_method_call
  439     | expr_named_call
  440     | expr_block
  441     | expr "<|" expr
  442     | expr "|>" expr
  443     | name_in_namespace "name"
  444     | "unsafe" '(' expr ')'
  445     | expression_keyword

  446 expr_mtag: "$$" '(' expr ')'
  447          | "$i" '(' expr ')'
  448          | "$v" '(' expr ')'
  449          | "$b" '(' expr ')'
  450          | "$a" '(' expr ')'
  451          | "..."
  452          | "$c" '(' expr ')' '(' ')'
  453          | "$c" '(' expr ')' '(' expr_list ')'
  454          | expr '.' "$f" '(' expr ')'
  455          | expr "?." "$f" '(' expr ')'
  456          | expr '.' '.' "$f" '(' expr ')'
  457          | expr '.' "?." "$f" '(' expr ')'
  458          | expr "as" "$f" '(' expr ')'
  459          | expr '?' "as" "$f" '(' expr ')'
  460          | expr "is" "$f" '(' expr ')'
  461          | '@' '@' "$c" '(' expr ')'

  462 optional_field_annotation: %empty
  463                          | "[[" annotation_argument_list ']' ']'

  464 optional_override: %empty
  465                  | "override"
  466                  | "sealed"

  467 optional_constant: %empty
  468                  | "const"

  469 optional_public_or_private_member_variable: %empty
  470                                           | "public"
  471                                           | "private"

  472 optional_static_member_variable: %empty
  473                                | "static"

  474 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  475 struct_variable_declaration_list: %empty

  476 $@30: %empty

  477 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';'

  478 $@31: %empty

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'

  480 $@32: %empty

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  482                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  483 function_argument_declaration: optional_field_annotation variable_declaration
  484                              | optional_field_annotation "var" variable_declaration
  485                              | "$a" '(' expr ')'

  486 function_argument_list: function_argument_declaration
  487                       | function_argument_list ';' function_argument_declaration

  488 tuple_type: type_declaration
  489           | "name" ':' type_declaration

  490 tuple_type_list: tuple_type
  491                | tuple_type_list ';' tuple_type

  492 variant_type: "name" ':' type_declaration

  493 variant_type_list: variant_type
  494                  | variant_type_list ';' variant_type

  495 copy_or_move: '='
  496             | "<-"

  497 variable_declaration: variable_name_with_pos_list
  498                     | variable_name_with_pos_list '&'
  499                     | variable_name_with_pos_list ':' type_declaration
  500                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  501                     | variable_name_with_pos_list copy_or_move expr
  502                     | variable_name_with_pos_list copy_or_move expr_pipe

  503 copy_or_move_or_clone: '='
  504                      | "<-"
  505                      | ":="

  506 optional_ref: %empty
  507             | '&'

  508 let_variable_name_with_pos_list: "name"
  509                                | "$i" '(' expr ')'
  510                                | "name" "aka" "name"
  511                                | let_variable_name_with_pos_list ',' "name"
  512                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  513 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  514                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  515                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  516                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  517                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  518 global_variable_declaration_list: %empty

  519 $@33: %empty

  520 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration

  521 optional_shared: %empty
  522                | "shared"

  523 optional_public_or_private_variable: %empty
  524                                    | "private"
  525                                    | "public"

  526 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  527 $@34: %empty

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

  529 enum_list: %empty
  530          | enum_list ';'
  531          | enum_list "name" ';'
  532          | enum_list "name" '=' expr ';'

  533 $@35: %empty

  534 single_alias: "name" $@35 '=' type_declaration

  535 alias_list: single_alias ';'
  536           | alias_list single_alias ';'

  537 alias_declaration: "typedef" '{' alias_list '}'

  538 $@36: %empty

  539 alias_declaration: "typedef" $@36 single_alias ';'

  540 optional_public_or_private_enum: %empty
  541                                | "private"
  542                                | "public"

  543 enum_name: "name"

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  545                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  546 optional_structure_parent: %empty
  547                          | ':' name_in_namespace

  548 optional_sealed: %empty
  549                | "sealed"

  550 structure_name: optional_sealed "name" optional_structure_parent

  551 class_or_struct: "class"
  552                | "struct"

  553 optional_public_or_private_structure: %empty
  554                                     | "private"
  555                                     | "public"

  556 $@37: %empty

  557 $@38: %empty

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list '}'

  559 variable_name_with_pos_list: "name"
  560                            | "$i" '(' expr ')'
  561                            | "name" "aka" "name"
  562                            | variable_name_with_pos_list ',' "name"
  563                            | variable_name_with_pos_list ',' "name" "aka" "name"

  564 basic_type_declaration: "bool"
  565                       | "string"
  566                       | "int"
  567                       | "int8"
  568                       | "int16"
  569                       | "int64"
  570                       | "int2"
  571                       | "int3"
  572                       | "int4"
  573                       | "uint"
  574                       | "uint8"
  575                       | "uint16"
  576                       | "uint64"
  577                       | "uint2"
  578                       | "uint3"
  579                       | "uint4"
  580                       | "float"
  581                       | "float2"
  582                       | "float3"
  583                       | "float4"
  584                       | "void"
  585                       | "range"
  586                       | "urange"
  587                       | "range64"
  588                       | "urange64"
  589                       | "double"
  590                       | "bitfield"

  591 enum_basic_type_declaration: "int"
  592                            | "int8"
  593                            | "int16"
  594                            | "uint"
  595                            | "uint8"
  596                            | "uint16"

  597 structure_type_declaration: name_in_namespace

  598 auto_type_declaration: "auto"
  599                      | "auto" '(' "name" ')'
  600                      | "$t" '(' expr ')'

  601 bitfield_bits: "name"
  602              | bitfield_bits ';' "name"

  603 $@39: %empty

  604 $@40: %empty

  605 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40

  606 table_type_pair: type_declaration
  607                | type_declaration ';' type_declaration

  608 type_declaration_no_options: basic_type_declaration
  609                            | auto_type_declaration
  610                            | bitfield_type_declaration
  611                            | structure_type_declaration
  612                            | type_declaration_no_options '[' expr ']'
  613                            | type_declaration_no_options '[' ']'
  614                            | type_declaration_no_options '-' '[' ']'
  615                            | type_declaration_no_options "explicit"
  616                            | type_declaration_no_options "const"
  617                            | type_declaration_no_options '-' "const"
  618                            | type_declaration_no_options '&'
  619                            | type_declaration_no_options '-' '&'
  620                            | type_declaration_no_options '#'
  621                            | type_declaration_no_options "implicit"
  622                            | type_declaration_no_options '-' '#'
  623                            | type_declaration_no_options "==" "const"
  624                            | type_declaration_no_options "==" '&'
  625                            | type_declaration_no_options '?'

  626 $@41: %empty

  627 $@42: %empty

  628 type_declaration_no_options: "smart_ptr" '<' $@41 type_declaration '>' $@42
  629                            | type_declaration_no_options "??"

  630 $@43: %empty

  631 $@44: %empty

  632 type_declaration_no_options: "array" '<' $@43 type_declaration '>' $@44

  633 $@45: %empty

  634 $@46: %empty

  635 type_declaration_no_options: "table" '<' $@45 table_type_pair '>' $@46

  636 $@47: %empty

  637 $@48: %empty

  638 type_declaration_no_options: "iterator" '<' $@47 type_declaration '>' $@48
  639                            | "block"

  640 $@49: %empty

  641 $@50: %empty

  642 type_declaration_no_options: "block" '<' $@49 type_declaration '>' $@50

  643 $@51: %empty

  644 $@52: %empty

  645 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list optional_function_type '>' $@52
  646                            | "function"

  647 $@53: %empty

  648 $@54: %empty

  649 type_declaration_no_options: "function" '<' $@53 type_declaration '>' $@54

  650 $@55: %empty

  651 $@56: %empty

  652 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list optional_function_type '>' $@56
  653                            | "lambda"

  654 $@57: %empty

  655 $@58: %empty

  656 type_declaration_no_options: "lambda" '<' $@57 type_declaration '>' $@58

  657 $@59: %empty

  658 $@60: %empty

  659 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list optional_function_type '>' $@60

  660 $@61: %empty

  661 $@62: %empty

  662 type_declaration_no_options: "tuple" '<' $@61 tuple_type_list '>' $@62

  663 $@63: %empty

  664 $@64: %empty

  665 type_declaration_no_options: "variant" '<' $@63 variant_type_list '>' $@64

  666 type_declaration: type_declaration_no_options
  667                 | type_declaration '|' type_declaration_no_options
  668                 | type_declaration '|' '#'

  669 $@65: %empty

  670 $@66: %empty

  671 variant_alias_declaration: "variant" $@65 "name" $@66 '{' variant_type_list ';' '}'

  672 $@67: %empty

  673 bitfield_alias_declaration: "bitfield" $@67 "name" '{' bitfield_bits ';' '}'

  674 make_decl: make_struct_decl
  675          | make_dim_decl
  676          | make_table_decl
  677          | array_comprehension

  678 make_struct_fields: "name" copy_or_move expr
  679                   | "name" ":=" expr
  680                   | make_struct_fields ',' "name" copy_or_move expr
  681                   | make_struct_fields ',' "name" ":=" expr
  682                   | "$f" '(' expr ')' copy_or_move expr
  683                   | "$f" '(' expr ')' ":=" expr
  684                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  685                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  686 make_struct_dim: make_struct_fields
  687                | make_struct_dim ';' make_struct_fields

  688 optional_block: %empty
  689               | "where" expr_block

  690 optional_trailing_semicolon_cur_cur: '}' '}'
  691                                    | ";}}"

  692 optional_trailing_semicolon_cur_sqr: '}' ']'
  693                                    | ";}]"

  694 optional_trailing_semicolon_sqr_sqr: ']' ']'
  695                                    | ";]]"

  696 optional_trailing_delim_sqr_sqr: ']' ']'
  697                                | ";]]"
  698                                | ",]]"

  699 optional_trailing_delim_cur_sqr: '}' ']'
  700                                | ";}]"
  701                                | ",}]"

  702 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  703                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  704                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  705                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  706                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  707                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  708 make_tuple: expr
  709           | expr "=>" expr
  710           | make_tuple ',' expr

  711 make_map_tuple: expr "=>" expr
  712               | expr

  713 make_dim: make_tuple
  714         | make_dim ';' make_tuple

  715 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  716              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  717 make_table: make_map_tuple
  718           | make_table ';' make_map_tuple

  719 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur

  720 array_comprehension_where: %empty
  721                          | ';' "where" expr

  722 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  723                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 104 120 370
    '#' (35) 620 622 668
    '$' (36) 17 297
    '%' (37) 32 38 140 382
    '&' (38) 148 300 389 498 507 618 619 624
    '(' (40) 95 102 108 115 116 255 256 289 290 291 342 343 344 345 347 400 408 409 410 411 413 414 415 416 444 446 447 448 449 450 452 453 454 455 456 457 458 459 460 461 485 509 560 599 600 682 683 684 685 704 705 707
    ')' (41) 95 102 108 115 116 255 256 289 290 291 342 343 344 345 347 400 408 409 410 411 413 414 415 416 444 446 447 448 449 450 452 453 454 455 456 457 458 459 460 461 485 509 560 599 600 682 683 684 685 704 705 707
    '*' (42) 138 380 412
    '+' (43) 136 372 378
    ',' (44) 47 84 97 111 293 305 343 511 512 562 563 680 681 684 685 710
    '-' (45) 137 373 379 614 617 619 622
    '.' (46) 39 165 167 168 355 356 359 402 404 406 454 456 457
    '/' (47) 40 139 381
    ':' (58) 49 50 118 418 489 492 499 500 513 514 515 545 547
    ';' (59) 13 70 71 213 217 218 225 226 231 232 233 263 268 291 477 479 482 487 491 494 513 514 516 530 531 532 535 536 539 602 607 671 673 687 714 718 721 722 723
    '<' (60) 141 240 252 279 282 285 288 290 291 351 354 383 415 416 421 427 432 605 628 632 635 638 642 645 649 652 656 659 662 665
    '=' (61) 76 88 89 90 91 92 93 95 301 318 336 337 338 495 503 532 534
    '>' (62) 142 240 252 279 282 285 288 290 291 351 354 384 415 416 421 427 432 605 628 632 635 638 642 645 649 652 656 659 662 665
    '?' (63) 177 178 418 429 432 433 459 625
    '@' (64) 298 299 348 351 354 461
    '[' (91) 113 163 342 343 401 402 482 612 613 614
    ']' (93) 113 163 164 307 342 343 401 402 403 404 463 482 612 613 614 692 694 696 699 722 723
    '^' (94) 150 391
    '{' (123) 211 212 526 537 544 545 558 671 673
    '|' (124) 149 390 667 668
    '}' (125) 211 212 526 537 544 545 558 671 673 690 692 699 723
    '~' (126) 121 371
    error (256) 236 359
    "lexer error" (258)
    "struct" (259) 552
    "class" (260) 551
    "let" (261) 272
    "def" (262) 204 479 481
    "while" (263) 73
    "if" (264) 58 70
    "static_if" (265) 59
    "else" (266) 56 62
    "for" (267) 71 722 723
    "recover" (268) 271
    "true" (269) 81 92 366
    "false" (270) 82 93 367
    "new" (271) 254 255 256 257
    "typeinfo" (272) 289 290 291
    "type" (273) 86 288 421 427 432
    "in" (274) 71 87 722 723
    "is" (275) 173 175 421 422 423 460
    "as" (276) 42 174 176 177 178 424 427 428 429 432 433 458 459
    "elif" (277) 53
    "static_elif" (278) 54
    "array" (279) 632
    "return" (280) 260 261 262 264 265
    "null" (281) 360
    "break" (282) 258
    "try" (283) 271
    "options" (284) 33
    "table" (285) 635
    "expect" (286) 45
    "const" (287) 468 616 617 623
    "require" (288) 34 99
    "operator" (289) 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
    "enum" (290) 544 545
    "finally" (291) 212
    "delete" (292) 171 248 249
    "deref" (293) 413
    "typedef" (294) 537 539
    "with" (295) 74
    "aka" (296) 510 512 561 563
    "assume" (297) 76
    "cast" (298) 279
    "override" (299) 465
    "abstract" (300) 479
    "upcast" (301) 282
    "iterator" (302) 638
    "var" (303) 273 484
    "addr" (304) 414
    "continue" (305) 259
    "where" (306) 689 721
    "pass" (307) 233
    "reinterpret" (308) 285
    "module" (309) 19
    "public" (310) 15 44 207 470 525 542 555
    "label" (311) 50 51
    "goto" (312) 51 52
    "implicit" (313) 621
    "explicit" (314) 249 615
    "shared" (315) 522
    "private" (316) 16 100 206 471 524 541 554
    "smart_ptr" (317) 628
    "unsafe" (318) 72 444
    "inscope" (319) 274
    "static" (320) 473
    "bool" (321) 179 564
    "void" (322) 584
    "string" (323) 180 565
    "auto" (324) 598 599
    "int" (325) 181 566 591
    "int2" (326) 182 570
    "int3" (327) 183 571
    "int4" (328) 184 572
    "uint" (329) 185 573 594
    "bitfield" (330) 590 605 673
    "uint2" (331) 186 577
    "uint3" (332) 187 578
    "uint4" (333) 188 579
    "float" (334) 189 580
    "float2" (335) 190 581
    "float3" (336) 191 582
    "float4" (337) 192 583
    "range" (338) 193 585
    "urange" (339) 194 586
    "range64" (340) 195 587
    "urange64" (341) 196 588
    "block" (342) 639 642 645
    "int64" (343) 197 569
    "uint64" (344) 198 576
    "double" (345) 199 589
    "function" (346) 646 649 652
    "lambda" (347) 653 656 659
    "int8" (348) 200 567 592
    "uint8" (349) 201 574 595
    "int16" (350) 202 568 593
    "uint16" (351) 203 575 596
    "tuple" (352) 662
    "variant" (353) 665 671
    "generator" (354) 415 416
    "yield" (355) 266 267 269 270
    "sealed" (356) 466 549
    "+=" (357) 122 327
    "-=" (358) 123 328
    "/=" (359) 125 330
    "*=" (360) 124 329
    "%=" (361) 126 331
    "&=" (362) 127 321
    "|=" (363) 128 322
    "^=" (364) 129 323
    "<<" (365) 155 374
    ">>" (366) 156 375
    "++" (367) 151 153 396 398
    "--" (368) 152 154 397 399
    "<=" (369) 146 387
    "<<=" (370) 157 332
    ">>=" (371) 158 333
    ">=" (372) 147 388
    "==" (373) 144 385 623 624
    "!=" (374) 145 386
    "->" (375) 344 345
    "<-" (376) 262 265 267 270 296 302 319 339 340 341 496 504
    "??" (377) 172 417 629
    "?." (378) 166 169 405 406 455 457
    "?[" (379) 164 403 404
    "<|" (380) 441
    " <|" (381) 241
    "$ <|" (382) 244 338 341
    "@ <|" (383) 242 336 339
    "@@ <|" (384) 243 337 340
    "|>" (385) 109 442
    ":=" (386) 168 170 303 320 505 679 681 683 685
    "<<<" (387) 159 376
    ">>>" (388) 160 377
    "<<<=" (389) 161 334
    ">>>=" (390) 162 335
    "=>" (391) 295 296 709 711
    "::" (392) 246 247
    "&&" (393) 105 133 392
    "||" (394) 106 134 393
    "^^" (395) 107 135 394
    "&&=" (396) 130 324
    "||=" (397) 131 325
    "^^=" (398) 132 326
    ".." (399) 143 395
    "$$" (400) 446
    "$i" (401) 347 447 509 560
    "$v" (402) 448
    "$b" (403) 449
    "$a" (404) 450 485
    "$t" (405) 600
    "$c" (406) 452 453 461
    "$f" (407) 454 455 456 457 458 459 460 682 683 684 685
    "..." (408) 451
    "[[" (409) 307 463 702 703 704 705 715 722
    "[{" (410) 706 707 716 723
    "{{" (411) 719
    "integer constant" <i> (412) 48 49 50 51 79 90 310
    "long integer constant" <i64> (413) 312
    "unsigned integer constant" <ui> (414) 311
    "unsigned long integer constant" <ui64> (415) 313
    "unsigned int8 constant" <ui> (416) 314
    "floating point constant" <fd> (417) 80 91 315
    "double constant" <d> (418) 316
    "name" <s> (419) 18 35 42 76 78 85 89 119 167 168 169 175 176 178 245 246 247 290 291 300 301 302 303 344 345 355 356 405 406 423 424 429 443 489 492 508 510 511 512 531 532 534 543 550 559 561 562 563 599 601 602 671 673 678 679 680 681
    "keyword" <s> (420) 36 237 240
    "start of the string" (421) 24 28
    STRING_CHARACTER <ch> (422) 20 22 29 30
    STRING_CHARACTER_ESC (423) 21 23
    "end of the string" (424) 24 28
    "{" (425) 27
    "}" (426) 27
    "end of failed eader macro" (427)
    ";}}" (428) 691
    ";}]" (429) 693 700
    ";]]" (430) 695 697
    ",]]" (431) 698
    ",}]" (432) 701
    UNARY_MINUS (433)
    UNARY_PLUS (434)
    PRE_INC (435)
    PRE_DEC (436)
    POST_INC (437)
    POST_DEC (438)
    DEREF (439)


Nonterminals, with rules where they appear

    $accept (212)
        on left: 0
    program (213)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13
    optional_public_or_private_module <b> (214)
        on left: 14 15 16
        on right: 19
    module_name <s> (215)
        on left: 17 18
        on right: 19
    module_declaration (216)
        on left: 19
        on right: 2
    character_sequence <s> (217)
        on left: 20 21 22 23
        on right: 22 23 24 26
    string_constant <s> (218)
        on left: 24
        on right: 77 88
    string_builder_body <pExpression> (219)
        on left: 25 26 27
        on right: 26 27 28
    string_builder <pExpression> (220)
        on left: 28
        on right: 364
    reader_character_sequence (221)
        on left: 29 30
        on right: 30 32
    expr_reader <pExpression> (222)
        on left: 32
        on right: 363
    $@1 (223)
        on left: 31
        on right: 32
    options_declaration (224)
        on left: 33
        on right: 9
    require_declaration (225)
        on left: 34
        on right: 8
    keyword_or_name <s> (226)
        on left: 35 36
        on right: 37 39 40
    require_module_name <s> (227)
        on left: 37 38 39 40
        on right: 38 39 40 41 42
    require_module (228)
        on left: 41 42
        on right: 34
    is_public_module <b> (229)
        on left: 43 44
        on right: 41 42
    expect_declaration (230)
        on left: 45
        on right: 7
    expect_list (231)
        on left: 46 47
        on right: 45 47
    expect_error (232)
        on left: 48 49
        on right: 46 47
    expression_label <pExpression> (233)
        on left: 50
        on right: 231
    expression_goto <pExpression> (234)
        on left: 51 52
        on right: 232
    elif_or_static_elif <b> (235)
        on left: 53 54
        on right: 57
    expression_else <pExpression> (236)
        on left: 55 56 57
        on right: 57 68
    if_or_static_if <b> (237)
        on left: 58 59
        on right: 68
    expression_else_one_liner <pExpression> (238)
        on left: 60 62
        on right: 70
    $@2 (239)
        on left: 61
        on right: 62
    expression_if_one_liner <pExpression> (240)
        on left: 63 64 65 66 67
        on right: 62 70
    expression_if_then_else <pExpression> (241)
        on left: 68 70
        on right: 229
    $@3 (242)
        on left: 69
        on right: 70
    expression_for_loop <pExpression> (243)
        on left: 71
        on right: 224
    expression_unsafe <pExpression> (244)
        on left: 72
        on right: 221
    expression_while_loop <pExpression> (245)
        on left: 73
        on right: 220
    expression_with <pExpression> (246)
        on left: 74
        on right: 222
    expression_with_alias <pExpression> (247)
        on left: 76
        on right: 223
    $@4 (248)
        on left: 75
        on right: 76
    annotation_argument_value <aa> (249)
        on left: 77 78 79 80 81 82
        on right: 83 84
    annotation_argument_value_list <aaList> (250)
        on left: 83 84
        on right: 84 95
    annotation_argument_name <s> (251)
        on left: 85 86 87
        on right: 88 89 90 91 92 93 94 95
    annotation_argument <aa> (252)
        on left: 88 89 90 91 92 93 94 95
        on right: 96 97
    annotation_argument_list <aaList> (253)
        on left: 96 97
        on right: 33 97 102 463
    annotation_declaration_name <s> (254)
        on left: 98 99 100
        on right: 101 102
    annotation_declaration_basic <fa> (255)
        on left: 101 102
        on right: 103
    annotation_declaration <fa> (256)
        on left: 103 104 105 106 107 108 109
        on right: 104 105 106 107 108 109 110 111
    annotation_list <faList> (257)
        on left: 110 111
        on right: 111 113 482
    optional_annotation_list <faList> (258)
        on left: 112 113
        on right: 204 309 479 481 544 545 558
    optional_function_argument_list <pVarDeclList> (259)
        on left: 114 115 116
        on right: 208 309 354 645 652 659
    optional_function_type <pTypeDecl> (260)
        on left: 117 118
        on right: 208 309 354 645 652 659
    function_name <s> (261)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
        on right: 208
    global_function_declaration (262)
        on left: 204
        on right: 6
    optional_public_or_private_function <b> (263)
        on left: 205 206 207
        on right: 210
    function_declaration_header <pFuncDecl> (264)
        on left: 208
        on right: 210 479 481
    function_declaration <pFuncDecl> (265)
        on left: 210
        on right: 204
    $@5 (266)
        on left: 209
        on right: 210
    expression_block <pExpression> (267)
        on left: 211 212
        on right: 56 57 68 71 72 73 74 210 237 271 294 308 481
    expression_any <pExpression> (268)
        on left: 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233
        on right: 235
    expressions <pExpression> (269)
        on left: 234 235 236
        on right: 211 212 235 236
    expr_keyword <pExpression> (270)
        on left: 237
        on right: 215
    expression_keyword <pExpression> (271)
        on left: 240
        on right: 445
    $@6 (272)
        on left: 238
        on right: 240
    $@7 (273)
        on left: 239
        on right: 240
    expr_pipe <pExpression> (274)
        on left: 241 242 243 244
        on right: 214 264 265 269 270 502 515 517
    name_in_namespace <s> (275)
        on left: 245 246 247
        on right: 32 98 289 290 291 342 343 346 361 408 409 443 547 597
    expression_delete <pExpression> (276)
        on left: 248 249
        on right: 218
    new_type_declaration <pTypeDecl> (277)
        on left: 252 253
        on right: 254 255 256
    $@8 (278)
        on left: 250
        on right: 252
    $@9 (279)
        on left: 251
        on right: 252
    expr_new <pExpression> (280)
        on left: 254 255 256 257
        on right: 437
    expression_break <pExpression> (281)
        on left: 258
        on right: 66 225
    expression_continue <pExpression> (282)
        on left: 259
        on right: 67 226
    expression_return_no_pipe <pExpression> (283)
        on left: 260 261 262
        on right: 64 263
    expression_return <pExpression> (284)
        on left: 263 264 265
        on right: 227
    expression_yield_no_pipe <pExpression> (285)
        on left: 266 267
        on right: 65 268
    expression_yield <pExpression> (286)
        on left: 268 269 270
        on right: 228
    expression_try_catch <pExpression> (287)
        on left: 271
        on right: 230
    kwd_let <b> (288)
        on left: 272 273
        on right: 276 526 528
    optional_in_scope <b> (289)
        on left: 274 275
        on right: 276
    expression_let <pExpression> (290)
        on left: 276
        on right: 219
    expr_cast <pExpression> (291)
        on left: 279 282 285
        on right: 436
    $@10 (292)
        on left: 277
        on right: 279
    $@11 (293)
        on left: 278
        on right: 279
    $@12 (294)
        on left: 280
        on right: 282
    $@13 (295)
        on left: 281
        on right: 282
    $@14 (296)
        on left: 283
        on right: 285
    $@15 (297)
        on left: 284
        on right: 285
    expr_type_decl <pExpression> (298)
        on left: 288
        on right: 435
    $@16 (299)
        on left: 286
        on right: 288
    $@17 (300)
        on left: 287
        on right: 288
    expr_type_info <pExpression> (301)
        on left: 289 290 291
        on right: 434
    expr_list <pExpression> (302)
        on left: 292 293
        on right: 71 256 293 343 345 409 411 453 722 723
    block_or_simple_block <pExpression> (303)
        on left: 294 295 296
        on right: 309
    block_or_lambda <i> (304)
        on left: 297 298 299
        on right: 309
    capture_entry <pCapt> (305)
        on left: 300 301 302 303
        on right: 304 305
    capture_list <pCaptList> (306)
        on left: 304 305
        on right: 305 307
    optional_capture_list <pCaptList> (307)
        on left: 306 307
        on right: 309 415 416
    expr_block <pExpression> (308)
        on left: 308 309
        on right: 241 242 243 244 336 337 338 339 340 341 440 689
    expr_numeric_const <pExpression> (309)
        on left: 310 311 312 313 314 315 316
        on right: 362
    expr_assign <pExpression> (310)
        on left: 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335
        on right: 217 241
    expr_assign_pipe <pExpression> (311)
        on left: 336 337 338 339 340 341
        on right: 216
    expr_named_call <pExpression> (312)
        on left: 342 343
        on right: 439
    expr_method_call <pExpression> (313)
        on left: 344 345
        on right: 438
    func_addr_name <pExpression> (314)
        on left: 346 347
        on right: 348 351 354
    func_addr_expr <pExpression> (315)
        on left: 348 351 354
        on right: 407
    $@18 (316)
        on left: 349
        on right: 351
    $@19 (317)
        on left: 350
        on right: 351
    $@20 (318)
        on left: 352
        on right: 354
    $@21 (319)
        on left: 353
        on right: 354
    expr_field <pExpression> (320)
        on left: 355 356 359
        on right: 368
    $@22 (321)
        on left: 357
        on right: 359
    $@23 (322)
        on left: 358
        on right: 359
    expr <pExpression> (323)
        on left: 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 427 428 429 432 433 434 435 436 437 438 439 440 441 442 443 444 445
        on right
    $@24 (324)
        on left: 419
        on right: 421
    $@25 (325)
        on left: 420
        on right: 421
    $@26 (326)
        on left: 425
        on right: 427
    $@27 (327)
        on left: 426
        on right: 427
    $@28 (328)
        on left: 430
        on right: 432
    $@29 (329)
        on left: 431
        on right: 432
    expr_mtag <pExpression> (330)
        on left: 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461
        on right: 369
    optional_field_annotation <aaList> (331)
        on left: 462 463
        on right: 474 483 484 520 528
    optional_override <i> (332)
        on left: 464 465 466
        on right: 474 481
    optional_constant <b> (333)
        on left: 467 468
        on right: 479 481
    optional_public_or_private_member_variable <b> (334)
        on left: 469 470 471
        on right: 474 479 481
    optional_static_member_variable <b> (335)
        on left: 472 473
        on right: 474 481
    structure_variable_declaration <pVarDecl> (336)
        on left: 474
        on right: 477
    struct_variable_declaration_list <pVarDeclList> (337)
        on left: 475 477 479 481 482
        on right: 477 479 481 482 558
    $@30 (338)
        on left: 476
        on right: 477
    $@31 (339)
        on left: 478
        on right: 479
    $@32 (340)
        on left: 480
        on right: 481
    function_argument_declaration <pVarDecl> (341)
        on left: 483 484 485
        on right: 486 487
    function_argument_list <pVarDeclList> (342)
        on left: 486 487
        on right: 116 487
    tuple_type <pVarDecl> (343)
        on left: 488 489
        on right: 490 491
    tuple_type_list <pVarDeclList> (344)
        on left: 490 491
        on right: 491 662
    variant_type <pVarDecl> (345)
        on left: 492
        on right: 493 494
    variant_type_list <pVarDeclList> (346)
        on left: 493 494
        on right: 494 665 671
    copy_or_move <b> (347)
        on left: 495 496
        on right: 500 501 502 678 680 682 684
    variable_declaration <pVarDecl> (348)
        on left: 497 498 499 500 501 502
        on right: 474 483 484
    copy_or_move_or_clone <i> (349)
        on left: 503 504 505
        on right: 514 515 516 517
    optional_ref <b> (350)
        on left: 506 507
        on right: 516 517
    let_variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 508 509 510 511 512
        on right: 511 512 513 514 515 516 517
    let_variable_declaration <pVarDecl> (352)
        on left: 513 514 515 516 517
        on right: 276 520 528
    global_variable_declaration_list <pVarDeclList> (353)
        on left: 518 520
        on right: 520 526
    $@33 (354)
        on left: 519
        on right: 520
    optional_shared <b> (355)
        on left: 521 522
        on right: 19 526 528
    optional_public_or_private_variable <b> (356)
        on left: 523 524 525
        on right: 526 528
    global_let (357)
        on left: 526 528
        on right: 5
    $@34 (358)
        on left: 527
        on right: 528
    enum_list <pEnum> (359)
        on left: 529 530 531 532
        on right: 530 531 532 544 545
    single_alias (360)
        on left: 534
        on right: 535 536 539
    $@35 (361)
        on left: 533
        on right: 534
    alias_list (362)
        on left: 535 536
        on right: 536 537
    alias_declaration (363)
        on left: 537 539
        on right: 10
    $@36 (364)
        on left: 538
        on right: 539
    optional_public_or_private_enum <b> (365)
        on left: 540 541 542
        on right: 544 545
    enum_name <pEnum> (366)
        on left: 543
        on right: 544 545
    enum_declaration (367)
        on left: 544 545
        on right: 4
    optional_structure_parent <s> (368)
        on left: 546 547
        on right: 550
    optional_sealed <b> (369)
        on left: 548 549
        on right: 550
    structure_name <pStructure> (370)
        on left: 550
        on right: 558
    class_or_struct <b> (371)
        on left: 551 552
        on right: 558
    optional_public_or_private_structure <b> (372)
        on left: 553 554 555
        on right: 558
    structure_declaration (373)
        on left: 558
        on right: 3
    $@37 (374)
        on left: 556
        on right: 558
    $@38 (375)
        on left: 557
        on right: 558
    variable_name_with_pos_list <pNameWithPosList> (376)
        on left: 559 560 561 562 563
        on right: 71 497 498 499 500 501 502 562 563 722 723
    basic_type_declaration <type> (377)
        on left: 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590
        on right: 410 411 422 428 433 608
    enum_basic_type_declaration <type> (378)
        on left: 591 592 593 594 595 596
        on right: 545
    structure_type_declaration <pTypeDecl> (379)
        on left: 597
        on right: 253 611
    auto_type_declaration <pTypeDecl> (380)
        on left: 598 599 600
        on right: 609
    bitfield_bits <pNameList> (381)
        on left: 601 602
        on right: 602 605 673
    bitfield_type_declaration <pTypeDecl> (382)
        on left: 605
        on right: 610
    $@39 (383)
        on left: 603
        on right: 605
    $@40 (384)
        on left: 604
        on right: 605
    table_type_pair <aTypePair> (385)
        on left: 606 607
        on right: 635
    type_declaration_no_options <pTypeDecl> (386)
        on left: 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 628 629 632 635 638 639 642 645 646 649 652 653 656 659 662 665
        on right: 240 279 282 285 351 415 416 421 513 514 515 612 613 614 615 616 617 618 619 620 621 622 623 624 625 629 666 667 702 703 704 705 706 707 715 716
    $@41 (387)
        on left: 626
        on right: 628
    $@42 (388)
        on left: 627
        on right: 628
    $@43 (389)
        on left: 630
        on right: 632
    $@44 (390)
        on left: 631
        on right: 632
    $@45 (391)
        on left: 633
        on right: 635
    $@46 (392)
        on left: 634
        on right: 635
    $@47 (393)
        on left: 636
        on right: 638
    $@48 (394)
        on left: 637
        on right: 638
    $@49 (395)
        on left: 640
        on right: 642
    $@50 (396)
        on left: 641
        on right: 642
    $@51 (397)
        on left: 643
        on right: 645
    $@52 (398)
        on left: 644
        on right: 645
    $@53 (399)
        on left: 647
        on right: 649
    $@54 (400)
        on left: 648
        on right: 649
    $@55 (401)
        on left: 650
        on right: 652
    $@56 (402)
        on left: 651
        on right: 652
    $@57 (403)
        on left: 654
        on right: 656
    $@58 (404)
        on left: 655
        on right: 656
    $@59 (405)
        on left: 657
        on right: 659
    $@60 (406)
        on left: 658
        on right: 659
    $@61 (407)
        on left: 660
        on right: 662
    $@62 (408)
        on left: 661
        on right: 662
    $@63 (409)
        on left: 663
        on right: 665
    $@64 (410)
        on left: 664
        on right: 665
    type_declaration <pTypeDecl> (411)
        on left: 666 667 668
        on right: 118 252 288 427 432 488 489 492 499 500 534 606 607 628 632 638 642 649 656 667 668
    variant_alias_declaration (412)
        on left: 671
        on right: 11
    $@65 (413)
        on left: 669
        on right: 671
    $@66 (414)
        on left: 670
        on right: 671
    bitfield_alias_declaration (415)
        on left: 673
        on right: 12
    $@67 (416)
        on left: 672
        on right: 673
    make_decl <pExpression> (417)
        on left: 674 675 676 677
        on right: 257 365
    make_struct_fields <pMakeStruct> (418)
        on left: 678 679 680 681 682 683 684 685
        on right: 342 343 680 681 684 685 686 687
    make_struct_dim <pExpression> (419)
        on left: 686 687
        on right: 687 702 705 706 707
    optional_block <pExpression> (420)
        on left: 688 689
        on right: 702 703 704 705 706 707
    optional_trailing_semicolon_cur_cur (421)
        on left: 690 691
        on right: 719
    optional_trailing_semicolon_cur_sqr (422)
        on left: 692 693
        on right: 716
    optional_trailing_semicolon_sqr_sqr (423)
        on left: 694 695
        on right: 715
    optional_trailing_delim_sqr_sqr (424)
        on left: 696 697 698
        on right: 702 703 704 705
    optional_trailing_delim_cur_sqr (425)
        on left: 699 700 701
        on right: 706 707
    make_struct_decl <pExpression> (426)
        on left: 702 703 704 705 706 707
        on right: 674
    make_tuple <pExpression> (427)
        on left: 708 709 710
        on right: 710 713 714
    make_map_tuple <pExpression> (428)
        on left: 711 712
        on right: 717 718
    make_dim <pExpression> (429)
        on left: 713 714
        on right: 714 715 716
    make_dim_decl <pExpression> (430)
        on left: 715 716
        on right: 675
    make_table <pExpression> (431)
        on left: 717 718
        on right: 718 719
    make_table_decl <pExpression> (432)
        on left: 719
        on right: 676
    array_comprehension_where <pExpression> (433)
        on left: 720 721
        on right: 722 723
    array_comprehension <pExpression> (434)
        on left: 722 723
        on right: 677


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '['         shift, and go to state 12
    ';'         shift, and go to state 13

    $default  reduce using rule 112 (optional_annotation_list)

    module_declaration           go to state 14
    options_declaration          go to state 15
    require_declaration          go to state 16
    expect_declaration           go to state 17
    optional_annotation_list     go to state 18
    global_function_declaration  go to state 19
    kwd_let                      go to state 20
    global_let                   go to state 21
    alias_declaration            go to state 22
    enum_declaration             go to state 23
    structure_declaration        go to state 24
    variant_alias_declaration    go to state 25
    bitfield_alias_declaration   go to state 26


State 2

    0 $accept: program $end .

    $default  accept


State 3

  272 kwd_let: "let" .

    $default  reduce using rule 272 (kwd_let)


State 4

   33 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 32


State 5

   45 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 33

    expect_list   go to state 34
    expect_error  go to state 35


State 6

   34 require_declaration: "require" . require_module

    "name"     shift, and go to state 36
    "keyword"  shift, and go to state 37
    '%'        shift, and go to state 38

    keyword_or_name      go to state 39
    require_module_name  go to state 40
    require_module       go to state 41


State 7

  537 alias_declaration: "typedef" . '{' alias_list '}'
  539                  | "typedef" . $@36 single_alias ';'

    '{'  shift, and go to state 42

    $default  reduce using rule 538 ($@36)

    $@36  go to state 43


State 8

  273 kwd_let: "var" .

    $default  reduce using rule 273 (kwd_let)


State 9

   19 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 44
    '$'     shift, and go to state 45

    module_name  go to state 46


State 10

  673 bitfield_alias_declaration: "bitfield" . $@67 "name" '{' bitfield_bits ';' '}'

    $default  reduce using rule 672 ($@67)

    $@67  go to state 47


State 11

  671 variant_alias_declaration: "variant" . $@65 "name" $@66 '{' variant_type_list ';' '}'

    $default  reduce using rule 669 ($@65)

    $@65  go to state 48


State 12

  113 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 58
    annotation_list               go to state 59
    name_in_namespace             go to state 60


State 13

   13 program: program ';' .

    $default  reduce using rule 13 (program)


State 14

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 15

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 16

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 17

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 18

  204 global_function_declaration: optional_annotation_list . "def" function_declaration
  544 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  545                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  558 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 61
    "class"   shift, and go to state 62
    "def"     shift, and go to state 63
    "enum"    shift, and go to state 64

    class_or_struct  go to state 65


State 19

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 20

  526 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  528           | kwd_let . optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 66

    $default  reduce using rule 521 (optional_shared)

    optional_shared  go to state 67


State 21

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 22

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 23

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 24

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 25

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 26

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 27

   86 annotation_argument_name: "type" .

    $default  reduce using rule 86 (annotation_argument_name)


State 28

   87 annotation_argument_name: "in" .

    $default  reduce using rule 87 (annotation_argument_name)


State 29

   85 annotation_argument_name: "name" .

    $default  reduce using rule 85 (annotation_argument_name)


State 30

   88 annotation_argument: annotation_argument_name . '=' string_constant
   89                    | annotation_argument_name . '=' "name"
   90                    | annotation_argument_name . '=' "integer constant"
   91                    | annotation_argument_name . '=' "floating point constant"
   92                    | annotation_argument_name . '=' "true"
   93                    | annotation_argument_name . '=' "false"
   94                    | annotation_argument_name .
   95                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 68

    $default  reduce using rule 94 (annotation_argument)


State 31

   96 annotation_argument_list: annotation_argument .

    $default  reduce using rule 96 (annotation_argument_list)


State 32

   33 options_declaration: "options" annotation_argument_list .
   97 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 69

    $default  reduce using rule 33 (options_declaration)


State 33

   48 expect_error: "integer constant" .
   49             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 70

    $default  reduce using rule 48 (expect_error)


State 34

   45 expect_declaration: "expect" expect_list .
   47 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 71

    $default  reduce using rule 45 (expect_declaration)


State 35

   46 expect_list: expect_error .

    $default  reduce using rule 46 (expect_list)


State 36

   35 keyword_or_name: "name" .

    $default  reduce using rule 35 (keyword_or_name)


State 37

   36 keyword_or_name: "keyword" .

    $default  reduce using rule 36 (keyword_or_name)


State 38

   38 require_module_name: '%' . require_module_name

    "name"     shift, and go to state 36
    "keyword"  shift, and go to state 37
    '%'        shift, and go to state 38

    keyword_or_name      go to state 39
    require_module_name  go to state 72


State 39

   37 require_module_name: keyword_or_name .

    $default  reduce using rule 37 (require_module_name)


State 40

   39 require_module_name: require_module_name . '.' keyword_or_name
   40                    | require_module_name . '/' keyword_or_name
   41 require_module: require_module_name . is_public_module
   42               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 73
    "public"  shift, and go to state 74
    '/'       shift, and go to state 75
    '.'       shift, and go to state 76

    $default  reduce using rule 43 (is_public_module)

    is_public_module  go to state 77


State 41

   34 require_declaration: "require" require_module .

    $default  reduce using rule 34 (require_declaration)


State 42

  537 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 78

    single_alias  go to state 79
    alias_list    go to state 80


State 43

  539 alias_declaration: "typedef" $@36 . single_alias ';'

    "name"  shift, and go to state 78

    single_alias  go to state 81


State 44

   18 module_name: "name" .

    $default  reduce using rule 18 (module_name)


State 45

   17 module_name: '$' .

    $default  reduce using rule 17 (module_name)


State 46

   19 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 66

    $default  reduce using rule 521 (optional_shared)

    optional_shared  go to state 82


State 47

  673 bitfield_alias_declaration: "bitfield" $@67 . "name" '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 83


State 48

  671 variant_alias_declaration: "variant" $@65 . "name" $@66 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 84


State 49

   99 annotation_declaration_name: "require" .

    $default  reduce using rule 99 (annotation_declaration_name)


State 50

  100 annotation_declaration_name: "private" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 51

  109 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 85
    name_in_namespace             go to state 60


State 52

  247 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 86


State 53

  245 name_in_namespace: "name" .
  246                  | "name" . "::" "name"

    "::"  shift, and go to state 87

    "::"      [reduce using rule 245 (name_in_namespace)]
    $default  reduce using rule 245 (name_in_namespace)


State 54

  104 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 88
    name_in_namespace             go to state 60


State 55

  108 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 89
    name_in_namespace             go to state 60


State 56

  101 annotation_declaration_basic: annotation_declaration_name .
  102                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 90

    $default  reduce using rule 101 (annotation_declaration_basic)


State 57

  103 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 103 (annotation_declaration)


State 58

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  110 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 91
    "||"  shift, and go to state 92
    "^^"  shift, and go to state 93

    $default  reduce using rule 110 (annotation_list)


State 59

  111 annotation_list: annotation_list . ',' annotation_declaration
  113 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 94
    ']'  shift, and go to state 95


State 60

   98 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 98 (annotation_declaration_name)


State 61

  552 class_or_struct: "struct" .

    $default  reduce using rule 552 (class_or_struct)


State 62

  551 class_or_struct: "class" .

    $default  reduce using rule 551 (class_or_struct)


State 63

  204 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 96
    "private"  shift, and go to state 97

    $default  reduce using rule 205 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 98
    function_declaration                 go to state 99


State 64

  544 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  545                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 100
    "private"  shift, and go to state 101

    $default  reduce using rule 540 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 102


State 65

  558 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 103
    "private"  shift, and go to state 104

    $default  reduce using rule 553 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 105


State 66

  522 optional_shared: "shared" .

    $default  reduce using rule 522 (optional_shared)


State 67

  526 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  528           | kwd_let optional_shared . optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 106
    "private"  shift, and go to state 107

    $default  reduce using rule 523 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 108


State 68

   88 annotation_argument: annotation_argument_name '=' . string_constant
   89                    | annotation_argument_name '=' . "name"
   90                    | annotation_argument_name '=' . "integer constant"
   91                    | annotation_argument_name '=' . "floating point constant"
   92                    | annotation_argument_name '=' . "true"
   93                    | annotation_argument_name '=' . "false"
   95                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 109
    "false"                    shift, and go to state 110
    "integer constant"         shift, and go to state 111
    "floating point constant"  shift, and go to state 112
    "name"                     shift, and go to state 113
    "start of the string"      shift, and go to state 114
    '('                        shift, and go to state 115

    string_constant  go to state 116


State 69

   97 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 117


State 70

   49 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 118


State 71

   47 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 33

    expect_error  go to state 119


State 72

   38 require_module_name: '%' require_module_name .
   39                    | require_module_name . '.' keyword_or_name
   40                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 76

    $default  reduce using rule 38 (require_module_name)


State 73

   42 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 120


State 74

   44 is_public_module: "public" .

    $default  reduce using rule 44 (is_public_module)


State 75

   40 require_module_name: require_module_name '/' . keyword_or_name

    "name"     shift, and go to state 36
    "keyword"  shift, and go to state 37

    keyword_or_name  go to state 121


State 76

   39 require_module_name: require_module_name '.' . keyword_or_name

    "name"     shift, and go to state 36
    "keyword"  shift, and go to state 37

    keyword_or_name  go to state 122


State 77

   41 require_module: require_module_name is_public_module .

    $default  reduce using rule 41 (require_module)


State 78

  534 single_alias: "name" . $@35 '=' type_declaration

    $default  reduce using rule 533 ($@35)

    $@35  go to state 123


State 79

  535 alias_list: single_alias . ';'

    ';'  shift, and go to state 124


State 80

  536 alias_list: alias_list . single_alias ';'
  537 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 78
    '}'     shift, and go to state 125

    single_alias  go to state 126


State 81

  539 alias_declaration: "typedef" $@36 single_alias . ';'

    ';'  shift, and go to state 127


State 82

   19 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 128
    "private"  shift, and go to state 129

    $default  reduce using rule 14 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 130


State 83

  673 bitfield_alias_declaration: "bitfield" $@67 "name" . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 131


State 84

  671 variant_alias_declaration: "variant" $@65 "name" . $@66 '{' variant_type_list ';' '}'

    $default  reduce using rule 670 ($@66)

    $@66  go to state 132


State 85

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  109                       | "|>" annotation_declaration .

    $default  reduce using rule 109 (annotation_declaration)


State 86

  247 name_in_namespace: "::" "name" .

    $default  reduce using rule 247 (name_in_namespace)


State 87

  246 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 133


State 88

  104 annotation_declaration: '!' annotation_declaration .
  105                       | annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 104 (annotation_declaration)


State 89

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  108                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 91
    "||"  shift, and go to state 92
    "^^"  shift, and go to state 93
    ')'   shift, and go to state 134


State 90

  102 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 135


State 91

  105 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 136
    name_in_namespace             go to state 60


State 92

  106 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 137
    name_in_namespace             go to state 60


State 93

  107 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 138
    name_in_namespace             go to state 60


State 94

  111 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 139
    name_in_namespace             go to state 60


State 95

  113 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 113 (optional_annotation_list)


State 96

  207 optional_public_or_private_function: "public" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 97

  206 optional_public_or_private_function: "private" .

    $default  reduce using rule 206 (optional_public_or_private_function)


State 98

  210 function_declaration: optional_public_or_private_function . $@5 function_declaration_header expression_block

    $default  reduce using rule 209 ($@5)

    $@5  go to state 140


State 99

  204 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 204 (global_function_declaration)


State 100

  542 optional_public_or_private_enum: "public" .

    $default  reduce using rule 542 (optional_public_or_private_enum)


State 101

  541 optional_public_or_private_enum: "private" .

    $default  reduce using rule 541 (optional_public_or_private_enum)


State 102

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  545                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 141

    enum_name  go to state 142


State 103

  555 optional_public_or_private_structure: "public" .

    $default  reduce using rule 555 (optional_public_or_private_structure)


State 104

  554 optional_public_or_private_structure: "private" .

    $default  reduce using rule 554 (optional_public_or_private_structure)


State 105

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@37 structure_name $@38 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 556 ($@37)

    $@37  go to state 143


State 106

  525 optional_public_or_private_variable: "public" .

    $default  reduce using rule 525 (optional_public_or_private_variable)


State 107

  524 optional_public_or_private_variable: "private" .

    $default  reduce using rule 524 (optional_public_or_private_variable)


State 108

  526 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  528           | kwd_let optional_shared optional_public_or_private_variable . $@34 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 144

    $default  reduce using rule 527 ($@34)

    $@34  go to state 145


State 109

   92 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 92 (annotation_argument)


State 110

   93 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 93 (annotation_argument)


State 111

   90 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 90 (annotation_argument)


State 112

   91 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 91 (annotation_argument)


State 113

   89 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 89 (annotation_argument)


State 114

   24 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 146
    STRING_CHARACTER_ESC  shift, and go to state 147

    character_sequence  go to state 148


State 115

   95 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 149
    "false"                    shift, and go to state 150
    "integer constant"         shift, and go to state 151
    "floating point constant"  shift, and go to state 152
    "name"                     shift, and go to state 153
    "start of the string"      shift, and go to state 114

    string_constant                 go to state 154
    annotation_argument_value       go to state 155
    annotation_argument_value_list  go to state 156


State 116

   88 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 88 (annotation_argument)


State 117

   97 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 97 (annotation_argument_list)


State 118

   49 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 49 (expect_error)


State 119

   47 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 47 (expect_list)


State 120

   42 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 74

    $default  reduce using rule 43 (is_public_module)

    is_public_module  go to state 157


State 121

   40 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 40 (require_module_name)


State 122

   39 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 39 (require_module_name)


State 123

  534 single_alias: "name" $@35 . '=' type_declaration

    '='  shift, and go to state 158


State 124

  535 alias_list: single_alias ';' .

    $default  reduce using rule 535 (alias_list)


State 125

  537 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 537 (alias_declaration)


State 126

  536 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 159


State 127

  539 alias_declaration: "typedef" $@36 single_alias ';' .

    $default  reduce using rule 539 (alias_declaration)


State 128

   15 optional_public_or_private_module: "public" .

    $default  reduce using rule 15 (optional_public_or_private_module)


State 129

   16 optional_public_or_private_module: "private" .

    $default  reduce using rule 16 (optional_public_or_private_module)


State 130

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 19 (module_declaration)


State 131

  673 bitfield_alias_declaration: "bitfield" $@67 "name" '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 160

    bitfield_bits  go to state 161


State 132

  671 variant_alias_declaration: "variant" $@65 "name" $@66 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 162


State 133

  246 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 246 (name_in_namespace)


State 134

  108 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 108 (annotation_declaration)


State 135

   97 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 69
    ')'  shift, and go to state 163


State 136

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration .
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 137

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration .
  107                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 91
    "^^"  shift, and go to state 93

    $default  reduce using rule 106 (annotation_declaration)


State 138

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 91

    $default  reduce using rule 107 (annotation_declaration)


State 139

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 91
    "||"  shift, and go to state 92
    "^^"  shift, and go to state 93

    $default  reduce using rule 111 (annotation_list)


State 140

  210 function_declaration: optional_public_or_private_function $@5 . function_declaration_header expression_block

    "operator"  shift, and go to state 164
    "bool"      shift, and go to state 165
    "string"    shift, and go to state 166
    "int"       shift, and go to state 167
    "int2"      shift, and go to state 168
    "int3"      shift, and go to state 169
    "int4"      shift, and go to state 170
    "uint"      shift, and go to state 171
    "uint2"     shift, and go to state 172
    "uint3"     shift, and go to state 173
    "uint4"     shift, and go to state 174
    "float"     shift, and go to state 175
    "float2"    shift, and go to state 176
    "float3"    shift, and go to state 177
    "float4"    shift, and go to state 178
    "range"     shift, and go to state 179
    "urange"    shift, and go to state 180
    "range64"   shift, and go to state 181
    "urange64"  shift, and go to state 182
    "int64"     shift, and go to state 183
    "uint64"    shift, and go to state 184
    "double"    shift, and go to state 185
    "int8"      shift, and go to state 186
    "uint8"     shift, and go to state 187
    "int16"     shift, and go to state 188
    "uint16"    shift, and go to state 189
    "++"        shift, and go to state 190
    "--"        shift, and go to state 191
    "name"      shift, and go to state 192

    function_name                go to state 193
    function_declaration_header  go to state 194


State 141

  543 enum_name: "name" .

    $default  reduce using rule 543 (enum_name)


State 142

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  545                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 195
    '{'  shift, and go to state 196


State 143

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 . structure_name $@38 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 197

    $default  reduce using rule 548 (optional_sealed)

    optional_sealed  go to state 198
    structure_name   go to state 199


State 144

  526 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 518 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 200


State 145

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 201

    $default  reduce using rule 462 (optional_field_annotation)

    optional_field_annotation  go to state 202


State 146

   20 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 20 (character_sequence)


State 147

   21 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 21 (character_sequence)


State 148

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   24 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 203
    STRING_CHARACTER_ESC  shift, and go to state 204
    "end of the string"   shift, and go to state 205


State 149

   81 annotation_argument_value: "true" .

    $default  reduce using rule 81 (annotation_argument_value)


State 150

   82 annotation_argument_value: "false" .

    $default  reduce using rule 82 (annotation_argument_value)


State 151

   79 annotation_argument_value: "integer constant" .

    $default  reduce using rule 79 (annotation_argument_value)


State 152

   80 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 80 (annotation_argument_value)


State 153

   78 annotation_argument_value: "name" .

    $default  reduce using rule 78 (annotation_argument_value)


State 154

   77 annotation_argument_value: string_constant .

    $default  reduce using rule 77 (annotation_argument_value)


State 155

   83 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 83 (annotation_argument_value_list)


State 156

   84 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   95 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 206
    ')'  shift, and go to state 207


State 157

   42 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 42 (require_module)


State 158

  534 single_alias: "name" $@35 '=' . type_declaration

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 252


State 159

  536 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 536 (alias_list)


State 160

  601 bitfield_bits: "name" .

    $default  reduce using rule 601 (bitfield_bits)


State 161

  602 bitfield_bits: bitfield_bits . ';' "name"
  673 bitfield_alias_declaration: "bitfield" $@67 "name" '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 253


State 162

  671 variant_alias_declaration: "variant" $@65 "name" $@66 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 254

    variant_type       go to state 255
    variant_type_list  go to state 256


State 163

  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 102 (annotation_declaration_basic)


State 164

  120 function_name: "operator" . '!'
  121              | "operator" . '~'
  122              | "operator" . "+="
  123              | "operator" . "-="
  124              | "operator" . "*="
  125              | "operator" . "/="
  126              | "operator" . "%="
  127              | "operator" . "&="
  128              | "operator" . "|="
  129              | "operator" . "^="
  130              | "operator" . "&&="
  131              | "operator" . "||="
  132              | "operator" . "^^="
  133              | "operator" . "&&"
  134              | "operator" . "||"
  135              | "operator" . "^^"
  136              | "operator" . '+'
  137              | "operator" . '-'
  138              | "operator" . '*'
  139              | "operator" . '/'
  140              | "operator" . '%'
  141              | "operator" . '<'
  142              | "operator" . '>'
  143              | "operator" . ".."
  144              | "operator" . "=="
  145              | "operator" . "!="
  146              | "operator" . "<="
  147              | "operator" . ">="
  148              | "operator" . '&'
  149              | "operator" . '|'
  150              | "operator" . '^'
  153              | "operator" . "++"
  154              | "operator" . "--"
  155              | "operator" . "<<"
  156              | "operator" . ">>"
  157              | "operator" . "<<="
  158              | "operator" . ">>="
  159              | "operator" . "<<<"
  160              | "operator" . ">>>"
  161              | "operator" . "<<<="
  162              | "operator" . ">>>="
  163              | "operator" . '[' ']'
  164              | "operator" . "?[" ']'
  165              | "operator" . '.'
  166              | "operator" . "?."
  167              | "operator" . '.' "name"
  168              | "operator" . '.' "name" ":="
  169              | "operator" . "?." "name"
  170              | "operator" . ":="
  171              | "operator" . "delete"
  172              | "operator" . "??"
  173              | "operator" . "is"
  174              | "operator" . "as"
  175              | "operator" . "is" "name"
  176              | "operator" . "as" "name"
  177              | "operator" . '?' "as"
  178              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 257
    "as"      shift, and go to state 258
    "delete"  shift, and go to state 259
    "+="      shift, and go to state 260
    "-="      shift, and go to state 261
    "/="      shift, and go to state 262
    "*="      shift, and go to state 263
    "%="      shift, and go to state 264
    "&="      shift, and go to state 265
    "|="      shift, and go to state 266
    "^="      shift, and go to state 267
    "<<"      shift, and go to state 268
    ">>"      shift, and go to state 269
    "++"      shift, and go to state 270
    "--"      shift, and go to state 271
    "<="      shift, and go to state 272
    "<<="     shift, and go to state 273
    ">>="     shift, and go to state 274
    ">="      shift, and go to state 275
    "=="      shift, and go to state 276
    "!="      shift, and go to state 277
    "??"      shift, and go to state 278
    "?."      shift, and go to state 279
    "?["      shift, and go to state 280
    ":="      shift, and go to state 281
    "<<<"     shift, and go to state 282
    ">>>"     shift, and go to state 283
    "<<<="    shift, and go to state 284
    ">>>="    shift, and go to state 285
    "&&"      shift, and go to state 286
    "||"      shift, and go to state 287
    "^^"      shift, and go to state 288
    "&&="     shift, and go to state 289
    "||="     shift, and go to state 290
    "^^="     shift, and go to state 291
    ".."      shift, and go to state 292
    '?'       shift, and go to state 293
    '|'       shift, and go to state 294
    '^'       shift, and go to state 295
    '&'       shift, and go to state 296
    '<'       shift, and go to state 297
    '>'       shift, and go to state 298
    '-'       shift, and go to state 299
    '+'       shift, and go to state 300
    '*'       shift, and go to state 301
    '/'       shift, and go to state 302
    '%'       shift, and go to state 303
    '~'       shift, and go to state 304
    '!'       shift, and go to state 305
    '.'       shift, and go to state 306
    '['       shift, and go to state 307


State 165

  179 function_name: "bool" .

    $default  reduce using rule 179 (function_name)


State 166

  180 function_name: "string" .

    $default  reduce using rule 180 (function_name)


State 167

  181 function_name: "int" .

    $default  reduce using rule 181 (function_name)


State 168

  182 function_name: "int2" .

    $default  reduce using rule 182 (function_name)


State 169

  183 function_name: "int3" .

    $default  reduce using rule 183 (function_name)


State 170

  184 function_name: "int4" .

    $default  reduce using rule 184 (function_name)


State 171

  185 function_name: "uint" .

    $default  reduce using rule 185 (function_name)


State 172

  186 function_name: "uint2" .

    $default  reduce using rule 186 (function_name)


State 173

  187 function_name: "uint3" .

    $default  reduce using rule 187 (function_name)


State 174

  188 function_name: "uint4" .

    $default  reduce using rule 188 (function_name)


State 175

  189 function_name: "float" .

    $default  reduce using rule 189 (function_name)


State 176

  190 function_name: "float2" .

    $default  reduce using rule 190 (function_name)


State 177

  191 function_name: "float3" .

    $default  reduce using rule 191 (function_name)


State 178

  192 function_name: "float4" .

    $default  reduce using rule 192 (function_name)


State 179

  193 function_name: "range" .

    $default  reduce using rule 193 (function_name)


State 180

  194 function_name: "urange" .

    $default  reduce using rule 194 (function_name)


State 181

  195 function_name: "range64" .

    $default  reduce using rule 195 (function_name)


State 182

  196 function_name: "urange64" .

    $default  reduce using rule 196 (function_name)


State 183

  197 function_name: "int64" .

    $default  reduce using rule 197 (function_name)


State 184

  198 function_name: "uint64" .

    $default  reduce using rule 198 (function_name)


State 185

  199 function_name: "double" .

    $default  reduce using rule 199 (function_name)


State 186

  200 function_name: "int8" .

    $default  reduce using rule 200 (function_name)


State 187

  201 function_name: "uint8" .

    $default  reduce using rule 201 (function_name)


State 188

  202 function_name: "int16" .

    $default  reduce using rule 202 (function_name)


State 189

  203 function_name: "uint16" .

    $default  reduce using rule 203 (function_name)


State 190

  151 function_name: "++" . "operator"

    "operator"  shift, and go to state 308


State 191

  152 function_name: "--" . "operator"

    "operator"  shift, and go to state 309


State 192

  119 function_name: "name" .

    $default  reduce using rule 119 (function_name)


State 193

  208 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 310

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 311


State 194

  210 function_declaration: optional_public_or_private_function $@5 function_declaration_header . expression_block

    '{'  shift, and go to state 312

    expression_block  go to state 313


State 195

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 314
    "uint"    shift, and go to state 315
    "int8"    shift, and go to state 316
    "uint8"   shift, and go to state 317
    "int16"   shift, and go to state 318
    "uint16"  shift, and go to state 319

    enum_basic_type_declaration  go to state 320


State 196

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 529 (enum_list)

    enum_list  go to state 321


State 197

  549 optional_sealed: "sealed" .

    $default  reduce using rule 549 (optional_sealed)


State 198

  550 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 322


State 199

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name . $@38 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 557 ($@38)

    $@38  go to state 323


State 200

  520 global_variable_declaration_list: global_variable_declaration_list . $@33 optional_field_annotation let_variable_declaration
  526 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 324

    $default  reduce using rule 519 ($@33)

    $@33  go to state 325


State 201

  463 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 326


State 202

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 327
    "name"  shift, and go to state 328

    let_variable_name_with_pos_list  go to state 329
    let_variable_declaration         go to state 330


State 203

   22 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 204

   23 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 205

   24 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 24 (string_constant)


State 206

   84 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 149
    "false"                    shift, and go to state 150
    "integer constant"         shift, and go to state 151
    "floating point constant"  shift, and go to state 152
    "name"                     shift, and go to state 153
    "start of the string"      shift, and go to state 114

    string_constant            go to state 154
    annotation_argument_value  go to state 331


State 207

   95 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 95 (annotation_argument)


State 208

  632 type_declaration_no_options: "array" . '<' $@43 type_declaration '>' $@44

    '<'  shift, and go to state 332


State 209

  635 type_declaration_no_options: "table" . '<' $@45 table_type_pair '>' $@46

    '<'  shift, and go to state 333


State 210

  638 type_declaration_no_options: "iterator" . '<' $@47 type_declaration '>' $@48

    '<'  shift, and go to state 334


State 211

  628 type_declaration_no_options: "smart_ptr" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 335


State 212

  564 basic_type_declaration: "bool" .

    $default  reduce using rule 564 (basic_type_declaration)


State 213

  584 basic_type_declaration: "void" .

    $default  reduce using rule 584 (basic_type_declaration)


State 214

  565 basic_type_declaration: "string" .

    $default  reduce using rule 565 (basic_type_declaration)


State 215

  598 auto_type_declaration: "auto" .
  599                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 336

    '('       [reduce using rule 598 (auto_type_declaration)]
    $default  reduce using rule 598 (auto_type_declaration)


State 216

  566 basic_type_declaration: "int" .

    $default  reduce using rule 566 (basic_type_declaration)


State 217

  570 basic_type_declaration: "int2" .

    $default  reduce using rule 570 (basic_type_declaration)


State 218

  571 basic_type_declaration: "int3" .

    $default  reduce using rule 571 (basic_type_declaration)


State 219

  572 basic_type_declaration: "int4" .

    $default  reduce using rule 572 (basic_type_declaration)


State 220

  573 basic_type_declaration: "uint" .

    $default  reduce using rule 573 (basic_type_declaration)


State 221

  590 basic_type_declaration: "bitfield" .
  605 bitfield_type_declaration: "bitfield" . '<' $@39 bitfield_bits '>' $@40

    '<'  shift, and go to state 337

    $default  reduce using rule 590 (basic_type_declaration)


State 222

  577 basic_type_declaration: "uint2" .

    $default  reduce using rule 577 (basic_type_declaration)


State 223

  578 basic_type_declaration: "uint3" .

    $default  reduce using rule 578 (basic_type_declaration)


State 224

  579 basic_type_declaration: "uint4" .

    $default  reduce using rule 579 (basic_type_declaration)


State 225

  580 basic_type_declaration: "float" .

    $default  reduce using rule 580 (basic_type_declaration)


State 226

  581 basic_type_declaration: "float2" .

    $default  reduce using rule 581 (basic_type_declaration)


State 227

  582 basic_type_declaration: "float3" .

    $default  reduce using rule 582 (basic_type_declaration)


State 228

  583 basic_type_declaration: "float4" .

    $default  reduce using rule 583 (basic_type_declaration)


State 229

  585 basic_type_declaration: "range" .

    $default  reduce using rule 585 (basic_type_declaration)


State 230

  586 basic_type_declaration: "urange" .

    $default  reduce using rule 586 (basic_type_declaration)


State 231

  587 basic_type_declaration: "range64" .

    $default  reduce using rule 587 (basic_type_declaration)


State 232

  588 basic_type_declaration: "urange64" .

    $default  reduce using rule 588 (basic_type_declaration)


State 233

  639 type_declaration_no_options: "block" .
  642                            | "block" . '<' $@49 type_declaration '>' $@50
  645                            | "block" . '<' $@51 optional_function_argument_list optional_function_type '>' $@52

    '<'  shift, and go to state 338

    $default  reduce using rule 639 (type_declaration_no_options)


State 234

  569 basic_type_declaration: "int64" .

    $default  reduce using rule 569 (basic_type_declaration)


State 235

  576 basic_type_declaration: "uint64" .

    $default  reduce using rule 576 (basic_type_declaration)


State 236

  589 basic_type_declaration: "double" .

    $default  reduce using rule 589 (basic_type_declaration)


State 237

  646 type_declaration_no_options: "function" .
  649                            | "function" . '<' $@53 type_declaration '>' $@54
  652                            | "function" . '<' $@55 optional_function_argument_list optional_function_type '>' $@56

    '<'  shift, and go to state 339

    $default  reduce using rule 646 (type_declaration_no_options)


State 238

  653 type_declaration_no_options: "lambda" .
  656                            | "lambda" . '<' $@57 type_declaration '>' $@58
  659                            | "lambda" . '<' $@59 optional_function_argument_list optional_function_type '>' $@60

    '<'  shift, and go to state 340

    $default  reduce using rule 653 (type_declaration_no_options)


State 239

  567 basic_type_declaration: "int8" .

    $default  reduce using rule 567 (basic_type_declaration)


State 240

  574 basic_type_declaration: "uint8" .

    $default  reduce using rule 574 (basic_type_declaration)


State 241

  568 basic_type_declaration: "int16" .

    $default  reduce using rule 568 (basic_type_declaration)


State 242

  575 basic_type_declaration: "uint16" .

    $default  reduce using rule 575 (basic_type_declaration)


State 243

  662 type_declaration_no_options: "tuple" . '<' $@61 tuple_type_list '>' $@62

    '<'  shift, and go to state 341


State 244

  665 type_declaration_no_options: "variant" . '<' $@63 variant_type_list '>' $@64

    '<'  shift, and go to state 342


State 245

  600 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 343


State 246

  597 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 597 (structure_type_declaration)


State 247

  608 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 608 (type_declaration_no_options)


State 248

  611 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 611 (type_declaration_no_options)


State 249

  609 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 609 (type_declaration_no_options)


State 250

  610 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 610 (type_declaration_no_options)


State 251

  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"
  666 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353

    $default  reduce using rule 666 (type_declaration)


State 252

  534 single_alias: "name" $@35 '=' type_declaration .
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354

    $default  reduce using rule 534 (single_alias)


State 253

  602 bitfield_bits: bitfield_bits ';' . "name"
  673 bitfield_alias_declaration: "bitfield" $@67 "name" '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 355
    '}'     shift, and go to state 356


State 254

  492 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 357


State 255

  493 variant_type_list: variant_type .

    $default  reduce using rule 493 (variant_type_list)


State 256

  494 variant_type_list: variant_type_list . ';' variant_type
  671 variant_alias_declaration: "variant" $@65 "name" $@66 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 358


State 257

  173 function_name: "operator" "is" .
  175              | "operator" "is" . "name"

    "name"  shift, and go to state 359

    $default  reduce using rule 173 (function_name)


State 258

  174 function_name: "operator" "as" .
  176              | "operator" "as" . "name"

    "name"  shift, and go to state 360

    $default  reduce using rule 174 (function_name)


State 259

  171 function_name: "operator" "delete" .

    $default  reduce using rule 171 (function_name)


State 260

  122 function_name: "operator" "+=" .

    $default  reduce using rule 122 (function_name)


State 261

  123 function_name: "operator" "-=" .

    $default  reduce using rule 123 (function_name)


State 262

  125 function_name: "operator" "/=" .

    $default  reduce using rule 125 (function_name)


State 263

  124 function_name: "operator" "*=" .

    $default  reduce using rule 124 (function_name)


State 264

  126 function_name: "operator" "%=" .

    $default  reduce using rule 126 (function_name)


State 265

  127 function_name: "operator" "&=" .

    $default  reduce using rule 127 (function_name)


State 266

  128 function_name: "operator" "|=" .

    $default  reduce using rule 128 (function_name)


State 267

  129 function_name: "operator" "^=" .

    $default  reduce using rule 129 (function_name)


State 268

  155 function_name: "operator" "<<" .

    $default  reduce using rule 155 (function_name)


State 269

  156 function_name: "operator" ">>" .

    $default  reduce using rule 156 (function_name)


State 270

  153 function_name: "operator" "++" .

    $default  reduce using rule 153 (function_name)


State 271

  154 function_name: "operator" "--" .

    $default  reduce using rule 154 (function_name)


State 272

  146 function_name: "operator" "<=" .

    $default  reduce using rule 146 (function_name)


State 273

  157 function_name: "operator" "<<=" .

    $default  reduce using rule 157 (function_name)


State 274

  158 function_name: "operator" ">>=" .

    $default  reduce using rule 158 (function_name)


State 275

  147 function_name: "operator" ">=" .

    $default  reduce using rule 147 (function_name)


State 276

  144 function_name: "operator" "==" .

    $default  reduce using rule 144 (function_name)


State 277

  145 function_name: "operator" "!=" .

    $default  reduce using rule 145 (function_name)


State 278

  172 function_name: "operator" "??" .

    $default  reduce using rule 172 (function_name)


State 279

  166 function_name: "operator" "?." .
  169              | "operator" "?." . "name"

    "name"  shift, and go to state 361

    $default  reduce using rule 166 (function_name)


State 280

  164 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 362


State 281

  170 function_name: "operator" ":=" .

    $default  reduce using rule 170 (function_name)


State 282

  159 function_name: "operator" "<<<" .

    $default  reduce using rule 159 (function_name)


State 283

  160 function_name: "operator" ">>>" .

    $default  reduce using rule 160 (function_name)


State 284

  161 function_name: "operator" "<<<=" .

    $default  reduce using rule 161 (function_name)


State 285

  162 function_name: "operator" ">>>=" .

    $default  reduce using rule 162 (function_name)


State 286

  133 function_name: "operator" "&&" .

    $default  reduce using rule 133 (function_name)


State 287

  134 function_name: "operator" "||" .

    $default  reduce using rule 134 (function_name)


State 288

  135 function_name: "operator" "^^" .

    $default  reduce using rule 135 (function_name)


State 289

  130 function_name: "operator" "&&=" .

    $default  reduce using rule 130 (function_name)


State 290

  131 function_name: "operator" "||=" .

    $default  reduce using rule 131 (function_name)


State 291

  132 function_name: "operator" "^^=" .

    $default  reduce using rule 132 (function_name)


State 292

  143 function_name: "operator" ".." .

    $default  reduce using rule 143 (function_name)


State 293

  177 function_name: "operator" '?' . "as"
  178              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 363


State 294

  149 function_name: "operator" '|' .

    $default  reduce using rule 149 (function_name)


State 295

  150 function_name: "operator" '^' .

    $default  reduce using rule 150 (function_name)


State 296

  148 function_name: "operator" '&' .

    $default  reduce using rule 148 (function_name)


State 297

  141 function_name: "operator" '<' .

    $default  reduce using rule 141 (function_name)


State 298

  142 function_name: "operator" '>' .

    $default  reduce using rule 142 (function_name)


State 299

  137 function_name: "operator" '-' .

    $default  reduce using rule 137 (function_name)


State 300

  136 function_name: "operator" '+' .

    $default  reduce using rule 136 (function_name)


State 301

  138 function_name: "operator" '*' .

    $default  reduce using rule 138 (function_name)


State 302

  139 function_name: "operator" '/' .

    $default  reduce using rule 139 (function_name)


State 303

  140 function_name: "operator" '%' .

    $default  reduce using rule 140 (function_name)


State 304

  121 function_name: "operator" '~' .

    $default  reduce using rule 121 (function_name)


State 305

  120 function_name: "operator" '!' .

    $default  reduce using rule 120 (function_name)


State 306

  165 function_name: "operator" '.' .
  167              | "operator" '.' . "name"
  168              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 364

    $default  reduce using rule 165 (function_name)


State 307

  163 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 365


State 308

  151 function_name: "++" "operator" .

    $default  reduce using rule 151 (function_name)


State 309

  152 function_name: "--" "operator" .

    $default  reduce using rule 152 (function_name)


State 310

  115 optional_function_argument_list: '(' . ')'
  116                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 366
    "[["  shift, and go to state 201
    ')'   shift, and go to state 367

    $default  reduce using rule 462 (optional_field_annotation)

    optional_field_annotation      go to state 368
    function_argument_declaration  go to state 369
    function_argument_list         go to state 370


State 311

  208 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 371

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 372


State 312

  211 expression_block: '{' . expressions '}'
  212                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 234 (expressions)

    expressions  go to state 373


State 313

  210 function_declaration: optional_public_or_private_function $@5 function_declaration_header expression_block .

    $default  reduce using rule 210 (function_declaration)


State 314

  591 enum_basic_type_declaration: "int" .

    $default  reduce using rule 591 (enum_basic_type_declaration)


State 315

  594 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 594 (enum_basic_type_declaration)


State 316

  592 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 592 (enum_basic_type_declaration)


State 317

  595 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 595 (enum_basic_type_declaration)


State 318

  593 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 593 (enum_basic_type_declaration)


State 319

  596 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 596 (enum_basic_type_declaration)


State 320

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 374


State 321

  530 enum_list: enum_list . ';'
  531          | enum_list . "name" ';'
  532          | enum_list . "name" '=' expr ';'
  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 375
    ';'     shift, and go to state 376
    '}'     shift, and go to state 377


State 322

  550 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 378

    $default  reduce using rule 546 (optional_structure_parent)

    optional_structure_parent  go to state 379


State 323

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 380


State 324

  526 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 526 (global_let)


State 325

  520 global_variable_declaration_list: global_variable_declaration_list $@33 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 201

    $default  reduce using rule 462 (optional_field_annotation)

    optional_field_annotation  go to state 381


State 326

   97 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  463 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 69
    ']'  shift, and go to state 382


State 327

  509 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 383


State 328

  508 let_variable_name_with_pos_list: "name" .
  510                                | "name" . "aka" "name"

    "aka"  shift, and go to state 384

    $default  reduce using rule 508 (let_variable_name_with_pos_list)


State 329

  511 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  512                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  513 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  514                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  515                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  516                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  517                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 385
    ':'  shift, and go to state 386
    '&'  shift, and go to state 387

    $default  reduce using rule 506 (optional_ref)

    optional_ref  go to state 388


State 330

  528 global_let: kwd_let optional_shared optional_public_or_private_variable $@34 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 528 (global_let)


State 331

   84 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 84 (annotation_argument_value_list)


State 332

  632 type_declaration_no_options: "array" '<' . $@43 type_declaration '>' $@44

    $default  reduce using rule 630 ($@43)

    $@43  go to state 389


State 333

  635 type_declaration_no_options: "table" '<' . $@45 table_type_pair '>' $@46

    $default  reduce using rule 633 ($@45)

    $@45  go to state 390


State 334

  638 type_declaration_no_options: "iterator" '<' . $@47 type_declaration '>' $@48

    $default  reduce using rule 636 ($@47)

    $@47  go to state 391


State 335

  628 type_declaration_no_options: "smart_ptr" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 626 ($@41)

    $@41  go to state 392


State 336

  599 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 393


State 337

  605 bitfield_type_declaration: "bitfield" '<' . $@39 bitfield_bits '>' $@40

    $default  reduce using rule 603 ($@39)

    $@39  go to state 394


State 338

  642 type_declaration_no_options: "block" '<' . $@49 type_declaration '>' $@50
  645                            | "block" '<' . $@51 optional_function_argument_list optional_function_type '>' $@52

    ':'       reduce using rule 643 ($@51)
    '>'       reduce using rule 643 ($@51)
    '('       reduce using rule 643 ($@51)
    $default  reduce using rule 640 ($@49)

    $@49  go to state 395
    $@51  go to state 396


State 339

  649 type_declaration_no_options: "function" '<' . $@53 type_declaration '>' $@54
  652                            | "function" '<' . $@55 optional_function_argument_list optional_function_type '>' $@56

    ':'       reduce using rule 650 ($@55)
    '>'       reduce using rule 650 ($@55)
    '('       reduce using rule 650 ($@55)
    $default  reduce using rule 647 ($@53)

    $@53  go to state 397
    $@55  go to state 398


State 340

  656 type_declaration_no_options: "lambda" '<' . $@57 type_declaration '>' $@58
  659                            | "lambda" '<' . $@59 optional_function_argument_list optional_function_type '>' $@60

    ':'       reduce using rule 657 ($@59)
    '>'       reduce using rule 657 ($@59)
    '('       reduce using rule 657 ($@59)
    $default  reduce using rule 654 ($@57)

    $@57  go to state 399
    $@59  go to state 400


State 341

  662 type_declaration_no_options: "tuple" '<' . $@61 tuple_type_list '>' $@62

    $default  reduce using rule 660 ($@61)

    $@61  go to state 401


State 342

  665 type_declaration_no_options: "variant" '<' . $@63 variant_type_list '>' $@64

    $default  reduce using rule 663 ($@63)

    $@63  go to state 402


State 343

  600 auto_type_declaration: "$t" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 463
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 344

  616 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 616 (type_declaration_no_options)


State 345

  621 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 621 (type_declaration_no_options)


State 346

  615 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 615 (type_declaration_no_options)


State 347

  623 type_declaration_no_options: type_declaration_no_options "==" . "const"
  624                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 471
    '&'      shift, and go to state 472


State 348

  629 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 629 (type_declaration_no_options)


State 349

  625 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 625 (type_declaration_no_options)


State 350

  618 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 618 (type_declaration_no_options)


State 351

  614 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  617                            | type_declaration_no_options '-' . "const"
  619                            | type_declaration_no_options '-' . '&'
  622                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 473
    '&'      shift, and go to state 474
    '['      shift, and go to state 475
    '#'      shift, and go to state 476


State 352

  612 type_declaration_no_options: type_declaration_no_options '[' . expr ']'
  613                            | type_declaration_no_options '[' . ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    ']'                               shift, and go to state 477
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 478
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 353

  620 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 620 (type_declaration_no_options)


State 354

  667 type_declaration: type_declaration '|' . type_declaration_no_options
  668                 | type_declaration '|' . '#'

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53
    '#'          shift, and go to state 479

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 480


State 355

  602 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 602 (bitfield_bits)


State 356

  673 bitfield_alias_declaration: "bitfield" $@67 "name" '{' bitfield_bits ';' '}' .

    $default  reduce using rule 673 (bitfield_alias_declaration)


State 357

  492 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 481


State 358

  494 variant_type_list: variant_type_list ';' . variant_type
  671 variant_alias_declaration: "variant" $@65 "name" $@66 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 254
    '}'     shift, and go to state 482

    variant_type  go to state 483


State 359

  175 function_name: "operator" "is" "name" .

    $default  reduce using rule 175 (function_name)


State 360

  176 function_name: "operator" "as" "name" .

    $default  reduce using rule 176 (function_name)


State 361

  169 function_name: "operator" "?." "name" .

    $default  reduce using rule 169 (function_name)


State 362

  164 function_name: "operator" "?[" ']' .

    $default  reduce using rule 164 (function_name)


State 363

  177 function_name: "operator" '?' "as" .
  178              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 484

    $default  reduce using rule 177 (function_name)


State 364

  167 function_name: "operator" '.' "name" .
  168              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 485

    $default  reduce using rule 167 (function_name)


State 365

  163 function_name: "operator" '[' ']' .

    $default  reduce using rule 163 (function_name)


State 366

  485 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 486


State 367

  115 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 115 (optional_function_argument_list)


State 368

  483 function_argument_declaration: optional_field_annotation . variable_declaration
  484                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 487
    "$i"    shift, and go to state 488
    "name"  shift, and go to state 489

    variable_declaration         go to state 490
    variable_name_with_pos_list  go to state 491


State 369

  486 function_argument_list: function_argument_declaration .

    $default  reduce using rule 486 (function_argument_list)


State 370

  116 optional_function_argument_list: '(' function_argument_list . ')'
  487 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 492
    ';'  shift, and go to state 493


State 371

  118 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 494


State 372

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 208 (function_declaration_header)


State 373

  211 expression_block: '{' expressions . '}'
  212                 | '{' expressions . '}' "finally" '{' expressions '}'
  235 expressions: expressions . expression_any
  236            | expressions . error

    error                             shift, and go to state 495
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 496
    "if"                              shift, and go to state 497
    "static_if"                       shift, and go to state 498
    "for"                             shift, and go to state 499
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "return"                          shift, and go to state 500
    "null"                            shift, and go to state 408
    "break"                           shift, and go to state 501
    "try"                             shift, and go to state 502
    "delete"                          shift, and go to state 503
    "deref"                           shift, and go to state 409
    "with"                            shift, and go to state 504
    "assume"                          shift, and go to state 505
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 412
    "continue"                        shift, and go to state 506
    "pass"                            shift, and go to state 507
    "reinterpret"                     shift, and go to state 413
    "label"                           shift, and go to state 508
    "goto"                            shift, and go to state 509
    "unsafe"                          shift, and go to state 510
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "yield"                           shift, and go to state 511
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 515
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    ';'                               shift, and go to state 516
    '{'                               shift, and go to state 312
    '}'                               shift, and go to state 517

    string_builder             go to state 447
    expr_reader                go to state 448
    expression_label           go to state 518
    expression_goto            go to state 519
    if_or_static_if            go to state 520
    expression_if_one_liner    go to state 521
    expression_if_then_else    go to state 522
    expression_for_loop        go to state 523
    expression_unsafe          go to state 524
    expression_while_loop      go to state 525
    expression_with            go to state 526
    expression_with_alias      go to state 527
    expression_block           go to state 449
    expression_any             go to state 528
    expr_keyword               go to state 529
    expression_keyword         go to state 450
    expr_pipe                  go to state 530
    name_in_namespace          go to state 451
    expression_delete          go to state 531
    expr_new                   go to state 452
    expression_break           go to state 532
    expression_continue        go to state 533
    expression_return_no_pipe  go to state 534
    expression_return          go to state 535
    expression_yield_no_pipe   go to state 536
    expression_yield           go to state 537
    expression_try_catch       go to state 538
    kwd_let                    go to state 539
    expression_let             go to state 540
    expr_cast                  go to state 453
    expr_type_decl             go to state 454
    expr_type_info             go to state 455
    block_or_lambda            go to state 456
    expr_block                 go to state 457
    expr_numeric_const         go to state 458
    expr_assign                go to state 541
    expr_assign_pipe           go to state 542
    expr_named_call            go to state 459
    expr_method_call           go to state 460
    func_addr_expr             go to state 461
    expr_field                 go to state 462
    expr                       go to state 543
    expr_mtag                  go to state 464
    basic_type_declaration     go to state 465
    make_decl                  go to state 466
    make_struct_decl           go to state 467
    make_dim_decl              go to state 468
    make_table_decl            go to state 469
    array_comprehension        go to state 470


State 374

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 529 (enum_list)

    enum_list  go to state 544


State 375

  531 enum_list: enum_list "name" . ';'
  532          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 545
    ';'  shift, and go to state 546


State 376

  530 enum_list: enum_list ';' .

    $default  reduce using rule 530 (enum_list)


State 377

  544 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 544 (enum_declaration)


State 378

  547 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 52
    "name"  shift, and go to state 53

    name_in_namespace  go to state 547


State 379

  550 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 550 (structure_name)


State 380

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 475 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 548


State 381

  520 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 327
    "name"  shift, and go to state 328

    let_variable_name_with_pos_list  go to state 329
    let_variable_declaration         go to state 549


State 382

  463 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 550


State 383

  509 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 551
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 384

  510 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 552


State 385

  511 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  512                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 553


State 386

  513 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  514                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'
  515                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 554


State 387

  507 optional_ref: '&' .

    $default  reduce using rule 507 (optional_ref)


State 388

  516 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  517                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 555
    ":="  shift, and go to state 556
    '='   shift, and go to state 557

    copy_or_move_or_clone  go to state 558


State 389

  632 type_declaration_no_options: "array" '<' $@43 . type_declaration '>' $@44

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 559


State 390

  635 type_declaration_no_options: "table" '<' $@45 . table_type_pair '>' $@46

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    table_type_pair              go to state 560
    type_declaration_no_options  go to state 251
    type_declaration             go to state 561


State 391

  638 type_declaration_no_options: "iterator" '<' $@47 . type_declaration '>' $@48

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 562


State 392

  628 type_declaration_no_options: "smart_ptr" '<' $@41 . type_declaration '>' $@42

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 563


State 393

  599 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 564


State 394

  605 bitfield_type_declaration: "bitfield" '<' $@39 . bitfield_bits '>' $@40

    "name"  shift, and go to state 160

    bitfield_bits  go to state 565


State 395

  642 type_declaration_no_options: "block" '<' $@49 . type_declaration '>' $@50

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 566


State 396

  645 type_declaration_no_options: "block" '<' $@51 . optional_function_argument_list optional_function_type '>' $@52

    '('  shift, and go to state 310

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 567


State 397

  649 type_declaration_no_options: "function" '<' $@53 . type_declaration '>' $@54

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 568


State 398

  652 type_declaration_no_options: "function" '<' $@55 . optional_function_argument_list optional_function_type '>' $@56

    '('  shift, and go to state 310

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 569


State 399

  656 type_declaration_no_options: "lambda" '<' $@57 . type_declaration '>' $@58

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 570


State 400

  659 type_declaration_no_options: "lambda" '<' $@59 . optional_function_argument_list optional_function_type '>' $@60

    '('  shift, and go to state 310

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 571


State 401

  662 type_declaration_no_options: "tuple" '<' $@61 . tuple_type_list '>' $@62

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 572

    name_in_namespace            go to state 246
    tuple_type                   go to state 573
    tuple_type_list              go to state 574
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 575


State 402

  665 type_declaration_no_options: "variant" '<' $@63 . variant_type_list '>' $@64

    "name"  shift, and go to state 254

    variant_type       go to state 255
    variant_type_list  go to state 576


State 403

  366 expr: "true" .

    $default  reduce using rule 366 (expr)


State 404

  367 expr: "false" .

    $default  reduce using rule 367 (expr)


State 405

  254 expr_new: "new" . new_type_declaration
  255         | "new" . new_type_declaration '(' ')'
  256         | "new" . new_type_declaration '(' expr_list ')'
  257         | "new" . make_decl

    "::"    shift, and go to state 52
    "[["    shift, and go to state 426
    "[{"    shift, and go to state 427
    "{{"    shift, and go to state 428
    "name"  shift, and go to state 53
    '<'     shift, and go to state 577

    name_in_namespace           go to state 246
    new_type_declaration        go to state 578
    structure_type_declaration  go to state 579
    make_decl                   go to state 580
    make_struct_decl            go to state 467
    make_dim_decl               go to state 468
    make_table_decl             go to state 469
    array_comprehension         go to state 470


State 406

  289 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  290               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  291               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 581


State 407

  288 expr_type_decl: "type" . '<' $@16 type_declaration '>' $@17

    '<'  shift, and go to state 582


State 408

  360 expr: "null" .

    $default  reduce using rule 360 (expr)


State 409

  413 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 583


State 410

  279 expr_cast: "cast" . '<' $@10 type_declaration_no_options '>' $@11 expr

    '<'  shift, and go to state 584


State 411

  282 expr_cast: "upcast" . '<' $@12 type_declaration_no_options '>' $@13 expr

    '<'  shift, and go to state 585


State 412

  414 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 586


State 413

  285 expr_cast: "reinterpret" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 587


State 414

  444 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 588


State 415

  590 basic_type_declaration: "bitfield" .

    $default  reduce using rule 590 (basic_type_declaration)


State 416

  415 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  416     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 589


State 417

  396 expr: "++" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 590
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 418

  397 expr: "--" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 591
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 419

  446 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 592


State 420

  447 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 593


State 421

  448 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 594


State 422

  449 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 595


State 423

  450 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 596


State 424

  452 expr_mtag: "$c" . '(' expr ')' '(' ')'
  453          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 597


State 425

  451 expr_mtag: "..." .

    $default  reduce using rule 451 (expr_mtag)


State 426

  702 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  703                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  704                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  705                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  715 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  722 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 598
    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 599


State 427

  706 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  707                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  716 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  723 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 600
    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 601


State 428

  719 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 602
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_map_tuple          go to state 603
    make_dim_decl           go to state 468
    make_table              go to state 604
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 429

  310 expr_numeric_const: "integer constant" .

    $default  reduce using rule 310 (expr_numeric_const)


State 430

  312 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 431

  311 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 311 (expr_numeric_const)


State 432

  313 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 433

  314 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 314 (expr_numeric_const)


State 434

  315 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 315 (expr_numeric_const)


State 435

  316 expr_numeric_const: "double constant" .

    $default  reduce using rule 316 (expr_numeric_const)


State 436

  240 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    '<'  shift, and go to state 605


State 437

   28 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 25 (string_builder_body)

    string_builder_body  go to state 606


State 438

  373 expr: '-' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 607
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 439

  372 expr: '+' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 608
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 440

  412 expr: '*' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 609
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 441

   32 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 52
    "name"  shift, and go to state 53

    name_in_namespace  go to state 610


State 442

  371 expr: '~' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 611
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 443

  370 expr: '!' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 612
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 444

  400 expr: '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 613
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 445

  297 block_or_lambda: '$' .

    $default  reduce using rule 297 (block_or_lambda)


State 446

  298 block_or_lambda: '@' .
  299                | '@' . '@'
  348 func_addr_expr: '@' . '@' func_addr_name
  351               | '@' . '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  354               | '@' . '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  461 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 614

    $default  reduce using rule 298 (block_or_lambda)


State 447

  364 expr: string_builder .

    $default  reduce using rule 364 (expr)


State 448

  363 expr: expr_reader .

    $default  reduce using rule 363 (expr)


State 449

  308 expr_block: expression_block .

    $default  reduce using rule 308 (expr_block)


State 450

  445 expr: expression_keyword .

    $default  reduce using rule 445 (expr)


State 451

  342 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  343                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  361 expr: name_in_namespace .
  408     | name_in_namespace . '(' ')'
  409     | name_in_namespace . '(' expr_list ')'
  443     | name_in_namespace . "name"

    "name"  shift, and go to state 615
    '('     shift, and go to state 616

    "name"    [reduce using rule 361 (expr)]
    '('       [reduce using rule 361 (expr)]
    $default  reduce using rule 361 (expr)


State 452

  437 expr: expr_new .

    $default  reduce using rule 437 (expr)


State 453

  436 expr: expr_cast .

    $default  reduce using rule 436 (expr)


State 454

  435 expr: expr_type_decl .

    $default  reduce using rule 435 (expr)


State 455

  434 expr: expr_type_info .

    $default  reduce using rule 434 (expr)


State 456

  309 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 12

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 617


State 457

  440 expr: expr_block .

    $default  reduce using rule 440 (expr)


State 458

  362 expr: expr_numeric_const .

    $default  reduce using rule 362 (expr)


State 459

  439 expr: expr_named_call .

    $default  reduce using rule 439 (expr)


State 460

  438 expr: expr_method_call .

    $default  reduce using rule 438 (expr)


State 461

  407 expr: func_addr_expr .

    $default  reduce using rule 407 (expr)


State 462

  368 expr: expr_field .

    $default  reduce using rule 368 (expr)


State 463

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  600 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 653


State 464

  369 expr: expr_mtag .

    $default  reduce using rule 369 (expr)


State 465

  410 expr: basic_type_declaration . '(' ')'
  411     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 654


State 466

  365 expr: make_decl .

    $default  reduce using rule 365 (expr)


State 467

  674 make_decl: make_struct_decl .

    $default  reduce using rule 674 (make_decl)


State 468

  675 make_decl: make_dim_decl .

    $default  reduce using rule 675 (make_decl)


State 469

  676 make_decl: make_table_decl .

    $default  reduce using rule 676 (make_decl)


State 470

  677 make_decl: array_comprehension .

    $default  reduce using rule 677 (make_decl)


State 471

  623 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 623 (type_declaration_no_options)


State 472

  624 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 624 (type_declaration_no_options)


State 473

  617 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 617 (type_declaration_no_options)


State 474

  619 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 619 (type_declaration_no_options)


State 475

  614 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 655


State 476

  622 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 622 (type_declaration_no_options)


State 477

  613 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 613 (type_declaration_no_options)


State 478

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  612 type_declaration_no_options: type_declaration_no_options '[' expr . ']'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ']'    shift, and go to state 656


State 479

  668 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 668 (type_declaration)


State 480

  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"
  667 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353

    $default  reduce using rule 667 (type_declaration)


State 481

  492 variant_type: "name" ':' type_declaration .
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354

    $default  reduce using rule 492 (variant_type)


State 482

  671 variant_alias_declaration: "variant" $@65 "name" $@66 '{' variant_type_list ';' '}' .

    $default  reduce using rule 671 (variant_alias_declaration)


State 483

  494 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 494 (variant_type_list)


State 484

  178 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 178 (function_name)


State 485

  168 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 168 (function_name)


State 486

  485 function_argument_declaration: "$a" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 657
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 487

  484 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "$i"    shift, and go to state 488
    "name"  shift, and go to state 489

    variable_declaration         go to state 658
    variable_name_with_pos_list  go to state 491


State 488

  560 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 659


State 489

  559 variable_name_with_pos_list: "name" .
  561                            | "name" . "aka" "name"

    "aka"  shift, and go to state 660

    $default  reduce using rule 559 (variable_name_with_pos_list)


State 490

  483 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 483 (function_argument_declaration)


State 491

  497 variable_declaration: variable_name_with_pos_list .
  498                     | variable_name_with_pos_list . '&'
  499                     | variable_name_with_pos_list . ':' type_declaration
  500                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  501                     | variable_name_with_pos_list . copy_or_move expr
  502                     | variable_name_with_pos_list . copy_or_move expr_pipe
  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 661
    ','   shift, and go to state 662
    '='   shift, and go to state 663
    ':'   shift, and go to state 664
    '&'   shift, and go to state 665

    $default  reduce using rule 497 (variable_declaration)

    copy_or_move  go to state 666


State 492

  116 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 493

  487 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 366
    "[["  shift, and go to state 201

    $default  reduce using rule 462 (optional_field_annotation)

    optional_field_annotation      go to state 368
    function_argument_declaration  go to state 667


State 494

  118 optional_function_type: ':' type_declaration .
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354

    $default  reduce using rule 118 (optional_function_type)


State 495

  236 expressions: expressions error .

    $default  reduce using rule 236 (expressions)


State 496

   73 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 668
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 497

   58 if_or_static_if: "if" .

    $default  reduce using rule 58 (if_or_static_if)


State 498

   59 if_or_static_if: "static_if" .

    $default  reduce using rule 59 (if_or_static_if)


State 499

   71 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "$i"    shift, and go to state 488
    "name"  shift, and go to state 489

    variable_name_with_pos_list  go to state 669


State 500

  260 expression_return_no_pipe: "return" .
  261                          | "return" . expr
  262                          | "return" . "<-" expr
  264 expression_return: "return" . expr_pipe
  265                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "<-"                              shift, and go to state 670
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    $default  reduce using rule 260 (expression_return_no_pipe)

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    expr_pipe               go to state 671
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_assign             go to state 672
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 673
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 501

  258 expression_break: "break" .

    $default  reduce using rule 258 (expression_break)


State 502

  271 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 312

    expression_block  go to state 674


State 503

  248 expression_delete: "delete" . expr
  249                  | "delete" . "explicit" expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "explicit"                        shift, and go to state 675
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 676
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 504

   74 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 677
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 505

   76 expression_with_alias: "assume" . "name" '=' $@4 expr

    "name"  shift, and go to state 678


State 506

  259 expression_continue: "continue" .

    $default  reduce using rule 259 (expression_continue)


State 507

  233 expression_any: "pass" . ';'

    ';'  shift, and go to state 679


State 508

   50 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 680


State 509

   51 expression_goto: "goto" . "label" "integer constant"
   52                | "goto" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "label"                           shift, and go to state 681
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 682
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 510

   72 expression_unsafe: "unsafe" . expression_block
  444 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 588
    '{'  shift, and go to state 312

    expression_block  go to state 683


State 511

  266 expression_yield_no_pipe: "yield" . expr
  267                         | "yield" . "<-" expr
  269 expression_yield: "yield" . expr_pipe
  270                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "<-"                              shift, and go to state 684
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    expr_pipe               go to state 685
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_assign             go to state 672
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 686
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 512

  244 expr_pipe: "$ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 688


State 513

  242 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 689


State 514

  243 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 690


State 515

  237 expr_keyword: "keyword" . expr expression_block
  240 expression_keyword: "keyword" . '<' $@6 type_declaration_no_options '>' $@7 expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '<'                               shift, and go to state 605
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 691
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 516

  213 expression_any: ';' .

    $default  reduce using rule 213 (expression_any)


State 517

  211 expression_block: '{' expressions '}' .
  212                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 692

    $default  reduce using rule 211 (expression_block)


State 518

  231 expression_any: expression_label . ';'

    ';'  shift, and go to state 693


State 519

  232 expression_any: expression_goto . ';'

    ';'  shift, and go to state 694


State 520

   68 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 695
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 521

   70 expression_if_then_else: expression_if_one_liner . "if" $@3 expr expression_else_one_liner ';'

    "if"  shift, and go to state 696


State 522

  229 expression_any: expression_if_then_else .

    $default  reduce using rule 229 (expression_any)


State 523

  224 expression_any: expression_for_loop .

    $default  reduce using rule 224 (expression_any)


State 524

  221 expression_any: expression_unsafe .

    $default  reduce using rule 221 (expression_any)


State 525

  220 expression_any: expression_while_loop .

    $default  reduce using rule 220 (expression_any)


State 526

  222 expression_any: expression_with .

    $default  reduce using rule 222 (expression_any)


State 527

  223 expression_any: expression_with_alias .

    $default  reduce using rule 223 (expression_any)


State 528

  235 expressions: expressions expression_any .

    $default  reduce using rule 235 (expressions)


State 529

  215 expression_any: expr_keyword .

    $default  reduce using rule 215 (expression_any)


State 530

  214 expression_any: expr_pipe .

    $default  reduce using rule 214 (expression_any)


State 531

  218 expression_any: expression_delete . ';'

    ';'  shift, and go to state 697


State 532

   66 expression_if_one_liner: expression_break .
  225 expression_any: expression_break . ';'

    ';'  shift, and go to state 698

    $default  reduce using rule 66 (expression_if_one_liner)


State 533

   67 expression_if_one_liner: expression_continue .
  226 expression_any: expression_continue . ';'

    ';'  shift, and go to state 699

    $default  reduce using rule 67 (expression_if_one_liner)


State 534

   64 expression_if_one_liner: expression_return_no_pipe .
  263 expression_return: expression_return_no_pipe . ';'

    ';'  shift, and go to state 700

    $default  reduce using rule 64 (expression_if_one_liner)


State 535

  227 expression_any: expression_return .

    $default  reduce using rule 227 (expression_any)


State 536

   65 expression_if_one_liner: expression_yield_no_pipe .
  268 expression_yield: expression_yield_no_pipe . ';'

    ';'  shift, and go to state 701

    $default  reduce using rule 65 (expression_if_one_liner)


State 537

  228 expression_any: expression_yield .

    $default  reduce using rule 228 (expression_any)


State 538

  230 expression_any: expression_try_catch .

    $default  reduce using rule 230 (expression_any)


State 539

  276 expression_let: kwd_let . optional_in_scope let_variable_declaration

    "inscope"  shift, and go to state 702

    $default  reduce using rule 275 (optional_in_scope)

    optional_in_scope  go to state 703


State 540

  219 expression_any: expression_let .

    $default  reduce using rule 219 (expression_any)


State 541

  217 expression_any: expr_assign . ';'
  241 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 704
    ';'    shift, and go to state 705


State 542

  216 expression_any: expr_assign_pipe .

    $default  reduce using rule 216 (expression_any)


State 543

   63 expression_if_one_liner: expr .
  317 expr_assign: expr .
  318            | expr . '=' expr
  319            | expr . "<-" expr
  320            | expr . ":=" expr
  321            | expr . "&=" expr
  322            | expr . "|=" expr
  323            | expr . "^=" expr
  324            | expr . "&&=" expr
  325            | expr . "||=" expr
  326            | expr . "^^=" expr
  327            | expr . "+=" expr
  328            | expr . "-=" expr
  329            | expr . "*=" expr
  330            | expr . "/=" expr
  331            | expr . "%=" expr
  332            | expr . "<<=" expr
  333            | expr . ">>=" expr
  334            | expr . "<<<=" expr
  335            | expr . ">>>=" expr
  336 expr_assign_pipe: expr . '=' "@ <|" expr_block
  337                 | expr . '=' "@@ <|" expr_block
  338                 | expr . '=' "$ <|" expr_block
  339                 | expr . "<-" "@ <|" expr_block
  340                 | expr . "<-" "@@ <|" expr_block
  341                 | expr . "<-" "$ <|" expr_block
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "+="    shift, and go to state 706
    "-="    shift, and go to state 707
    "/="    shift, and go to state 708
    "*="    shift, and go to state 709
    "%="    shift, and go to state 710
    "&="    shift, and go to state 711
    "|="    shift, and go to state 712
    "^="    shift, and go to state 713
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "<-"    shift, and go to state 716
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    ":="    shift, and go to state 717
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "<<<="  shift, and go to state 718
    ">>>="  shift, and go to state 719
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    "&&="   shift, and go to state 720
    "||="   shift, and go to state 721
    "^^="   shift, and go to state 722
    ".."    shift, and go to state 639
    '='     shift, and go to state 723
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652

    "if"      reduce using rule 63 (expression_if_one_liner)
    $default  reduce using rule 317 (expr_assign)


State 544

  530 enum_list: enum_list . ';'
  531          | enum_list . "name" ';'
  532          | enum_list . "name" '=' expr ';'
  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 375
    ';'     shift, and go to state 376
    '}'     shift, and go to state 724


State 545

  532 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 725
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 546

  531 enum_list: enum_list "name" ';' .

    $default  reduce using rule 531 (enum_list)


State 547

  547 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 547 (optional_structure_parent)


State 548

  477 struct_variable_declaration_list: struct_variable_declaration_list . $@30 structure_variable_declaration ';'
  479                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  481                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block
  482                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 726
    '}'  shift, and go to state 727

    "def"     reduce using rule 112 (optional_annotation_list)
    $default  reduce using rule 476 ($@30)

    optional_annotation_list  go to state 728
    $@30                      go to state 729


State 549

  520 global_variable_declaration_list: global_variable_declaration_list $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 520 (global_variable_declaration_list)


State 550

  463 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 463 (optional_field_annotation)


State 551

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  509 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 730


State 552

  510 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 510 (let_variable_name_with_pos_list)


State 553

  511 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  512                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 731

    $default  reduce using rule 511 (let_variable_name_with_pos_list)


State 554

  513 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  514                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'
  515                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "<-"        shift, and go to state 555
    "??"        shift, and go to state 348
    ":="        shift, and go to state 556
    '='         shift, and go to state 557
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    ';'         shift, and go to state 732
    '#'         shift, and go to state 353

    copy_or_move_or_clone  go to state 733


State 555

  504 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 504 (copy_or_move_or_clone)


State 556

  505 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 505 (copy_or_move_or_clone)


State 557

  503 copy_or_move_or_clone: '=' .

    $default  reduce using rule 503 (copy_or_move_or_clone)


State 558

  516 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  517                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    expr_pipe               go to state 734
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_assign             go to state 672
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 735
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 559

  632 type_declaration_no_options: "array" '<' $@43 type_declaration . '>' $@44
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 736


State 560

  635 type_declaration_no_options: "table" '<' $@45 table_type_pair . '>' $@46

    '>'  shift, and go to state 737


State 561

  606 table_type_pair: type_declaration .
  607                | type_declaration . ';' type_declaration
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    ';'  shift, and go to state 738

    $default  reduce using rule 606 (table_type_pair)


State 562

  638 type_declaration_no_options: "iterator" '<' $@47 type_declaration . '>' $@48
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 739


State 563

  628 type_declaration_no_options: "smart_ptr" '<' $@41 type_declaration . '>' $@42
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 740


State 564

  599 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 599 (auto_type_declaration)


State 565

  602 bitfield_bits: bitfield_bits . ';' "name"
  605 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits . '>' $@40

    '>'  shift, and go to state 741
    ';'  shift, and go to state 742


State 566

  642 type_declaration_no_options: "block" '<' $@49 type_declaration . '>' $@50
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 743


State 567

  645 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list . optional_function_type '>' $@52

    ':'  shift, and go to state 371

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 744


State 568

  649 type_declaration_no_options: "function" '<' $@53 type_declaration . '>' $@54
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 745


State 569

  652 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list . optional_function_type '>' $@56

    ':'  shift, and go to state 371

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 746


State 570

  656 type_declaration_no_options: "lambda" '<' $@57 type_declaration . '>' $@58
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 747


State 571

  659 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list . optional_function_type '>' $@60

    ':'  shift, and go to state 371

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 748


State 572

  245 name_in_namespace: "name" .
  246                  | "name" . "::" "name"
  489 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 87
    ':'   shift, and go to state 749

    $default  reduce using rule 245 (name_in_namespace)


State 573

  490 tuple_type_list: tuple_type .

    $default  reduce using rule 490 (tuple_type_list)


State 574

  491 tuple_type_list: tuple_type_list . ';' tuple_type
  662 type_declaration_no_options: "tuple" '<' $@61 tuple_type_list . '>' $@62

    '>'  shift, and go to state 750
    ';'  shift, and go to state 751


State 575

  488 tuple_type: type_declaration .
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354

    $default  reduce using rule 488 (tuple_type)


State 576

  494 variant_type_list: variant_type_list . ';' variant_type
  665 type_declaration_no_options: "variant" '<' $@63 variant_type_list . '>' $@64

    '>'  shift, and go to state 752
    ';'  shift, and go to state 753


State 577

  252 new_type_declaration: '<' . $@8 type_declaration '>' $@9

    $default  reduce using rule 250 ($@8)

    $@8  go to state 754


State 578

  254 expr_new: "new" new_type_declaration .
  255         | "new" new_type_declaration . '(' ')'
  256         | "new" new_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 755

    '('       [reduce using rule 254 (expr_new)]
    $default  reduce using rule 254 (expr_new)


State 579

  253 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 253 (new_type_declaration)


State 580

  257 expr_new: "new" make_decl .

    $default  reduce using rule 257 (expr_new)


State 581

  289 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  290               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  291               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 52
    "name"  shift, and go to state 53

    name_in_namespace  go to state 756


State 582

  288 expr_type_decl: "type" '<' . $@16 type_declaration '>' $@17

    $default  reduce using rule 286 ($@16)

    $@16  go to state 757


State 583

  413 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 758
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 584

  279 expr_cast: "cast" '<' . $@10 type_declaration_no_options '>' $@11 expr

    $default  reduce using rule 277 ($@10)

    $@10  go to state 759


State 585

  282 expr_cast: "upcast" '<' . $@12 type_declaration_no_options '>' $@13 expr

    $default  reduce using rule 280 ($@12)

    $@12  go to state 760


State 586

  414 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 761
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 587

  285 expr_cast: "reinterpret" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 283 ($@14)

    $@14  go to state 762


State 588

  444 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 763
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 589

  415 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  416     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 764


State 590

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  396     | "++" expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 396 (expr)


State 591

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  397     | "--" expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 397 (expr)


State 592

  446 expr_mtag: "$$" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 765
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 593

  447 expr_mtag: "$i" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 766
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 594

  448 expr_mtag: "$v" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 767
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 595

  449 expr_mtag: "$b" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 768
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 596

  450 expr_mtag: "$a" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 769
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 597

  452 expr_mtag: "$c" '(' . expr ')' '(' ')'
  453          | "$c" '(' . expr ')' '(' expr_list ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 770
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 598

  722 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 488
    "name"  shift, and go to state 489

    variable_name_with_pos_list  go to state 771


State 599

  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"
  702 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  703                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  704                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  705                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  715 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "const"                           shift, and go to state 344
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "where"                           shift, and go to state 772
    "reinterpret"                     shift, and go to state 413
    "implicit"                        shift, and go to state 345
    "explicit"                        shift, and go to state 346
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "=="                              shift, and go to state 347
    "??"                              shift, and go to state 348
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "$f"                              shift, and go to state 773
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 774
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '?'                               shift, and go to state 349
    '&'                               shift, and go to state 350
    '-'                               shift, and go to state 775
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 352
    '('                               shift, and go to state 776
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312
    '#'                               shift, and go to state 353

    $default  reduce using rule 688 (optional_block)

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 777
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_fields      go to state 778
    make_struct_dim         go to state 779
    optional_block          go to state 780
    make_struct_decl        go to state 467
    make_tuple              go to state 781
    make_dim                go to state 782
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 600

  723 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "$i"    shift, and go to state 488
    "name"  shift, and go to state 489

    variable_name_with_pos_list  go to state 783


State 601

  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"
  706 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  707                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  716 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "const"                           shift, and go to state 344
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "implicit"                        shift, and go to state 345
    "explicit"                        shift, and go to state 346
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "=="                              shift, and go to state 347
    "??"                              shift, and go to state 348
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "$f"                              shift, and go to state 773
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 774
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '?'                               shift, and go to state 349
    '&'                               shift, and go to state 350
    '-'                               shift, and go to state 775
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 352
    '('                               shift, and go to state 784
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312
    '#'                               shift, and go to state 353

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 777
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_fields      go to state 778
    make_struct_dim         go to state 785
    make_struct_decl        go to state 467
    make_tuple              go to state 781
    make_dim                go to state 786
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 602

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  711 make_map_tuple: expr . "=>" expr
  712               | expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "=>"   shift, and go to state 787
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 712 (make_map_tuple)


State 603

  717 make_table: make_map_tuple .

    $default  reduce using rule 717 (make_table)


State 604

  718 make_table: make_table . ';' make_map_tuple
  719 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    ";}}"  shift, and go to state 788
    ';'    shift, and go to state 789
    '}'    shift, and go to state 790

    optional_trailing_semicolon_cur_cur  go to state 791


State 605

  240 expression_keyword: "keyword" '<' . $@6 type_declaration_no_options '>' $@7 expr

    $default  reduce using rule 238 ($@6)

    $@6  go to state 792


State 606

   26 string_builder_body: string_builder_body . character_sequence
   27                    | string_builder_body . "{" expr "}"
   28 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 146
    STRING_CHARACTER_ESC  shift, and go to state 147
    "end of the string"   shift, and go to state 793
    "{"                   shift, and go to state 794

    character_sequence  go to state 795


State 607

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  373 expr: '-' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 373 (expr)


State 608

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  372 expr: '+' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 372 (expr)


State 609

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  412     | '*' expr .
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 412 (expr)


State 610

   32 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 31 ($@1)

    $@1  go to state 796


State 611

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  371 expr: '~' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 371 (expr)


State 612

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  370 expr: '!' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 370 (expr)


State 613

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  400     | '(' expr . ')'
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 797


State 614

  299 block_or_lambda: '@' '@' .
  348 func_addr_expr: '@' '@' . func_addr_name
  351               | '@' '@' . '<' $@18 type_declaration_no_options '>' $@19 func_addr_name
  354               | '@' '@' . '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name
  461 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 52
    "$i"    shift, and go to state 798
    "$c"    shift, and go to state 799
    "name"  shift, and go to state 53
    '<'     shift, and go to state 800

    $default  reduce using rule 299 (block_or_lambda)

    name_in_namespace  go to state 801
    func_addr_name     go to state 802


State 615

  443 expr: name_in_namespace "name" .

    $default  reduce using rule 443 (expr)


State 616

  342 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  343                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  408 expr: name_in_namespace '(' . ')'
  409     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 803
    '('                               shift, and go to state 444
    ')'                               shift, and go to state 804
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 805
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 806
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 617

  309 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 807

    $default  reduce using rule 306 (optional_capture_list)

    optional_capture_list  go to state 808


State 618

  421 expr: expr "is" . "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr "is" . basic_type_declaration
  423     | expr "is" . "name"
  460 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 809
    "bool"      shift, and go to state 212
    "void"      shift, and go to state 213
    "string"    shift, and go to state 214
    "int"       shift, and go to state 216
    "int2"      shift, and go to state 217
    "int3"      shift, and go to state 218
    "int4"      shift, and go to state 219
    "uint"      shift, and go to state 220
    "bitfield"  shift, and go to state 415
    "uint2"     shift, and go to state 222
    "uint3"     shift, and go to state 223
    "uint4"     shift, and go to state 224
    "float"     shift, and go to state 225
    "float2"    shift, and go to state 226
    "float3"    shift, and go to state 227
    "float4"    shift, and go to state 228
    "range"     shift, and go to state 229
    "urange"    shift, and go to state 230
    "range64"   shift, and go to state 231
    "urange64"  shift, and go to state 232
    "int64"     shift, and go to state 234
    "uint64"    shift, and go to state 235
    "double"    shift, and go to state 236
    "int8"      shift, and go to state 239
    "uint8"     shift, and go to state 240
    "int16"     shift, and go to state 241
    "uint16"    shift, and go to state 242
    "$f"        shift, and go to state 810
    "name"      shift, and go to state 811

    basic_type_declaration  go to state 812


State 619

  424 expr: expr "as" . "name"
  427     | expr "as" . "type" '<' $@26 type_declaration '>' $@27
  428     | expr "as" . basic_type_declaration
  458 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 813
    "bool"      shift, and go to state 212
    "void"      shift, and go to state 213
    "string"    shift, and go to state 214
    "int"       shift, and go to state 216
    "int2"      shift, and go to state 217
    "int3"      shift, and go to state 218
    "int4"      shift, and go to state 219
    "uint"      shift, and go to state 220
    "bitfield"  shift, and go to state 415
    "uint2"     shift, and go to state 222
    "uint3"     shift, and go to state 223
    "uint4"     shift, and go to state 224
    "float"     shift, and go to state 225
    "float2"    shift, and go to state 226
    "float3"    shift, and go to state 227
    "float4"    shift, and go to state 228
    "range"     shift, and go to state 229
    "urange"    shift, and go to state 230
    "range64"   shift, and go to state 231
    "urange64"  shift, and go to state 232
    "int64"     shift, and go to state 234
    "uint64"    shift, and go to state 235
    "double"    shift, and go to state 236
    "int8"      shift, and go to state 239
    "uint8"     shift, and go to state 240
    "int16"     shift, and go to state 241
    "uint16"    shift, and go to state 242
    "$f"        shift, and go to state 814
    "name"      shift, and go to state 815

    basic_type_declaration  go to state 816


State 620

  374 expr: expr "<<" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 817
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 621

  375 expr: expr ">>" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 818
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 622

  398 expr: expr "++" .

    $default  reduce using rule 398 (expr)


State 623

  399 expr: expr "--" .

    $default  reduce using rule 399 (expr)


State 624

  387 expr: expr "<=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 819
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 625

  388 expr: expr ">=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 820
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 626

  385 expr: expr "==" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 821
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 627

  386 expr: expr "!=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 822
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 628

  344 expr_method_call: expr "->" . "name" '(' ')'
  345                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 823


State 629

  417 expr: expr "??" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 824
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 630

  405 expr: expr "?." . "name"
  455 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 825
    "name"  shift, and go to state 826


State 631

  403 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 827
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 632

  441 expr: expr "<|" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 828
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 633

  442 expr: expr "|>" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 829
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 634

  376 expr: expr "<<<" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 830
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 635

  377 expr: expr ">>>" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 831
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 636

  392 expr: expr "&&" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 832
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 637

  393 expr: expr "||" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 833
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 638

  394 expr: expr "^^" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 834
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 639

  395 expr: expr ".." . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 835
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 640

  418 expr: expr '?' . expr ':' expr
  429     | expr '?' . "as" "name"
  432     | expr '?' . "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr '?' . "as" basic_type_declaration
  459 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "as"                              shift, and go to state 836
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 837
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 641

  390 expr: expr '|' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 838
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 642

  391 expr: expr '^' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 839
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 643

  389 expr: expr '&' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 840
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 644

  383 expr: expr '<' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 841
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 645

  384 expr: expr '>' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 842
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 646

  379 expr: expr '-' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 843
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 647

  378 expr: expr '+' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 844
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 648

  380 expr: expr '*' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 845
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 649

  381 expr: expr '/' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 846
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 650

  382 expr: expr '%' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 847
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 651

  355 expr_field: expr '.' . "name"
  356           | expr '.' . '.' "name"
  359           | expr '.' . $@22 error $@23
  402 expr: expr '.' . '[' expr ']'
  404     | expr '.' . "?[" expr ']'
  406     | expr '.' . "?." "name"
  454 expr_mtag: expr '.' . "$f" '(' expr ')'
  456          | expr '.' . '.' "$f" '(' expr ')'
  457          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 848
    "?["    shift, and go to state 849
    "$f"    shift, and go to state 850
    "name"  shift, and go to state 851
    '.'     shift, and go to state 852
    '['     shift, and go to state 853

    $default  reduce using rule 357 ($@22)

    $@22  go to state 854


State 652

  401 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 855
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 653

  600 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 600 (auto_type_declaration)


State 654

  410 expr: basic_type_declaration '(' . ')'
  411     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    ')'                               shift, and go to state 856
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 857
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 806
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 655

  614 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 614 (type_declaration_no_options)


State 656

  612 type_declaration_no_options: type_declaration_no_options '[' expr ']' .

    $default  reduce using rule 612 (type_declaration_no_options)


State 657

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  485 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 858


State 658

  484 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 484 (function_argument_declaration)


State 659

  560 variable_name_with_pos_list: "$i" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 859
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 660

  561 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 860


State 661

  496 copy_or_move: "<-" .

    $default  reduce using rule 496 (copy_or_move)


State 662

  562 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  563                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 861


State 663

  495 copy_or_move: '=' .

    $default  reduce using rule 495 (copy_or_move)


State 664

  499 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  500                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 862


State 665

  498 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 498 (variable_declaration)


State 666

  501 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  502                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    expr_pipe               go to state 863
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_assign             go to state 672
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 864
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 667

  487 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 487 (function_argument_list)


State 668

   73 expression_while_loop: "while" expr . expression_block
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    '{'    shift, and go to state 312

    expression_block  go to state 865


State 669

   71 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 866
    ','   shift, and go to state 662


State 670

  262 expression_return_no_pipe: "return" "<-" . expr
  265 expression_return: "return" "<-" . expr_pipe

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    expr_pipe               go to state 867
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_assign             go to state 672
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 868
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 671

  264 expression_return: "return" expr_pipe .

    $default  reduce using rule 264 (expression_return)


State 672

  241 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 704


State 673

  261 expression_return_no_pipe: "return" expr .
  317 expr_assign: expr .
  318            | expr . '=' expr
  319            | expr . "<-" expr
  320            | expr . ":=" expr
  321            | expr . "&=" expr
  322            | expr . "|=" expr
  323            | expr . "^=" expr
  324            | expr . "&&=" expr
  325            | expr . "||=" expr
  326            | expr . "^^=" expr
  327            | expr . "+=" expr
  328            | expr . "-=" expr
  329            | expr . "*=" expr
  330            | expr . "/=" expr
  331            | expr . "%=" expr
  332            | expr . "<<=" expr
  333            | expr . ">>=" expr
  334            | expr . "<<<=" expr
  335            | expr . ">>>=" expr
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "+="    shift, and go to state 706
    "-="    shift, and go to state 707
    "/="    shift, and go to state 708
    "*="    shift, and go to state 709
    "%="    shift, and go to state 710
    "&="    shift, and go to state 711
    "|="    shift, and go to state 712
    "^="    shift, and go to state 713
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "<-"    shift, and go to state 869
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    ":="    shift, and go to state 717
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "<<<="  shift, and go to state 718
    ">>>="  shift, and go to state 719
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    "&&="   shift, and go to state 720
    "||="   shift, and go to state 721
    "^^="   shift, and go to state 722
    ".."    shift, and go to state 639
    '='     shift, and go to state 870
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652

    " <|"     reduce using rule 317 (expr_assign)
    $default  reduce using rule 261 (expression_return_no_pipe)


State 674

  271 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 871


State 675

  249 expression_delete: "delete" "explicit" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 872
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 676

  248 expression_delete: "delete" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 248 (expression_delete)


State 677

   74 expression_with: "with" expr . expression_block
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    '{'    shift, and go to state 312

    expression_block  go to state 873


State 678

   76 expression_with_alias: "assume" "name" . '=' $@4 expr

    '='  shift, and go to state 874


State 679

  233 expression_any: "pass" ';' .

    $default  reduce using rule 233 (expression_any)


State 680

   50 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 875


State 681

   51 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 876


State 682

   52 expression_goto: "goto" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 52 (expression_goto)


State 683

   72 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 72 (expression_unsafe)


State 684

  267 expression_yield_no_pipe: "yield" "<-" . expr
  270 expression_yield: "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    expr_pipe               go to state 877
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_assign             go to state 672
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 878
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 685

  269 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 269 (expression_yield)


State 686

  266 expression_yield_no_pipe: "yield" expr .
  317 expr_assign: expr .
  318            | expr . '=' expr
  319            | expr . "<-" expr
  320            | expr . ":=" expr
  321            | expr . "&=" expr
  322            | expr . "|=" expr
  323            | expr . "^=" expr
  324            | expr . "&&=" expr
  325            | expr . "||=" expr
  326            | expr . "^^=" expr
  327            | expr . "+=" expr
  328            | expr . "-=" expr
  329            | expr . "*=" expr
  330            | expr . "/=" expr
  331            | expr . "%=" expr
  332            | expr . "<<=" expr
  333            | expr . ">>=" expr
  334            | expr . "<<<=" expr
  335            | expr . ">>>=" expr
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "+="    shift, and go to state 706
    "-="    shift, and go to state 707
    "/="    shift, and go to state 708
    "*="    shift, and go to state 709
    "%="    shift, and go to state 710
    "&="    shift, and go to state 711
    "|="    shift, and go to state 712
    "^="    shift, and go to state 713
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "<-"    shift, and go to state 869
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    ":="    shift, and go to state 717
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "<<<="  shift, and go to state 718
    ">>>="  shift, and go to state 719
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    "&&="   shift, and go to state 720
    "||="   shift, and go to state 721
    "^^="   shift, and go to state 722
    ".."    shift, and go to state 639
    '='     shift, and go to state 870
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652

    " <|"     reduce using rule 317 (expr_assign)
    $default  reduce using rule 266 (expression_yield_no_pipe)


State 687

  298 block_or_lambda: '@' .
  299                | '@' . '@'

    '@'  shift, and go to state 879

    $default  reduce using rule 298 (block_or_lambda)


State 688

  244 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 244 (expr_pipe)


State 689

  242 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 242 (expr_pipe)


State 690

  243 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 243 (expr_pipe)


State 691

  237 expr_keyword: "keyword" expr . expression_block
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    '{'    shift, and go to state 312

    expression_block  go to state 880


State 692

  212 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 881


State 693

  231 expression_any: expression_label ';' .

    $default  reduce using rule 231 (expression_any)


State 694

  232 expression_any: expression_goto ';' .

    $default  reduce using rule 232 (expression_any)


State 695

   68 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    '{'    shift, and go to state 312

    expression_block  go to state 882


State 696

   70 expression_if_then_else: expression_if_one_liner "if" . $@3 expr expression_else_one_liner ';'

    $default  reduce using rule 69 ($@3)

    $@3  go to state 883


State 697

  218 expression_any: expression_delete ';' .

    $default  reduce using rule 218 (expression_any)


State 698

  225 expression_any: expression_break ';' .

    $default  reduce using rule 225 (expression_any)


State 699

  226 expression_any: expression_continue ';' .

    $default  reduce using rule 226 (expression_any)


State 700

  263 expression_return: expression_return_no_pipe ';' .

    $default  reduce using rule 263 (expression_return)


State 701

  268 expression_yield: expression_yield_no_pipe ';' .

    $default  reduce using rule 268 (expression_yield)


State 702

  274 optional_in_scope: "inscope" .

    $default  reduce using rule 274 (optional_in_scope)


State 703

  276 expression_let: kwd_let optional_in_scope . let_variable_declaration

    "$i"    shift, and go to state 327
    "name"  shift, and go to state 328

    let_variable_name_with_pos_list  go to state 329
    let_variable_declaration         go to state 884


State 704

  241 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 885


State 705

  217 expression_any: expr_assign ';' .

    $default  reduce using rule 217 (expression_any)


State 706

  327 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 886
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 707

  328 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 887
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 708

  330 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 888
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 709

  329 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 889
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 710

  331 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 890
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 711

  321 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 891
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 712

  322 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 892
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 713

  323 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 893
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 714

  332 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 894
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 715

  333 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 895
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 716

  319 expr_assign: expr "<-" . expr
  339 expr_assign_pipe: expr "<-" . "@ <|" expr_block
  340                 | expr "<-" . "@@ <|" expr_block
  341                 | expr "<-" . "$ <|" expr_block

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 896
    "@ <|"                            shift, and go to state 897
    "@@ <|"                           shift, and go to state 898
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 899
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 717

  320 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 900
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 718

  334 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 901
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 719

  335 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 902
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 720

  324 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 903
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 721

  325 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 904
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 722

  326 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 905
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 723

  318 expr_assign: expr '=' . expr
  336 expr_assign_pipe: expr '=' . "@ <|" expr_block
  337                 | expr '=' . "@@ <|" expr_block
  338                 | expr '=' . "$ <|" expr_block

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 906
    "@ <|"                            shift, and go to state 907
    "@@ <|"                           shift, and go to state 908
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 909
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 724

  545 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 545 (enum_declaration)


State 725

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  532 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ';'    shift, and go to state 910


State 726

  113 optional_annotation_list: '[' . annotation_list ']'
  482 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 49
    "private"  shift, and go to state 50
    "|>"       shift, and go to state 51
    "::"       shift, and go to state 52
    "name"     shift, and go to state 53
    '!'        shift, and go to state 54
    '('        shift, and go to state 55

    annotation_declaration_name   go to state 56
    annotation_declaration_basic  go to state 57
    annotation_declaration        go to state 58
    annotation_list               go to state 911
    name_in_namespace             go to state 60


State 727

  558 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 558 (structure_declaration)


State 728

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  481                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "def"  shift, and go to state 912


State 729

  477 struct_variable_declaration_list: struct_variable_declaration_list $@30 . structure_variable_declaration ';'

    "[["  shift, and go to state 201

    $default  reduce using rule 462 (optional_field_annotation)

    optional_field_annotation       go to state 913
    structure_variable_declaration  go to state 914


State 730

  509 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 509 (let_variable_name_with_pos_list)


State 731

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 915


State 732

  513 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 513 (let_variable_declaration)


State 733

  514 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'
  515                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    expr_pipe               go to state 916
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_assign             go to state 672
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 917
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 734

  517 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 517 (let_variable_declaration)


State 735

  317 expr_assign: expr .
  318            | expr . '=' expr
  319            | expr . "<-" expr
  320            | expr . ":=" expr
  321            | expr . "&=" expr
  322            | expr . "|=" expr
  323            | expr . "^=" expr
  324            | expr . "&&=" expr
  325            | expr . "||=" expr
  326            | expr . "^^=" expr
  327            | expr . "+=" expr
  328            | expr . "-=" expr
  329            | expr . "*=" expr
  330            | expr . "/=" expr
  331            | expr . "%=" expr
  332            | expr . "<<=" expr
  333            | expr . ">>=" expr
  334            | expr . "<<<=" expr
  335            | expr . ">>>=" expr
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  516 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "+="    shift, and go to state 706
    "-="    shift, and go to state 707
    "/="    shift, and go to state 708
    "*="    shift, and go to state 709
    "%="    shift, and go to state 710
    "&="    shift, and go to state 711
    "|="    shift, and go to state 712
    "^="    shift, and go to state 713
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "<-"    shift, and go to state 869
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    ":="    shift, and go to state 717
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "<<<="  shift, and go to state 718
    ">>>="  shift, and go to state 719
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    "&&="   shift, and go to state 720
    "||="   shift, and go to state 721
    "^^="   shift, and go to state 722
    ".."    shift, and go to state 639
    '='     shift, and go to state 870
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652
    ';'     shift, and go to state 918

    $default  reduce using rule 317 (expr_assign)


State 736

  632 type_declaration_no_options: "array" '<' $@43 type_declaration '>' . $@44

    $default  reduce using rule 631 ($@44)

    $@44  go to state 919


State 737

  635 type_declaration_no_options: "table" '<' $@45 table_type_pair '>' . $@46

    $default  reduce using rule 634 ($@46)

    $@46  go to state 920


State 738

  607 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 921


State 739

  638 type_declaration_no_options: "iterator" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 637 ($@48)

    $@48  go to state 922


State 740

  628 type_declaration_no_options: "smart_ptr" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 627 ($@42)

    $@42  go to state 923


State 741

  605 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' . $@40

    $default  reduce using rule 604 ($@40)

    $@40  go to state 924


State 742

  602 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 355


State 743

  642 type_declaration_no_options: "block" '<' $@49 type_declaration '>' . $@50

    $default  reduce using rule 641 ($@50)

    $@50  go to state 925


State 744

  645 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list optional_function_type . '>' $@52

    '>'  shift, and go to state 926


State 745

  649 type_declaration_no_options: "function" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 648 ($@54)

    $@54  go to state 927


State 746

  652 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list optional_function_type . '>' $@56

    '>'  shift, and go to state 928


State 747

  656 type_declaration_no_options: "lambda" '<' $@57 type_declaration '>' . $@58

    $default  reduce using rule 655 ($@58)

    $@58  go to state 929


State 748

  659 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list optional_function_type . '>' $@60

    '>'  shift, and go to state 930


State 749

  489 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 931


State 750

  662 type_declaration_no_options: "tuple" '<' $@61 tuple_type_list '>' . $@62

    $default  reduce using rule 661 ($@62)

    $@62  go to state 932


State 751

  491 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 572

    name_in_namespace            go to state 246
    tuple_type                   go to state 933
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 575


State 752

  665 type_declaration_no_options: "variant" '<' $@63 variant_type_list '>' . $@64

    $default  reduce using rule 664 ($@64)

    $@64  go to state 934


State 753

  494 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 254

    variant_type  go to state 483


State 754

  252 new_type_declaration: '<' $@8 . type_declaration '>' $@9

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 935


State 755

  255 expr_new: "new" new_type_declaration '(' . ')'
  256         | "new" new_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    ')'                               shift, and go to state 936
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 937
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 806
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 756

  289 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  290               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  291               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '<'                               shift, and go to state 938
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 939
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 757

  288 expr_type_decl: "type" '<' $@16 . type_declaration '>' $@17

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 940


State 758

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  413     | "deref" '(' expr . ')'
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 941


State 759

  279 expr_cast: "cast" '<' $@10 . type_declaration_no_options '>' $@11 expr

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 942


State 760

  282 expr_cast: "upcast" '<' $@12 . type_declaration_no_options '>' $@13 expr

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 943


State 761

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  414     | "addr" '(' expr . ')'
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 944


State 762

  285 expr_cast: "reinterpret" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 945


State 763

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  444     | "unsafe" '(' expr . ')'
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 946


State 764

  415 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  416     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '>'         shift, and go to state 947
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353


State 765

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  446 expr_mtag: "$$" '(' expr . ')'
  454          | expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 948


State 766

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  447 expr_mtag: "$i" '(' expr . ')'
  454          | expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 949


State 767

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  448 expr_mtag: "$v" '(' expr . ')'
  454          | expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 950


State 768

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  449 expr_mtag: "$b" '(' expr . ')'
  454          | expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 951


State 769

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  450 expr_mtag: "$a" '(' expr . ')'
  454          | expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 952


State 770

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  452 expr_mtag: "$c" '(' expr . ')' '(' ')'
  453          | "$c" '(' expr . ')' '(' expr_list ')'
  454          | expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 953


State 771

  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  722 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 954
    ','   shift, and go to state 662


State 772

  689 optional_block: "where" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 955


State 773

  682 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  683                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 956


State 774

  245 name_in_namespace: "name" .
  246                  | "name" . "::" "name"
  678 make_struct_fields: "name" . copy_or_move expr
  679                   | "name" . ":=" expr

    "<-"  shift, and go to state 661
    ":="  shift, and go to state 957
    "::"  shift, and go to state 87
    '='   shift, and go to state 663

    $default  reduce using rule 245 (name_in_namespace)

    copy_or_move  go to state 958


State 775

  373 expr: '-' . expr
  614 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  617                            | type_declaration_no_options '-' . "const"
  619                            | type_declaration_no_options '-' . '&'
  622                            | type_declaration_no_options '-' . '#'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "const"                           shift, and go to state 473
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '&'                               shift, and go to state 474
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 475
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312
    '#'                               shift, and go to state 476

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 607
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 776

  400 expr: '(' . expr ')'
  704 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  705                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    ')'                               shift, and go to state 959
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 613
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 777

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  708 make_tuple: expr .
  709           | expr . "=>" expr

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "=>"   shift, and go to state 960
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 708 (make_tuple)


State 778

  680 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  681                   | make_struct_fields . ',' "name" ":=" expr
  684                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  685                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  686 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 961

    $default  reduce using rule 686 (make_struct_dim)


State 779

  687 make_struct_dim: make_struct_dim . ';' make_struct_fields
  702 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 772
    ';'      shift, and go to state 962

    $default  reduce using rule 688 (optional_block)

    optional_block  go to state 963


State 780

  703 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 964
    ",]]"  shift, and go to state 965
    ']'    shift, and go to state 966

    optional_trailing_delim_sqr_sqr  go to state 967


State 781

  710 make_tuple: make_tuple . ',' expr
  713 make_dim: make_tuple .

    ','  shift, and go to state 968

    $default  reduce using rule 713 (make_dim)


State 782

  714 make_dim: make_dim . ';' make_tuple
  715 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    ";]]"  shift, and go to state 969
    ']'    shift, and go to state 970
    ';'    shift, and go to state 971

    optional_trailing_semicolon_sqr_sqr  go to state 972


State 783

  562 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  563                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  723 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 973
    ','   shift, and go to state 662


State 784

  400 expr: '(' . expr ')'
  707 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    ')'                               shift, and go to state 974
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 613
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 785

  687 make_struct_dim: make_struct_dim . ';' make_struct_fields
  706 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 772
    ';'      shift, and go to state 962

    $default  reduce using rule 688 (optional_block)

    optional_block  go to state 975


State 786

  714 make_dim: make_dim . ';' make_tuple
  716 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    ";}]"  shift, and go to state 976
    ';'    shift, and go to state 971
    '}'    shift, and go to state 977

    optional_trailing_semicolon_cur_sqr  go to state 978


State 787

  711 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 979
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 788

  691 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 691 (optional_trailing_semicolon_cur_cur)


State 789

  718 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 602
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_map_tuple          go to state 980
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 790

  690 optional_trailing_semicolon_cur_cur: '}' . '}'

    '}'  shift, and go to state 981


State 791

  719 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 719 (make_table_decl)


State 792

  240 expression_keyword: "keyword" '<' $@6 . type_declaration_no_options '>' $@7 expr

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 982


State 793

   28 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 28 (string_builder)


State 794

   27 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 983
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 795

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   26 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 203
    STRING_CHARACTER_ESC  shift, and go to state 204

    STRING_CHARACTER      [reduce using rule 26 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 26 (string_builder_body)]
    $default              reduce using rule 26 (string_builder_body)


State 796

   32 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 984

    reader_character_sequence  go to state 985


State 797

  400 expr: '(' expr ')' .

    $default  reduce using rule 400 (expr)


State 798

  347 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 986


State 799

  461 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 987


State 800

  351 func_addr_expr: '@' '@' '<' . $@18 type_declaration_no_options '>' $@19 func_addr_name
  354               | '@' '@' '<' . $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    ':'       reduce using rule 352 ($@20)
    '>'       reduce using rule 352 ($@20)
    '('       reduce using rule 352 ($@20)
    $default  reduce using rule 349 ($@18)

    $@18  go to state 988
    $@20  go to state 989


State 801

  346 func_addr_name: name_in_namespace .

    $default  reduce using rule 346 (func_addr_name)


State 802

  348 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 348 (func_addr_expr)


State 803

  342 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 773
    "name"  shift, and go to state 990

    make_struct_fields  go to state 991


State 804

  408 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 408 (expr)


State 805

  293 expr_list: expr_list . ',' expr
  343 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  409 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 992
    ')'  shift, and go to state 993


State 806

  292 expr_list: expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 292 (expr_list)


State 807

  307 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 994
    ":="  shift, and go to state 995
    '='   shift, and go to state 996
    '&'   shift, and go to state 997

    capture_entry  go to state 998
    capture_list   go to state 999


State 808

  309 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 310

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1000


State 809

  421 expr: expr "is" "type" . '<' $@24 type_declaration_no_options '>' $@25

    '<'  shift, and go to state 1001


State 810

  460 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1002


State 811

  423 expr: expr "is" "name" .

    $default  reduce using rule 423 (expr)


State 812

  422 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 422 (expr)


State 813

  427 expr: expr "as" "type" . '<' $@26 type_declaration '>' $@27

    '<'  shift, and go to state 1003


State 814

  458 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1004


State 815

  424 expr: expr "as" "name" .

    $default  reduce using rule 424 (expr)


State 816

  428 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 428 (expr)


State 817

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  374     | expr "<<" expr .
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '-'   shift, and go to state 646
    '+'   shift, and go to state 647
    '*'   shift, and go to state 648
    '/'   shift, and go to state 649
    '%'   shift, and go to state 650
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 374 (expr)


State 818

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  375     | expr ">>" expr .
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '-'   shift, and go to state 646
    '+'   shift, and go to state 647
    '*'   shift, and go to state 648
    '/'   shift, and go to state 649
    '%'   shift, and go to state 650
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 375 (expr)


State 819

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  387     | expr "<=" expr .
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 387 (expr)


State 820

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  388     | expr ">=" expr .
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 388 (expr)


State 821

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  385     | expr "==" expr .
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 385 (expr)


State 822

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  386     | expr "!=" expr .
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 386 (expr)


State 823

  344 expr_method_call: expr "->" "name" . '(' ')'
  345                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1005


State 824

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  417     | expr "??" expr .
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 417 (expr)


State 825

  455 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1006


State 826

  405 expr: expr "?." "name" .

    $default  reduce using rule 405 (expr)


State 827

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  403     | expr "?[" expr . ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ']'    shift, and go to state 1007


State 828

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  441     | expr "<|" expr .
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 628
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 441 (expr)


State 829

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  442     | expr "|>" expr .
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 628
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 442 (expr)


State 830

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  376     | expr "<<<" expr .
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '-'   shift, and go to state 646
    '+'   shift, and go to state 647
    '*'   shift, and go to state 648
    '/'   shift, and go to state 649
    '%'   shift, and go to state 650
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 376 (expr)


State 831

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  377     | expr ">>>" expr .
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '-'   shift, and go to state 646
    '+'   shift, and go to state 647
    '*'   shift, and go to state 648
    '/'   shift, and go to state 649
    '%'   shift, and go to state 650
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 377 (expr)


State 832

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  392     | expr "&&" expr .
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 392 (expr)


State 833

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  393     | expr "||" expr .
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "^^"   shift, and go to state 638
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 393 (expr)


State 834

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  394     | expr "^^" expr .
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 394 (expr)


State 835

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  395     | expr ".." expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    ".."  error (nonassociative)

    $default  reduce using rule 395 (expr)


State 836

  429 expr: expr '?' "as" . "name"
  432     | expr '?' "as" . "type" '<' $@28 type_declaration '>' $@29
  433     | expr '?' "as" . basic_type_declaration
  459 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1008
    "bool"      shift, and go to state 212
    "void"      shift, and go to state 213
    "string"    shift, and go to state 214
    "int"       shift, and go to state 216
    "int2"      shift, and go to state 217
    "int3"      shift, and go to state 218
    "int4"      shift, and go to state 219
    "uint"      shift, and go to state 220
    "bitfield"  shift, and go to state 415
    "uint2"     shift, and go to state 222
    "uint3"     shift, and go to state 223
    "uint4"     shift, and go to state 224
    "float"     shift, and go to state 225
    "float2"    shift, and go to state 226
    "float3"    shift, and go to state 227
    "float4"    shift, and go to state 228
    "range"     shift, and go to state 229
    "urange"    shift, and go to state 230
    "range64"   shift, and go to state 231
    "urange64"  shift, and go to state 232
    "int64"     shift, and go to state 234
    "uint64"    shift, and go to state 235
    "double"    shift, and go to state 236
    "int8"      shift, and go to state 239
    "uint8"     shift, and go to state 240
    "int16"     shift, and go to state 241
    "uint16"    shift, and go to state 242
    "$f"        shift, and go to state 1009
    "name"      shift, and go to state 1010

    basic_type_declaration  go to state 1011


State 837

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  418     | expr '?' expr . ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    ':'    shift, and go to state 1012
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652


State 838

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  390     | expr '|' expr .
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 390 (expr)


State 839

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  391     | expr '^' expr .
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 391 (expr)


State 840

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  389     | expr '&' expr .
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 389 (expr)


State 841

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  383     | expr '<' expr .
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 383 (expr)


State 842

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  384     | expr '>' expr .
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 384 (expr)


State 843

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  379     | expr '-' expr .
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '*'   shift, and go to state 648
    '/'   shift, and go to state 649
    '%'   shift, and go to state 650
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 379 (expr)


State 844

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  378     | expr '+' expr .
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '*'   shift, and go to state 648
    '/'   shift, and go to state 649
    '%'   shift, and go to state 650
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 378 (expr)


State 845

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  380     | expr '*' expr .
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 380 (expr)


State 846

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  381     | expr '/' expr .
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 381 (expr)


State 847

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  382     | expr '%' expr .
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 618
    "as"  shift, and go to state 619
    "++"  shift, and go to state 622
    "--"  shift, and go to state 623
    "->"  shift, and go to state 628
    "??"  shift, and go to state 629
    "?."  shift, and go to state 630
    "?["  shift, and go to state 631
    "<|"  shift, and go to state 632
    "|>"  shift, and go to state 633
    '.'   shift, and go to state 651
    '['   shift, and go to state 652

    $default  reduce using rule 382 (expr)


State 848

  406 expr: expr '.' "?." . "name"
  457 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1013
    "name"  shift, and go to state 1014


State 849

  404 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1015
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 850

  454 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1016


State 851

  355 expr_field: expr '.' "name" .

    $default  reduce using rule 355 (expr_field)


State 852

  356 expr_field: expr '.' '.' . "name"
  456 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1017
    "name"  shift, and go to state 1018


State 853

  402 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1019
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 854

  359 expr_field: expr '.' $@22 . error $@23

    error  shift, and go to state 1020


State 855

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  401     | expr '[' expr . ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ']'    shift, and go to state 1021


State 856

  410 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 410 (expr)


State 857

  293 expr_list: expr_list . ',' expr
  411 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1022
    ')'  shift, and go to state 1023


State 858

  485 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 485 (function_argument_declaration)


State 859

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  560 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1024


State 860

  561 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 561 (variable_name_with_pos_list)


State 861

  562 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  563                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1025

    $default  reduce using rule 562 (variable_name_with_pos_list)


State 862

  499 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  500                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 661
    '='   shift, and go to state 663
    '|'   shift, and go to state 354

    $default  reduce using rule 499 (variable_declaration)

    copy_or_move  go to state 1026


State 863

  502 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 502 (variable_declaration)


State 864

  317 expr_assign: expr .
  318            | expr . '=' expr
  319            | expr . "<-" expr
  320            | expr . ":=" expr
  321            | expr . "&=" expr
  322            | expr . "|=" expr
  323            | expr . "^=" expr
  324            | expr . "&&=" expr
  325            | expr . "||=" expr
  326            | expr . "^^=" expr
  327            | expr . "+=" expr
  328            | expr . "-=" expr
  329            | expr . "*=" expr
  330            | expr . "/=" expr
  331            | expr . "%=" expr
  332            | expr . "<<=" expr
  333            | expr . ">>=" expr
  334            | expr . "<<<=" expr
  335            | expr . ">>>=" expr
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  501 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "+="    shift, and go to state 706
    "-="    shift, and go to state 707
    "/="    shift, and go to state 708
    "*="    shift, and go to state 709
    "%="    shift, and go to state 710
    "&="    shift, and go to state 711
    "|="    shift, and go to state 712
    "^="    shift, and go to state 713
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "<-"    shift, and go to state 869
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    ":="    shift, and go to state 717
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "<<<="  shift, and go to state 718
    ">>>="  shift, and go to state 719
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    "&&="   shift, and go to state 720
    "||="   shift, and go to state 721
    "^^="   shift, and go to state 722
    ".."    shift, and go to state 639
    '='     shift, and go to state 870
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652

    " <|"     reduce using rule 317 (expr_assign)
    $default  reduce using rule 501 (variable_declaration)


State 865

   73 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 73 (expression_while_loop)


State 866

   71 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1027
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 806
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 867

  265 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 265 (expression_return)


State 868

  262 expression_return_no_pipe: "return" "<-" expr .
  317 expr_assign: expr .
  318            | expr . '=' expr
  319            | expr . "<-" expr
  320            | expr . ":=" expr
  321            | expr . "&=" expr
  322            | expr . "|=" expr
  323            | expr . "^=" expr
  324            | expr . "&&=" expr
  325            | expr . "||=" expr
  326            | expr . "^^=" expr
  327            | expr . "+=" expr
  328            | expr . "-=" expr
  329            | expr . "*=" expr
  330            | expr . "/=" expr
  331            | expr . "%=" expr
  332            | expr . "<<=" expr
  333            | expr . ">>=" expr
  334            | expr . "<<<=" expr
  335            | expr . ">>>=" expr
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "+="    shift, and go to state 706
    "-="    shift, and go to state 707
    "/="    shift, and go to state 708
    "*="    shift, and go to state 709
    "%="    shift, and go to state 710
    "&="    shift, and go to state 711
    "|="    shift, and go to state 712
    "^="    shift, and go to state 713
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "<-"    shift, and go to state 869
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    ":="    shift, and go to state 717
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "<<<="  shift, and go to state 718
    ">>>="  shift, and go to state 719
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    "&&="   shift, and go to state 720
    "||="   shift, and go to state 721
    "^^="   shift, and go to state 722
    ".."    shift, and go to state 639
    '='     shift, and go to state 870
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652

    " <|"     reduce using rule 317 (expr_assign)
    $default  reduce using rule 262 (expression_return_no_pipe)


State 869

  319 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 899
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 870

  318 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 909
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 871

  271 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 312

    expression_block  go to state 1028


State 872

  249 expression_delete: "delete" "explicit" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 249 (expression_delete)


State 873

   74 expression_with: "with" expr expression_block .

    $default  reduce using rule 74 (expression_with)


State 874

   76 expression_with_alias: "assume" "name" '=' . $@4 expr

    $default  reduce using rule 75 ($@4)

    $@4  go to state 1029


State 875

   50 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 50 (expression_label)


State 876

   51 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 51 (expression_goto)


State 877

  270 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 270 (expression_yield)


State 878

  267 expression_yield_no_pipe: "yield" "<-" expr .
  317 expr_assign: expr .
  318            | expr . '=' expr
  319            | expr . "<-" expr
  320            | expr . ":=" expr
  321            | expr . "&=" expr
  322            | expr . "|=" expr
  323            | expr . "^=" expr
  324            | expr . "&&=" expr
  325            | expr . "||=" expr
  326            | expr . "^^=" expr
  327            | expr . "+=" expr
  328            | expr . "-=" expr
  329            | expr . "*=" expr
  330            | expr . "/=" expr
  331            | expr . "%=" expr
  332            | expr . "<<=" expr
  333            | expr . ">>=" expr
  334            | expr . "<<<=" expr
  335            | expr . ">>>=" expr
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "+="    shift, and go to state 706
    "-="    shift, and go to state 707
    "/="    shift, and go to state 708
    "*="    shift, and go to state 709
    "%="    shift, and go to state 710
    "&="    shift, and go to state 711
    "|="    shift, and go to state 712
    "^="    shift, and go to state 713
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "<-"    shift, and go to state 869
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    ":="    shift, and go to state 717
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "<<<="  shift, and go to state 718
    ">>>="  shift, and go to state 719
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    "&&="   shift, and go to state 720
    "||="   shift, and go to state 721
    "^^="   shift, and go to state 722
    ".."    shift, and go to state 639
    '='     shift, and go to state 870
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652

    " <|"     reduce using rule 317 (expr_assign)
    $default  reduce using rule 267 (expression_yield_no_pipe)


State 879

  299 block_or_lambda: '@' '@' .

    $default  reduce using rule 299 (block_or_lambda)


State 880

  237 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 237 (expr_keyword)


State 881

  212 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 234 (expressions)

    expressions  go to state 1030


State 882

   68 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1031
    "elif"         shift, and go to state 1032
    "static_elif"  shift, and go to state 1033

    $default  reduce using rule 55 (expression_else)

    elif_or_static_elif  go to state 1034
    expression_else      go to state 1035


State 883

   70 expression_if_then_else: expression_if_one_liner "if" $@3 . expr expression_else_one_liner ';'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1036
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 884

  276 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 276 (expression_let)


State 885

  241 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 241 (expr_pipe)


State 886

  327 expr_assign: expr "+=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 327 (expr_assign)


State 887

  328 expr_assign: expr "-=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 328 (expr_assign)


State 888

  330 expr_assign: expr "/=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 330 (expr_assign)


State 889

  329 expr_assign: expr "*=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 329 (expr_assign)


State 890

  331 expr_assign: expr "%=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 331 (expr_assign)


State 891

  321 expr_assign: expr "&=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 321 (expr_assign)


State 892

  322 expr_assign: expr "|=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 322 (expr_assign)


State 893

  323 expr_assign: expr "^=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 323 (expr_assign)


State 894

  332 expr_assign: expr "<<=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 332 (expr_assign)


State 895

  333 expr_assign: expr ">>=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 333 (expr_assign)


State 896

  341 expr_assign_pipe: expr "<-" "$ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 1037


State 897

  339 expr_assign_pipe: expr "<-" "@ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 1038


State 898

  340 expr_assign_pipe: expr "<-" "@@ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 1039


State 899

  319 expr_assign: expr "<-" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 319 (expr_assign)


State 900

  320 expr_assign: expr ":=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 320 (expr_assign)


State 901

  334 expr_assign: expr "<<<=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 334 (expr_assign)


State 902

  335 expr_assign: expr ">>>=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 335 (expr_assign)


State 903

  324 expr_assign: expr "&&=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 324 (expr_assign)


State 904

  325 expr_assign: expr "||=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 325 (expr_assign)


State 905

  326 expr_assign: expr "^^=" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 326 (expr_assign)


State 906

  338 expr_assign_pipe: expr '=' "$ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 1040


State 907

  336 expr_assign_pipe: expr '=' "@ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 1041


State 908

  337 expr_assign_pipe: expr '=' "@@ <|" . expr_block

    '$'  shift, and go to state 445
    '@'  shift, and go to state 687
    '{'  shift, and go to state 312

    expression_block  go to state 449
    block_or_lambda   go to state 456
    expr_block        go to state 1042


State 909

  318 expr_assign: expr '=' expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 318 (expr_assign)


State 910

  532 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 532 (enum_list)


State 911

  111 annotation_list: annotation_list . ',' annotation_declaration
  113 optional_annotation_list: '[' annotation_list . ']'
  482 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 94
    ']'  shift, and go to state 1043


State 912

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';'
  481                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "public"   shift, and go to state 1044
    "private"  shift, and go to state 1045

    $default  reduce using rule 469 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1046


State 913

  474 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1047

    $default  reduce using rule 472 (optional_static_member_variable)

    optional_static_member_variable  go to state 1048


State 914

  477 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration . ';'

    ';'  shift, and go to state 1049


State 915

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 512 (let_variable_name_with_pos_list)


State 916

  515 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 515 (let_variable_declaration)


State 917

  317 expr_assign: expr .
  318            | expr . '=' expr
  319            | expr . "<-" expr
  320            | expr . ":=" expr
  321            | expr . "&=" expr
  322            | expr . "|=" expr
  323            | expr . "^=" expr
  324            | expr . "&&=" expr
  325            | expr . "||=" expr
  326            | expr . "^^=" expr
  327            | expr . "+=" expr
  328            | expr . "-=" expr
  329            | expr . "*=" expr
  330            | expr . "/=" expr
  331            | expr . "%=" expr
  332            | expr . "<<=" expr
  333            | expr . ">>=" expr
  334            | expr . "<<<=" expr
  335            | expr . ">>>=" expr
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  514 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "+="    shift, and go to state 706
    "-="    shift, and go to state 707
    "/="    shift, and go to state 708
    "*="    shift, and go to state 709
    "%="    shift, and go to state 710
    "&="    shift, and go to state 711
    "|="    shift, and go to state 712
    "^="    shift, and go to state 713
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    "<<="   shift, and go to state 714
    ">>="   shift, and go to state 715
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "<-"    shift, and go to state 869
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    ":="    shift, and go to state 717
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "<<<="  shift, and go to state 718
    ">>>="  shift, and go to state 719
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    "&&="   shift, and go to state 720
    "||="   shift, and go to state 721
    "^^="   shift, and go to state 722
    ".."    shift, and go to state 639
    '='     shift, and go to state 870
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652
    ';'     shift, and go to state 1050

    $default  reduce using rule 317 (expr_assign)


State 918

  516 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 516 (let_variable_declaration)


State 919

  632 type_declaration_no_options: "array" '<' $@43 type_declaration '>' $@44 .

    $default  reduce using rule 632 (type_declaration_no_options)


State 920

  635 type_declaration_no_options: "table" '<' $@45 table_type_pair '>' $@46 .

    $default  reduce using rule 635 (type_declaration_no_options)


State 921

  607 table_type_pair: type_declaration ';' type_declaration .
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354

    $default  reduce using rule 607 (table_type_pair)


State 922

  638 type_declaration_no_options: "iterator" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 638 (type_declaration_no_options)


State 923

  628 type_declaration_no_options: "smart_ptr" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 628 (type_declaration_no_options)


State 924

  605 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40 .

    $default  reduce using rule 605 (bitfield_type_declaration)


State 925

  642 type_declaration_no_options: "block" '<' $@49 type_declaration '>' $@50 .

    $default  reduce using rule 642 (type_declaration_no_options)


State 926

  645 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list optional_function_type '>' . $@52

    $default  reduce using rule 644 ($@52)

    $@52  go to state 1051


State 927

  649 type_declaration_no_options: "function" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 649 (type_declaration_no_options)


State 928

  652 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list optional_function_type '>' . $@56

    $default  reduce using rule 651 ($@56)

    $@56  go to state 1052


State 929

  656 type_declaration_no_options: "lambda" '<' $@57 type_declaration '>' $@58 .

    $default  reduce using rule 656 (type_declaration_no_options)


State 930

  659 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list optional_function_type '>' . $@60

    $default  reduce using rule 658 ($@60)

    $@60  go to state 1053


State 931

  489 tuple_type: "name" ':' type_declaration .
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354

    $default  reduce using rule 489 (tuple_type)


State 932

  662 type_declaration_no_options: "tuple" '<' $@61 tuple_type_list '>' $@62 .

    $default  reduce using rule 662 (type_declaration_no_options)


State 933

  491 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 491 (tuple_type_list)


State 934

  665 type_declaration_no_options: "variant" '<' $@63 variant_type_list '>' $@64 .

    $default  reduce using rule 665 (type_declaration_no_options)


State 935

  252 new_type_declaration: '<' $@8 type_declaration . '>' $@9
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 1054


State 936

  255 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 255 (expr_new)


State 937

  256 expr_new: "new" new_type_declaration '(' expr_list . ')'
  293 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1022
    ')'  shift, and go to state 1055


State 938

  290 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  291               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 1056


State 939

  289 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1057


State 940

  288 expr_type_decl: "type" '<' $@16 type_declaration . '>' $@17
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 1058


State 941

  413 expr: "deref" '(' expr ')' .

    $default  reduce using rule 413 (expr)


State 942

  279 expr_cast: "cast" '<' $@10 type_declaration_no_options . '>' $@11 expr
  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '>'         shift, and go to state 1059
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353


State 943

  282 expr_cast: "upcast" '<' $@12 type_declaration_no_options . '>' $@13 expr
  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '>'         shift, and go to state 1060
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353


State 944

  414 expr: "addr" '(' expr ')' .

    $default  reduce using rule 414 (expr)


State 945

  285 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options . '>' $@15 expr
  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '>'         shift, and go to state 1061
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353


State 946

  444 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 444 (expr)


State 947

  415 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  416     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 807

    $default  reduce using rule 306 (optional_capture_list)

    optional_capture_list  go to state 1062


State 948

  446 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 446 (expr_mtag)


State 949

  447 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 447 (expr_mtag)


State 950

  448 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 448 (expr_mtag)


State 951

  449 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 449 (expr_mtag)


State 952

  450 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 450 (expr_mtag)


State 953

  452 expr_mtag: "$c" '(' expr ')' . '(' ')'
  453          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1063


State 954

  722 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1064
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 806
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 955

  689 optional_block: "where" expr_block .

    $default  reduce using rule 689 (optional_block)


State 956

  682 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  683                   | "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1065
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 957

  679 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1066
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 958

  678 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1067
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 959

  704 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  705                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 772
    "$f"     shift, and go to state 773
    "name"   shift, and go to state 990

    $default  reduce using rule 688 (optional_block)

    make_struct_fields  go to state 778
    make_struct_dim     go to state 1068
    optional_block      go to state 1069


State 960

  709 make_tuple: expr "=>" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1070
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 961

  680 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  681                   | make_struct_fields ',' . "name" ":=" expr
  684                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  685                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1071
    "name"  shift, and go to state 1072


State 962

  687 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "$f"    shift, and go to state 773
    "name"  shift, and go to state 990

    make_struct_fields  go to state 1073


State 963

  702 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 964
    ",]]"  shift, and go to state 965
    ']'    shift, and go to state 966

    optional_trailing_delim_sqr_sqr  go to state 1074


State 964

  697 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 697 (optional_trailing_delim_sqr_sqr)


State 965

  698 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 698 (optional_trailing_delim_sqr_sqr)


State 966

  696 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1075


State 967

  703 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 703 (make_struct_decl)


State 968

  710 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1076
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 969

  695 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 695 (optional_trailing_semicolon_sqr_sqr)


State 970

  694 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1077


State 971

  714 make_dim: make_dim ';' . make_tuple

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 777
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_tuple              go to state 1078
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 972

  715 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 715 (make_dim_decl)


State 973

  723 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1079
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 806
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 974

  707 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 773
    "name"  shift, and go to state 990

    make_struct_fields  go to state 778
    make_struct_dim     go to state 1080


State 975

  706 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1081
    ",}]"  shift, and go to state 1082
    '}'    shift, and go to state 1083

    optional_trailing_delim_cur_sqr  go to state 1084


State 976

  693 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 693 (optional_trailing_semicolon_cur_sqr)


State 977

  692 optional_trailing_semicolon_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1085


State 978

  716 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 716 (make_dim_decl)


State 979

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  711 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 711 (make_map_tuple)


State 980

  718 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 718 (make_table)


State 981

  690 optional_trailing_semicolon_cur_cur: '}' '}' .

    $default  reduce using rule 690 (optional_trailing_semicolon_cur_cur)


State 982

  240 expression_keyword: "keyword" '<' $@6 type_declaration_no_options . '>' $@7 expr
  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '>'         shift, and go to state 1086
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353


State 983

   27 string_builder_body: string_builder_body "{" expr . "}"
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    "}"    shift, and go to state 1087
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652


State 984

   29 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (reader_character_sequence)


State 985

   30 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 1088

    $default  reduce using rule 32 (expr_reader)


State 986

  347 func_addr_name: "$i" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1089
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 987

  461 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1090
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 988

  351 func_addr_expr: '@' '@' '<' $@18 . type_declaration_no_options '>' $@19 func_addr_name

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 1091


State 989

  354 func_addr_expr: '@' '@' '<' $@20 . optional_function_argument_list optional_function_type '>' $@21 func_addr_name

    '('  shift, and go to state 310

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1092


State 990

  678 make_struct_fields: "name" . copy_or_move expr
  679                   | "name" . ":=" expr

    "<-"  shift, and go to state 661
    ":="  shift, and go to state 957
    '='   shift, and go to state 663

    copy_or_move  go to state 958


State 991

  342 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  680 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  681                   | make_struct_fields . ',' "name" ":=" expr
  684                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  685                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 961
    ']'  shift, and go to state 1093


State 992

  293 expr_list: expr_list ',' . expr
  343 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 1094
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1095
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 993

  409 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 409 (expr)


State 994

  302 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1096


State 995

  303 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1097


State 996

  301 capture_entry: '=' . "name"

    "name"  shift, and go to state 1098


State 997

  300 capture_entry: '&' . "name"

    "name"  shift, and go to state 1099


State 998

  304 capture_list: capture_entry .

    $default  reduce using rule 304 (capture_list)


State 999

  305 capture_list: capture_list . ',' capture_entry
  307 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1100
    ']'  shift, and go to state 1101


State 1000

  309 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 371

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1102


State 1001

  421 expr: expr "is" "type" '<' . $@24 type_declaration_no_options '>' $@25

    $default  reduce using rule 419 ($@24)

    $@24  go to state 1103


State 1002

  460 expr_mtag: expr "is" "$f" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1104
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1003

  427 expr: expr "as" "type" '<' . $@26 type_declaration '>' $@27

    $default  reduce using rule 425 ($@26)

    $@26  go to state 1105


State 1004

  458 expr_mtag: expr "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1106
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1005

  344 expr_method_call: expr "->" "name" '(' . ')'
  345                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    ')'                               shift, and go to state 1107
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1108
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 806
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1006

  455 expr_mtag: expr "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1109
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1007

  403 expr: expr "?[" expr ']' .

    $default  reduce using rule 403 (expr)


State 1008

  432 expr: expr '?' "as" "type" . '<' $@28 type_declaration '>' $@29

    '<'  shift, and go to state 1110


State 1009

  459 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1111


State 1010

  429 expr: expr '?' "as" "name" .

    $default  reduce using rule 429 (expr)


State 1011

  433 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 433 (expr)


State 1012

  418 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1112
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1013

  457 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1113


State 1014

  406 expr: expr '.' "?." "name" .

    $default  reduce using rule 406 (expr)


State 1015

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  404     | expr '.' "?[" expr . ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ']'    shift, and go to state 1114


State 1016

  454 expr_mtag: expr '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1115
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1017

  456 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1116


State 1018

  356 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 356 (expr_field)


State 1019

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  402     | expr '.' '[' expr . ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ']'    shift, and go to state 1117


State 1020

  359 expr_field: expr '.' $@22 error . $@23

    $default  reduce using rule 358 ($@23)

    $@23  go to state 1118


State 1021

  401 expr: expr '[' expr ']' .

    $default  reduce using rule 401 (expr)


State 1022

  293 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1095
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1023

  411 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 411 (expr)


State 1024

  560 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 560 (variable_name_with_pos_list)


State 1025

  563 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1119


State 1026

  500 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1120
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1027

   71 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  293 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1022
    ';'  shift, and go to state 1121


State 1028

  271 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 271 (expression_try_catch)


State 1029

   76 expression_with_alias: "assume" "name" '=' $@4 . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1122
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1030

  212 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  235 expressions: expressions . expression_any
  236            | expressions . error

    error                             shift, and go to state 495
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 496
    "if"                              shift, and go to state 497
    "static_if"                       shift, and go to state 498
    "for"                             shift, and go to state 499
    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "return"                          shift, and go to state 500
    "null"                            shift, and go to state 408
    "break"                           shift, and go to state 501
    "try"                             shift, and go to state 502
    "delete"                          shift, and go to state 503
    "deref"                           shift, and go to state 409
    "with"                            shift, and go to state 504
    "assume"                          shift, and go to state 505
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 412
    "continue"                        shift, and go to state 506
    "pass"                            shift, and go to state 507
    "reinterpret"                     shift, and go to state 413
    "label"                           shift, and go to state 508
    "goto"                            shift, and go to state 509
    "unsafe"                          shift, and go to state 510
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "yield"                           shift, and go to state 511
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "$ <|"                            shift, and go to state 512
    "@ <|"                            shift, and go to state 513
    "@@ <|"                           shift, and go to state 514
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 515
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    ';'                               shift, and go to state 516
    '{'                               shift, and go to state 312
    '}'                               shift, and go to state 1123

    string_builder             go to state 447
    expr_reader                go to state 448
    expression_label           go to state 518
    expression_goto            go to state 519
    if_or_static_if            go to state 520
    expression_if_one_liner    go to state 521
    expression_if_then_else    go to state 522
    expression_for_loop        go to state 523
    expression_unsafe          go to state 524
    expression_while_loop      go to state 525
    expression_with            go to state 526
    expression_with_alias      go to state 527
    expression_block           go to state 449
    expression_any             go to state 528
    expr_keyword               go to state 529
    expression_keyword         go to state 450
    expr_pipe                  go to state 530
    name_in_namespace          go to state 451
    expression_delete          go to state 531
    expr_new                   go to state 452
    expression_break           go to state 532
    expression_continue        go to state 533
    expression_return_no_pipe  go to state 534
    expression_return          go to state 535
    expression_yield_no_pipe   go to state 536
    expression_yield           go to state 537
    expression_try_catch       go to state 538
    kwd_let                    go to state 539
    expression_let             go to state 540
    expr_cast                  go to state 453
    expr_type_decl             go to state 454
    expr_type_info             go to state 455
    block_or_lambda            go to state 456
    expr_block                 go to state 457
    expr_numeric_const         go to state 458
    expr_assign                go to state 541
    expr_assign_pipe           go to state 542
    expr_named_call            go to state 459
    expr_method_call           go to state 460
    func_addr_expr             go to state 461
    expr_field                 go to state 462
    expr                       go to state 543
    expr_mtag                  go to state 464
    basic_type_declaration     go to state 465
    make_decl                  go to state 466
    make_struct_decl           go to state 467
    make_dim_decl              go to state 468
    make_table_decl            go to state 469
    array_comprehension        go to state 470


State 1031

   56 expression_else: "else" . expression_block

    '{'  shift, and go to state 312

    expression_block  go to state 1124


State 1032

   53 elif_or_static_elif: "elif" .

    $default  reduce using rule 53 (elif_or_static_elif)


State 1033

   54 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 54 (elif_or_static_elif)


State 1034

   57 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1125
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1035

   68 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 68 (expression_if_then_else)


State 1036

   70 expression_if_then_else: expression_if_one_liner "if" $@3 expr . expression_else_one_liner ';'
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1126
    "is"    shift, and go to state 618
    "as"    shift, and go to state 619
    "<<"    shift, and go to state 620
    ">>"    shift, and go to state 621
    "++"    shift, and go to state 622
    "--"    shift, and go to state 623
    "<="    shift, and go to state 624
    ">="    shift, and go to state 625
    "=="    shift, and go to state 626
    "!="    shift, and go to state 627
    "->"    shift, and go to state 628
    "??"    shift, and go to state 629
    "?."    shift, and go to state 630
    "?["    shift, and go to state 631
    "<|"    shift, and go to state 632
    "|>"    shift, and go to state 633
    "<<<"   shift, and go to state 634
    ">>>"   shift, and go to state 635
    "&&"    shift, and go to state 636
    "||"    shift, and go to state 637
    "^^"    shift, and go to state 638
    ".."    shift, and go to state 639
    '?'     shift, and go to state 640
    '|'     shift, and go to state 641
    '^'     shift, and go to state 642
    '&'     shift, and go to state 643
    '<'     shift, and go to state 644
    '>'     shift, and go to state 645
    '-'     shift, and go to state 646
    '+'     shift, and go to state 647
    '*'     shift, and go to state 648
    '/'     shift, and go to state 649
    '%'     shift, and go to state 650
    '.'     shift, and go to state 651
    '['     shift, and go to state 652

    $default  reduce using rule 60 (expression_else_one_liner)

    expression_else_one_liner  go to state 1127


State 1037

  341 expr_assign_pipe: expr "<-" "$ <|" expr_block .

    $default  reduce using rule 341 (expr_assign_pipe)


State 1038

  339 expr_assign_pipe: expr "<-" "@ <|" expr_block .

    $default  reduce using rule 339 (expr_assign_pipe)


State 1039

  340 expr_assign_pipe: expr "<-" "@@ <|" expr_block .

    $default  reduce using rule 340 (expr_assign_pipe)


State 1040

  338 expr_assign_pipe: expr '=' "$ <|" expr_block .

    $default  reduce using rule 338 (expr_assign_pipe)


State 1041

  336 expr_assign_pipe: expr '=' "@ <|" expr_block .

    $default  reduce using rule 336 (expr_assign_pipe)


State 1042

  337 expr_assign_pipe: expr '=' "@@ <|" expr_block .

    $default  reduce using rule 337 (expr_assign_pipe)


State 1043

  113 optional_annotation_list: '[' annotation_list ']' .
  482 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 1128

    $default  reduce using rule 113 (optional_annotation_list)


State 1044

  470 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 470 (optional_public_or_private_member_variable)


State 1045

  471 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 471 (optional_public_or_private_member_variable)


State 1046

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@31 function_declaration_header ';'
  481                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block

    "abstract"  shift, and go to state 1129
    "static"    shift, and go to state 1047

    $default  reduce using rule 472 (optional_static_member_variable)

    optional_static_member_variable  go to state 1130


State 1047

  473 optional_static_member_variable: "static" .

    $default  reduce using rule 473 (optional_static_member_variable)


State 1048

  474 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1131
    "sealed"    shift, and go to state 1132

    $default  reduce using rule 464 (optional_override)

    optional_override  go to state 1133


State 1049

  477 struct_variable_declaration_list: struct_variable_declaration_list $@30 structure_variable_declaration ';' .

    $default  reduce using rule 477 (struct_variable_declaration_list)


State 1050

  514 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 514 (let_variable_declaration)


State 1051

  645 type_declaration_no_options: "block" '<' $@51 optional_function_argument_list optional_function_type '>' $@52 .

    $default  reduce using rule 645 (type_declaration_no_options)


State 1052

  652 type_declaration_no_options: "function" '<' $@55 optional_function_argument_list optional_function_type '>' $@56 .

    $default  reduce using rule 652 (type_declaration_no_options)


State 1053

  659 type_declaration_no_options: "lambda" '<' $@59 optional_function_argument_list optional_function_type '>' $@60 .

    $default  reduce using rule 659 (type_declaration_no_options)


State 1054

  252 new_type_declaration: '<' $@8 type_declaration '>' . $@9

    $default  reduce using rule 251 ($@9)

    $@9  go to state 1134


State 1055

  256 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 256 (expr_new)


State 1056

  290 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  291               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 1135
    ';'  shift, and go to state 1136


State 1057

  289 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 289 (expr_type_info)


State 1058

  288 expr_type_decl: "type" '<' $@16 type_declaration '>' . $@17

    $default  reduce using rule 287 ($@17)

    $@17  go to state 1137


State 1059

  279 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' . $@11 expr

    $default  reduce using rule 278 ($@11)

    $@11  go to state 1138


State 1060

  282 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' . $@13 expr

    $default  reduce using rule 281 ($@13)

    $@13  go to state 1139


State 1061

  285 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 284 ($@15)

    $@15  go to state 1140


State 1062

  415 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  416     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1141


State 1063

  452 expr_mtag: "$c" '(' expr ')' '(' . ')'
  453          | "$c" '(' expr ')' '(' . expr_list ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    ')'                               shift, and go to state 1142
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1143
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 806
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1064

  293 expr_list: expr_list . ',' expr
  722 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 1022
    ';'  shift, and go to state 1144


State 1065

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  682 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  683                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1145


State 1066

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  679 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 679 (make_struct_fields)


State 1067

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  678 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 678 (make_struct_fields)


State 1068

  687 make_struct_dim: make_struct_dim . ';' make_struct_fields
  705 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 772
    ';'      shift, and go to state 962

    $default  reduce using rule 688 (optional_block)

    optional_block  go to state 1146


State 1069

  704 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 964
    ",]]"  shift, and go to state 965
    ']'    shift, and go to state 966

    optional_trailing_delim_sqr_sqr  go to state 1147


State 1070

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  709 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 709 (make_tuple)


State 1071

  684 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  685                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1148


State 1072

  680 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  681                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 661
    ":="  shift, and go to state 1149
    '='   shift, and go to state 663

    copy_or_move  go to state 1150


State 1073

  680 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  681                   | make_struct_fields . ',' "name" ":=" expr
  684                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  685                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  687 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 961

    $default  reduce using rule 687 (make_struct_dim)


State 1074

  702 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 702 (make_struct_decl)


State 1075

  696 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 696 (optional_trailing_delim_sqr_sqr)


State 1076

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  710 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 710 (make_tuple)


State 1077

  694 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 694 (optional_trailing_semicolon_sqr_sqr)


State 1078

  710 make_tuple: make_tuple . ',' expr
  714 make_dim: make_dim ';' make_tuple .

    ','  shift, and go to state 968

    $default  reduce using rule 714 (make_dim)


State 1079

  293 expr_list: expr_list . ',' expr
  723 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 1022
    ';'  shift, and go to state 1151


State 1080

  687 make_struct_dim: make_struct_dim . ';' make_struct_fields
  707 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"  shift, and go to state 772
    ';'      shift, and go to state 962

    $default  reduce using rule 688 (optional_block)

    optional_block  go to state 1152


State 1081

  700 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 700 (optional_trailing_delim_cur_sqr)


State 1082

  701 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 701 (optional_trailing_delim_cur_sqr)


State 1083

  699 optional_trailing_delim_cur_sqr: '}' . ']'

    ']'  shift, and go to state 1153


State 1084

  706 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 706 (make_struct_decl)


State 1085

  692 optional_trailing_semicolon_cur_sqr: '}' ']' .

    $default  reduce using rule 692 (optional_trailing_semicolon_cur_sqr)


State 1086

  240 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' . $@7 expr

    $default  reduce using rule 239 ($@7)

    $@7  go to state 1154


State 1087

   27 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 27 (string_builder_body)


State 1088

   30 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 30 (reader_character_sequence)


State 1089

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  347 func_addr_name: "$i" '(' expr . ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1155


State 1090

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  461          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1156


State 1091

  351 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options . '>' $@19 func_addr_name
  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '>'         shift, and go to state 1157
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353


State 1092

  354 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list . optional_function_type '>' $@21 func_addr_name

    ':'  shift, and go to state 371

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1158


State 1093

  342 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1159


State 1094

  343 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'

    "$f"    shift, and go to state 773
    "name"  shift, and go to state 990

    make_struct_fields  go to state 1160


State 1095

  293 expr_list: expr_list ',' expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 293 (expr_list)


State 1096

  302 capture_entry: "<-" "name" .

    $default  reduce using rule 302 (capture_entry)


State 1097

  303 capture_entry: ":=" "name" .

    $default  reduce using rule 303 (capture_entry)


State 1098

  301 capture_entry: '=' "name" .

    $default  reduce using rule 301 (capture_entry)


State 1099

  300 capture_entry: '&' "name" .

    $default  reduce using rule 300 (capture_entry)


State 1100

  305 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 994
    ":="  shift, and go to state 995
    '='   shift, and go to state 996
    '&'   shift, and go to state 997

    capture_entry  go to state 1161


State 1101

  307 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1162


State 1102

  309 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 1163
    '{'   shift, and go to state 312

    expression_block       go to state 1164
    block_or_simple_block  go to state 1165


State 1103

  421 expr: expr "is" "type" '<' $@24 . type_declaration_no_options '>' $@25

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 1166


State 1104

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  460          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1167


State 1105

  427 expr: expr "as" "type" '<' $@26 . type_declaration '>' $@27

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 1168


State 1106

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  458          | expr "as" "$f" '(' expr . ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1169


State 1107

  344 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 344 (expr_method_call)


State 1108

  293 expr_list: expr_list . ',' expr
  345 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1022
    ')'  shift, and go to state 1170


State 1109

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  455          | expr "?." "$f" '(' expr . ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1171


State 1110

  432 expr: expr '?' "as" "type" '<' . $@28 type_declaration '>' $@29

    $default  reduce using rule 430 ($@28)

    $@28  go to state 1172


State 1111

  459 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1173
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1112

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  418     | expr '?' expr ':' expr .
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 418 (expr)


State 1113

  457 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1174
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1114

  404 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 404 (expr)


State 1115

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  454          | expr '.' "$f" '(' expr . ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1175


State 1116

  456 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1176
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1117

  402 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 402 (expr)


State 1118

  359 expr_field: expr '.' $@22 error $@23 .

    $default  reduce using rule 359 (expr_field)


State 1119

  563 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 563 (variable_name_with_pos_list)


State 1120

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  500 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 500 (variable_declaration)


State 1121

   71 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 312

    expression_block  go to state 1177


State 1122

   76 expression_with_alias: "assume" "name" '=' $@4 expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 76 (expression_with_alias)


State 1123

  212 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 212 (expression_block)


State 1124

   56 expression_else: "else" expression_block .

    $default  reduce using rule 56 (expression_else)


State 1125

   57 expression_else: elif_or_static_elif expr . expression_block expression_else
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    '{'    shift, and go to state 312

    expression_block  go to state 1178


State 1126

   62 expression_else_one_liner: "else" . $@2 expression_if_one_liner

    $default  reduce using rule 61 ($@2)

    $@2  go to state 1179


State 1127

   70 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner . ';'

    ';'  shift, and go to state 1180


State 1128

  482 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 482 (struct_variable_declaration_list)


State 1129

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@31 function_declaration_header ';'

    "const"  shift, and go to state 1181

    $default  reduce using rule 467 (optional_constant)

    optional_constant  go to state 1182


State 1130

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@32 function_declaration_header expression_block

    "override"  shift, and go to state 1131
    "sealed"    shift, and go to state 1132

    $default  reduce using rule 464 (optional_override)

    optional_override  go to state 1183


State 1131

  465 optional_override: "override" .

    $default  reduce using rule 465 (optional_override)


State 1132

  466 optional_override: "sealed" .

    $default  reduce using rule 466 (optional_override)


State 1133

  474 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1044
    "private"  shift, and go to state 1045

    $default  reduce using rule 469 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1184


State 1134

  252 new_type_declaration: '<' $@8 type_declaration '>' $@9 .

    $default  reduce using rule 252 (new_type_declaration)


State 1135

  290 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1185
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1136

  291 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 1186


State 1137

  288 expr_type_decl: "type" '<' $@16 type_declaration '>' $@17 .

    $default  reduce using rule 288 (expr_type_decl)


State 1138

  279 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1187
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1139

  282 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1188
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1140

  285 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1189
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1141

  415 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  416     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    ')'                               shift, and go to state 1190
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1191
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1142

  452 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 452 (expr_mtag)


State 1143

  293 expr_list: expr_list . ',' expr
  453 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1022
    ')'  shift, and go to state 1192


State 1144

  722 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1193
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1145

  682 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  683                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 661
    ":="  shift, and go to state 1194
    '='   shift, and go to state 663

    copy_or_move  go to state 1195


State 1146

  705 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 964
    ",]]"  shift, and go to state 965
    ']'    shift, and go to state 966

    optional_trailing_delim_sqr_sqr  go to state 1196


State 1147

  704 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 704 (make_struct_decl)


State 1148

  684 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  685                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1197
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1149

  681 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1198
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1150

  680 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1199
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1151

  723 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1200
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1152

  707 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    ";}]"  shift, and go to state 1081
    ",}]"  shift, and go to state 1082
    '}'    shift, and go to state 1083

    optional_trailing_delim_cur_sqr  go to state 1201


State 1153

  699 optional_trailing_delim_cur_sqr: '}' ']' .

    $default  reduce using rule 699 (optional_trailing_delim_cur_sqr)


State 1154

  240 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1202
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1155

  347 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 347 (func_addr_name)


State 1156

  461 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 461 (expr_mtag)


State 1157

  351 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' . $@19 func_addr_name

    $default  reduce using rule 350 ($@19)

    $@19  go to state 1203


State 1158

  354 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type . '>' $@21 func_addr_name

    '>'  shift, and go to state 1204


State 1159

  342 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 342 (expr_named_call)


State 1160

  343 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  680 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  681                   | make_struct_fields . ',' "name" ":=" expr
  684                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  685                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 961
    ']'  shift, and go to state 1205


State 1161

  305 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 305 (capture_list)


State 1162

  307 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 307 (optional_capture_list)


State 1163

  295 block_or_simple_block: "=>" . expr
  296                      | "=>" . "<-" expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "<-"                              shift, and go to state 1206
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1207
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1164

  294 block_or_simple_block: expression_block .

    $default  reduce using rule 294 (block_or_simple_block)


State 1165

  309 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 309 (expr_block)


State 1166

  421 expr: expr "is" "type" '<' $@24 type_declaration_no_options . '>' $@25
  612 type_declaration_no_options: type_declaration_no_options . '[' expr ']'
  613                            | type_declaration_no_options . '[' ']'
  614                            | type_declaration_no_options . '-' '[' ']'
  615                            | type_declaration_no_options . "explicit"
  616                            | type_declaration_no_options . "const"
  617                            | type_declaration_no_options . '-' "const"
  618                            | type_declaration_no_options . '&'
  619                            | type_declaration_no_options . '-' '&'
  620                            | type_declaration_no_options . '#'
  621                            | type_declaration_no_options . "implicit"
  622                            | type_declaration_no_options . '-' '#'
  623                            | type_declaration_no_options . "==" "const"
  624                            | type_declaration_no_options . "==" '&'
  625                            | type_declaration_no_options . '?'
  629                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 344
    "implicit"  shift, and go to state 345
    "explicit"  shift, and go to state 346
    "=="        shift, and go to state 347
    "??"        shift, and go to state 348
    '?'         shift, and go to state 349
    '&'         shift, and go to state 350
    '>'         shift, and go to state 1208
    '-'         shift, and go to state 351
    '['         shift, and go to state 352
    '#'         shift, and go to state 353


State 1167

  460 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 460 (expr_mtag)


State 1168

  427 expr: expr "as" "type" '<' $@26 type_declaration . '>' $@27
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 1209


State 1169

  458 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 1170

  345 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 345 (expr_method_call)


State 1171

  455 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1172

  432 expr: expr '?' "as" "type" '<' $@28 . type_declaration '>' $@29

    "array"      shift, and go to state 208
    "table"      shift, and go to state 209
    "iterator"   shift, and go to state 210
    "smart_ptr"  shift, and go to state 211
    "bool"       shift, and go to state 212
    "void"       shift, and go to state 213
    "string"     shift, and go to state 214
    "auto"       shift, and go to state 215
    "int"        shift, and go to state 216
    "int2"       shift, and go to state 217
    "int3"       shift, and go to state 218
    "int4"       shift, and go to state 219
    "uint"       shift, and go to state 220
    "bitfield"   shift, and go to state 221
    "uint2"      shift, and go to state 222
    "uint3"      shift, and go to state 223
    "uint4"      shift, and go to state 224
    "float"      shift, and go to state 225
    "float2"     shift, and go to state 226
    "float3"     shift, and go to state 227
    "float4"     shift, and go to state 228
    "range"      shift, and go to state 229
    "urange"     shift, and go to state 230
    "range64"    shift, and go to state 231
    "urange64"   shift, and go to state 232
    "block"      shift, and go to state 233
    "int64"      shift, and go to state 234
    "uint64"     shift, and go to state 235
    "double"     shift, and go to state 236
    "function"   shift, and go to state 237
    "lambda"     shift, and go to state 238
    "int8"       shift, and go to state 239
    "uint8"      shift, and go to state 240
    "int16"      shift, and go to state 241
    "uint16"     shift, and go to state 242
    "tuple"      shift, and go to state 243
    "variant"    shift, and go to state 244
    "::"         shift, and go to state 52
    "$t"         shift, and go to state 245
    "name"       shift, and go to state 53

    name_in_namespace            go to state 246
    basic_type_declaration       go to state 247
    structure_type_declaration   go to state 248
    auto_type_declaration        go to state 249
    bitfield_type_declaration    go to state 250
    type_declaration_no_options  go to state 251
    type_declaration             go to state 1210


State 1173

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  459          | expr '?' "as" "$f" '(' expr . ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1211


State 1174

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  457          | expr '.' "?." "$f" '(' expr . ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1212


State 1175

  454 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1176

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  456          | expr '.' '.' "$f" '(' expr . ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1213


State 1177

   71 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 71 (expression_for_loop)


State 1178

   57 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1031
    "elif"         shift, and go to state 1032
    "static_elif"  shift, and go to state 1033

    $default  reduce using rule 55 (expression_else)

    elif_or_static_elif  go to state 1034
    expression_else      go to state 1214


State 1179

   62 expression_else_one_liner: "else" $@2 . expression_if_one_liner

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "return"                          shift, and go to state 1215
    "null"                            shift, and go to state 408
    "break"                           shift, and go to state 501
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "continue"                        shift, and go to state 506
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "yield"                           shift, and go to state 1216
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder             go to state 447
    expr_reader                go to state 448
    expression_if_one_liner    go to state 1217
    expression_block           go to state 449
    expression_keyword         go to state 450
    name_in_namespace          go to state 451
    expr_new                   go to state 452
    expression_break           go to state 1218
    expression_continue        go to state 1219
    expression_return_no_pipe  go to state 1220
    expression_yield_no_pipe   go to state 1221
    expr_cast                  go to state 453
    expr_type_decl             go to state 454
    expr_type_info             go to state 455
    block_or_lambda            go to state 456
    expr_block                 go to state 457
    expr_numeric_const         go to state 458
    expr_named_call            go to state 459
    expr_method_call           go to state 460
    func_addr_expr             go to state 461
    expr_field                 go to state 462
    expr                       go to state 1222
    expr_mtag                  go to state 464
    basic_type_declaration     go to state 465
    make_decl                  go to state 466
    make_struct_decl           go to state 467
    make_dim_decl              go to state 468
    make_table_decl            go to state 469
    array_comprehension        go to state 470


State 1180

   70 expression_if_then_else: expression_if_one_liner "if" $@3 expr expression_else_one_liner ';' .

    $default  reduce using rule 70 (expression_if_then_else)


State 1181

  468 optional_constant: "const" .

    $default  reduce using rule 468 (optional_constant)


State 1182

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@31 function_declaration_header ';'

    $default  reduce using rule 478 ($@31)

    $@31  go to state 1223


State 1183

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@32 function_declaration_header expression_block

    "const"  shift, and go to state 1181

    $default  reduce using rule 467 (optional_constant)

    optional_constant  go to state 1224


State 1184

  474 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 488
    "name"  shift, and go to state 489

    variable_declaration         go to state 1225
    variable_name_with_pos_list  go to state 491


State 1185

  290 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1226


State 1186

  291 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 1227


State 1187

  279 expr_cast: "cast" '<' $@10 type_declaration_no_options '>' $@11 expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 279 (expr_cast)


State 1188

  282 expr_cast: "upcast" '<' $@12 type_declaration_no_options '>' $@13 expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 282 (expr_cast)


State 1189

  285 expr_cast: "reinterpret" '<' $@14 type_declaration_no_options '>' $@15 expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 285 (expr_cast)


State 1190

  415 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 415 (expr)


State 1191

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  416     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1228


State 1192

  453 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1193

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  722 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ';'    shift, and go to state 1229

    $default  reduce using rule 720 (array_comprehension_where)

    array_comprehension_where  go to state 1230


State 1194

  683 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1231
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1195

  682 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1232
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1196

  705 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 705 (make_struct_decl)


State 1197

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  684 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  685                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1233


State 1198

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  681 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 681 (make_struct_fields)


State 1199

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  680 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 680 (make_struct_fields)


State 1200

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  723 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ';'    shift, and go to state 1229

    $default  reduce using rule 720 (array_comprehension_where)

    array_comprehension_where  go to state 1234


State 1201

  707 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 707 (make_struct_decl)


State 1202

  240 expression_keyword: "keyword" '<' $@6 type_declaration_no_options '>' $@7 expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 240 (expression_keyword)


State 1203

  351 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 . func_addr_name

    "::"    shift, and go to state 52
    "$i"    shift, and go to state 798
    "name"  shift, and go to state 53

    name_in_namespace  go to state 801
    func_addr_name     go to state 1235


State 1204

  354 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' . $@21 func_addr_name

    $default  reduce using rule 353 ($@21)

    $@21  go to state 1236


State 1205

  343 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1237


State 1206

  296 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1238
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1207

  295 block_or_simple_block: "=>" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    ".."  error (nonassociative)

    $default  reduce using rule 295 (block_or_simple_block)


State 1208

  421 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' . $@25

    $default  reduce using rule 420 ($@25)

    $@25  go to state 1239


State 1209

  427 expr: expr "as" "type" '<' $@26 type_declaration '>' . $@27

    $default  reduce using rule 426 ($@27)

    $@27  go to state 1240


State 1210

  432 expr: expr '?' "as" "type" '<' $@28 type_declaration . '>' $@29
  667 type_declaration: type_declaration . '|' type_declaration_no_options
  668                 | type_declaration . '|' '#'

    '|'  shift, and go to state 354
    '>'  shift, and go to state 1241


State 1211

  459 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 459 (expr_mtag)


State 1212

  457 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 1213

  456 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1214

   57 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 57 (expression_else)


State 1215

  260 expression_return_no_pipe: "return" .
  261                          | "return" . expr
  262                          | "return" . "<-" expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "<-"                              shift, and go to state 1242
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    $default  reduce using rule 260 (expression_return_no_pipe)

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1243
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1216

  266 expression_yield_no_pipe: "yield" . expr
  267                         | "yield" . "<-" expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "<-"                              shift, and go to state 1244
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1245
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1217

   62 expression_else_one_liner: "else" $@2 expression_if_one_liner .

    $default  reduce using rule 62 (expression_else_one_liner)


State 1218

   66 expression_if_one_liner: expression_break .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1219

   67 expression_if_one_liner: expression_continue .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1220

   64 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1221

   65 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1222

   63 expression_if_one_liner: expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 63 (expression_if_one_liner)


State 1223

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 . function_declaration_header ';'

    "operator"  shift, and go to state 164
    "bool"      shift, and go to state 165
    "string"    shift, and go to state 166
    "int"       shift, and go to state 167
    "int2"      shift, and go to state 168
    "int3"      shift, and go to state 169
    "int4"      shift, and go to state 170
    "uint"      shift, and go to state 171
    "uint2"     shift, and go to state 172
    "uint3"     shift, and go to state 173
    "uint4"     shift, and go to state 174
    "float"     shift, and go to state 175
    "float2"    shift, and go to state 176
    "float3"    shift, and go to state 177
    "float4"    shift, and go to state 178
    "range"     shift, and go to state 179
    "urange"    shift, and go to state 180
    "range64"   shift, and go to state 181
    "urange64"  shift, and go to state 182
    "int64"     shift, and go to state 183
    "uint64"    shift, and go to state 184
    "double"    shift, and go to state 185
    "int8"      shift, and go to state 186
    "uint8"     shift, and go to state 187
    "int16"     shift, and go to state 188
    "uint16"    shift, and go to state 189
    "++"        shift, and go to state 190
    "--"        shift, and go to state 191
    "name"      shift, and go to state 192

    function_name                go to state 193
    function_declaration_header  go to state 1246


State 1224

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@32 function_declaration_header expression_block

    $default  reduce using rule 480 ($@32)

    $@32  go to state 1247


State 1225

  474 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 474 (structure_variable_declaration)


State 1226

  290 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 290 (expr_type_info)


State 1227

  291 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1248
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1228

  416 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 416 (expr)


State 1229

  721 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1249


State 1230

  722 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1250


State 1231

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  683 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 683 (make_struct_fields)


State 1232

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  682 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 682 (make_struct_fields)


State 1233

  684 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  685                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 661
    ":="  shift, and go to state 1251
    '='   shift, and go to state 663

    copy_or_move  go to state 1252


State 1234

  723 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1253


State 1235

  351 func_addr_expr: '@' '@' '<' $@18 type_declaration_no_options '>' $@19 func_addr_name .

    $default  reduce using rule 351 (func_addr_expr)


State 1236

  354 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 . func_addr_name

    "::"    shift, and go to state 52
    "$i"    shift, and go to state 798
    "name"  shift, and go to state 53

    name_in_namespace  go to state 801
    func_addr_name     go to state 1254


State 1237

  343 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 343 (expr_named_call)


State 1238

  296 block_or_simple_block: "=>" "<-" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 296 (block_or_simple_block)


State 1239

  421 expr: expr "is" "type" '<' $@24 type_declaration_no_options '>' $@25 .

    $default  reduce using rule 421 (expr)


State 1240

  427 expr: expr "as" "type" '<' $@26 type_declaration '>' $@27 .

    $default  reduce using rule 427 (expr)


State 1241

  432 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' . $@29

    $default  reduce using rule 431 ($@29)

    $@29  go to state 1255


State 1242

  262 expression_return_no_pipe: "return" "<-" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1256
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1243

  261 expression_return_no_pipe: "return" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 261 (expression_return_no_pipe)


State 1244

  267 expression_yield_no_pipe: "yield" "<-" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1257
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1245

  266 expression_yield_no_pipe: "yield" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 266 (expression_yield_no_pipe)


State 1246

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header . ';'

    ';'  shift, and go to state 1258


State 1247

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 . function_declaration_header expression_block

    "operator"  shift, and go to state 164
    "bool"      shift, and go to state 165
    "string"    shift, and go to state 166
    "int"       shift, and go to state 167
    "int2"      shift, and go to state 168
    "int3"      shift, and go to state 169
    "int4"      shift, and go to state 170
    "uint"      shift, and go to state 171
    "uint2"     shift, and go to state 172
    "uint3"     shift, and go to state 173
    "uint4"     shift, and go to state 174
    "float"     shift, and go to state 175
    "float2"    shift, and go to state 176
    "float3"    shift, and go to state 177
    "float4"    shift, and go to state 178
    "range"     shift, and go to state 179
    "urange"    shift, and go to state 180
    "range64"   shift, and go to state 181
    "urange64"  shift, and go to state 182
    "int64"     shift, and go to state 183
    "uint64"    shift, and go to state 184
    "double"    shift, and go to state 185
    "int8"      shift, and go to state 186
    "uint8"     shift, and go to state 187
    "int16"     shift, and go to state 188
    "uint16"    shift, and go to state 189
    "++"        shift, and go to state 190
    "--"        shift, and go to state 191
    "name"      shift, and go to state 192

    function_name                go to state 193
    function_declaration_header  go to state 1259


State 1248

  291 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652
    ')'    shift, and go to state 1260


State 1249

  721 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1261
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1250

  722 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1262


State 1251

  685 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1263
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1252

  684 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "true"                            shift, and go to state 403
    "false"                           shift, and go to state 404
    "new"                             shift, and go to state 405
    "typeinfo"                        shift, and go to state 406
    "type"                            shift, and go to state 407
    "null"                            shift, and go to state 408
    "deref"                           shift, and go to state 409
    "cast"                            shift, and go to state 410
    "upcast"                          shift, and go to state 411
    "addr"                            shift, and go to state 412
    "reinterpret"                     shift, and go to state 413
    "unsafe"                          shift, and go to state 414
    "bool"                            shift, and go to state 212
    "void"                            shift, and go to state 213
    "string"                          shift, and go to state 214
    "int"                             shift, and go to state 216
    "int2"                            shift, and go to state 217
    "int3"                            shift, and go to state 218
    "int4"                            shift, and go to state 219
    "uint"                            shift, and go to state 220
    "bitfield"                        shift, and go to state 415
    "uint2"                           shift, and go to state 222
    "uint3"                           shift, and go to state 223
    "uint4"                           shift, and go to state 224
    "float"                           shift, and go to state 225
    "float2"                          shift, and go to state 226
    "float3"                          shift, and go to state 227
    "float4"                          shift, and go to state 228
    "range"                           shift, and go to state 229
    "urange"                          shift, and go to state 230
    "range64"                         shift, and go to state 231
    "urange64"                        shift, and go to state 232
    "int64"                           shift, and go to state 234
    "uint64"                          shift, and go to state 235
    "double"                          shift, and go to state 236
    "int8"                            shift, and go to state 239
    "uint8"                           shift, and go to state 240
    "int16"                           shift, and go to state 241
    "uint16"                          shift, and go to state 242
    "generator"                       shift, and go to state 416
    "++"                              shift, and go to state 417
    "--"                              shift, and go to state 418
    "::"                              shift, and go to state 52
    "$$"                              shift, and go to state 419
    "$i"                              shift, and go to state 420
    "$v"                              shift, and go to state 421
    "$b"                              shift, and go to state 422
    "$a"                              shift, and go to state 423
    "$c"                              shift, and go to state 424
    "..."                             shift, and go to state 425
    "[["                              shift, and go to state 426
    "[{"                              shift, and go to state 427
    "{{"                              shift, and go to state 428
    "integer constant"                shift, and go to state 429
    "long integer constant"           shift, and go to state 430
    "unsigned integer constant"       shift, and go to state 431
    "unsigned long integer constant"  shift, and go to state 432
    "unsigned int8 constant"          shift, and go to state 433
    "floating point constant"         shift, and go to state 434
    "double constant"                 shift, and go to state 435
    "name"                            shift, and go to state 53
    "keyword"                         shift, and go to state 436
    "start of the string"             shift, and go to state 437
    '-'                               shift, and go to state 438
    '+'                               shift, and go to state 439
    '*'                               shift, and go to state 440
    '%'                               shift, and go to state 441
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '('                               shift, and go to state 444
    '$'                               shift, and go to state 445
    '@'                               shift, and go to state 446
    '{'                               shift, and go to state 312

    string_builder          go to state 447
    expr_reader             go to state 448
    expression_block        go to state 449
    expression_keyword      go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_block              go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr                    go to state 1264
    expr_mtag               go to state 464
    basic_type_declaration  go to state 465
    make_decl               go to state 466
    make_struct_decl        go to state 467
    make_dim_decl           go to state 468
    make_table_decl         go to state 469
    array_comprehension     go to state 470


State 1253

  723 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1265


State 1254

  354 func_addr_expr: '@' '@' '<' $@20 optional_function_argument_list optional_function_type '>' $@21 func_addr_name .

    $default  reduce using rule 354 (func_addr_expr)


State 1255

  432 expr: expr '?' "as" "type" '<' $@28 type_declaration '>' $@29 .

    $default  reduce using rule 432 (expr)


State 1256

  262 expression_return_no_pipe: "return" "<-" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 262 (expression_return_no_pipe)


State 1257

  267 expression_yield_no_pipe: "yield" "<-" expr .
  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 267 (expression_yield_no_pipe)


State 1258

  479 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@31 function_declaration_header ';' .

    $default  reduce using rule 479 (struct_variable_declaration_list)


State 1259

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header . expression_block

    '{'  shift, and go to state 312

    expression_block  go to state 1266


State 1260

  291 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 291 (expr_type_info)


State 1261

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  721 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 721 (array_comprehension_where)


State 1262

  722 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 722 (array_comprehension)


State 1263

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  685 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 685 (make_struct_fields)


State 1264

  344 expr_method_call: expr . "->" "name" '(' ')'
  345                 | expr . "->" "name" '(' expr_list ')'
  355 expr_field: expr . '.' "name"
  356           | expr . '.' '.' "name"
  359           | expr . '.' $@22 error $@23
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  417     | expr . "??" expr
  418     | expr . '?' expr ':' expr
  421     | expr . "is" "type" '<' $@24 type_declaration_no_options '>' $@25
  422     | expr . "is" basic_type_declaration
  423     | expr . "is" "name"
  424     | expr . "as" "name"
  427     | expr . "as" "type" '<' $@26 type_declaration '>' $@27
  428     | expr . "as" basic_type_declaration
  429     | expr . '?' "as" "name"
  432     | expr . '?' "as" "type" '<' $@28 type_declaration '>' $@29
  433     | expr . '?' "as" basic_type_declaration
  441     | expr . "<|" expr
  442     | expr . "|>" expr
  454 expr_mtag: expr . '.' "$f" '(' expr ')'
  455          | expr . "?." "$f" '(' expr ')'
  456          | expr . '.' '.' "$f" '(' expr ')'
  457          | expr . '.' "?." "$f" '(' expr ')'
  458          | expr . "as" "$f" '(' expr ')'
  459          | expr . '?' "as" "$f" '(' expr ')'
  460          | expr . "is" "$f" '(' expr ')'
  684 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 618
    "as"   shift, and go to state 619
    "<<"   shift, and go to state 620
    ">>"   shift, and go to state 621
    "++"   shift, and go to state 622
    "--"   shift, and go to state 623
    "<="   shift, and go to state 624
    ">="   shift, and go to state 625
    "=="   shift, and go to state 626
    "!="   shift, and go to state 627
    "->"   shift, and go to state 628
    "??"   shift, and go to state 629
    "?."   shift, and go to state 630
    "?["   shift, and go to state 631
    "<|"   shift, and go to state 632
    "|>"   shift, and go to state 633
    "<<<"  shift, and go to state 634
    ">>>"  shift, and go to state 635
    "&&"   shift, and go to state 636
    "||"   shift, and go to state 637
    "^^"   shift, and go to state 638
    ".."   shift, and go to state 639
    '?'    shift, and go to state 640
    '|'    shift, and go to state 641
    '^'    shift, and go to state 642
    '&'    shift, and go to state 643
    '<'    shift, and go to state 644
    '>'    shift, and go to state 645
    '-'    shift, and go to state 646
    '+'    shift, and go to state 647
    '*'    shift, and go to state 648
    '/'    shift, and go to state 649
    '%'    shift, and go to state 650
    '.'    shift, and go to state 651
    '['    shift, and go to state 652

    $default  reduce using rule 684 (make_struct_fields)


State 1265

  723 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 723 (array_comprehension)


State 1266

  481 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@32 function_declaration_header expression_block .

    $default  reduce using rule 481 (struct_variable_declaration_list)

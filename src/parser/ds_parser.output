Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 51 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce
State 154 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 1 shift/reduce
State 359 conflicts: 2 shift/reduce
State 423 conflicts: 7 shift/reduce
State 591 conflicts: 3 reduce/reduce
State 608 conflicts: 2 shift/reduce
State 919 conflicts: 6 shift/reduce
State 921 conflicts: 6 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program bitfield_alias_declaration
   13        | program ';'

   14 optional_public_or_private_module: %empty
   15                                  | "public"
   16                                  | "private"

   17 module_name: '$'
   18            | "name"

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   20 character_sequence: STRING_CHARACTER
   21                   | STRING_CHARACTER_ESC
   22                   | character_sequence STRING_CHARACTER
   23                   | character_sequence STRING_CHARACTER_ESC

   24 string_constant: "start of the string" character_sequence "end of the string"

   25 string_builder_body: %empty
   26                    | string_builder_body character_sequence
   27                    | string_builder_body "{" expr "}"

   28 string_builder: "start of the string" string_builder_body "end of the string"

   29 reader_character_sequence: STRING_CHARACTER
   30                          | reader_character_sequence STRING_CHARACTER

   31 $@1: %empty

   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   33 options_declaration: "options" annotation_argument_list

   34 require_declaration: "require" require_module

   35 require_module_name: "name"
   36                    | '%' require_module_name
   37                    | require_module_name '.' "name"
   38                    | require_module_name '/' "name"

   39 require_module: require_module_name is_public_module
   40               | require_module_name "as" "name" is_public_module

   41 is_public_module: %empty
   42                 | "public"

   43 expect_declaration: "expect" expect_list

   44 expect_list: expect_error
   45            | expect_list ',' expect_error

   46 expect_error: "integer constant"
   47             | "integer constant" ':' "integer constant"

   48 expression_label: "label" "integer constant" ':'

   49 expression_goto: "goto" "label" "integer constant"
   50                | "goto" expr

   51 elif_or_static_elif: "elif"
   52                    | "static_elif"

   53 expression_else: %empty
   54                | "else" expression_block
   55                | elif_or_static_elif expr expression_block expression_else

   56 if_or_static_if: "if"
   57                | "static_if"

   58 expression_if_then_else: if_or_static_if expr expression_block expression_else

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block

   60 expression_unsafe: "unsafe" expression_block

   61 expression_while_loop: "while" expr expression_block

   62 expression_with: "with" expr expression_block

   63 $@2: %empty

   64 expression_with_alias: "assume" "name" '=' $@2 expr

   65 annotation_argument_value: string_constant
   66                          | "name"
   67                          | "integer constant"
   68                          | "floating point constant"
   69                          | "true"
   70                          | "false"

   71 annotation_argument_value_list: annotation_argument_value
   72                               | annotation_argument_value_list ',' annotation_argument_value

   73 annotation_argument_name: "name"
   74                         | "type"
   75                         | "in"

   76 annotation_argument: annotation_argument_name '=' string_constant
   77                    | annotation_argument_name '=' "name"
   78                    | annotation_argument_name '=' "integer constant"
   79                    | annotation_argument_name '=' "floating point constant"
   80                    | annotation_argument_name '=' "true"
   81                    | annotation_argument_name '=' "false"
   82                    | annotation_argument_name
   83                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   84 annotation_argument_list: annotation_argument
   85                         | annotation_argument_list ',' annotation_argument

   86 annotation_declaration_name: name_in_namespace
   87                            | "require"
   88                            | "private"

   89 annotation_declaration: annotation_declaration_name
   90                       | annotation_declaration_name '(' annotation_argument_list ')'

   91 annotation_list: annotation_declaration
   92                | annotation_list ',' annotation_declaration

   93 optional_annotation_list: %empty
   94                         | '[' annotation_list ']'

   95 optional_function_argument_list: %empty
   96                                | '(' ')'
   97                                | '(' function_argument_list ')'

   98 optional_function_type: %empty
   99                       | ':' type_declaration

  100 function_name: "name"
  101              | "operator" '!'
  102              | "operator" '~'
  103              | "operator" "+="
  104              | "operator" "-="
  105              | "operator" "*="
  106              | "operator" "/="
  107              | "operator" "%="
  108              | "operator" "&="
  109              | "operator" "|="
  110              | "operator" "^="
  111              | "operator" "&&="
  112              | "operator" "||="
  113              | "operator" "^^="
  114              | "operator" "&&"
  115              | "operator" "||"
  116              | "operator" "^^"
  117              | "operator" '+'
  118              | "operator" '-'
  119              | "operator" '*'
  120              | "operator" '/'
  121              | "operator" '%'
  122              | "operator" '<'
  123              | "operator" '>'
  124              | "operator" ".."
  125              | "operator" "=="
  126              | "operator" "!="
  127              | "operator" "<="
  128              | "operator" ">="
  129              | "operator" '&'
  130              | "operator" '|'
  131              | "operator" '^'
  132              | "++" "operator"
  133              | "--" "operator"
  134              | "operator" "++"
  135              | "operator" "--"
  136              | "operator" "<<"
  137              | "operator" ">>"
  138              | "operator" "<<="
  139              | "operator" ">>="
  140              | "operator" "<<<"
  141              | "operator" ">>>"
  142              | "operator" "<<<="
  143              | "operator" ">>>="
  144              | "operator" '[' ']'
  145              | "operator" "?[" ']'
  146              | "operator" '.'
  147              | "operator" "?."
  148              | "operator" ":="
  149              | "operator" "delete"

  150 global_function_declaration: optional_annotation_list "def" function_declaration

  151 optional_public_or_private_function: %empty
  152                                    | "private"
  153                                    | "public"

  154 function_declaration_header: function_name optional_function_argument_list optional_function_type

  155 $@3: %empty

  156 function_declaration: optional_public_or_private_function $@3 function_declaration_header expression_block

  157 expression_block: '{' expressions '}'
  158                 | '{' expressions '}' "finally" '{' expressions '}'

  159 expression_any: ';'
  160               | expr_pipe
  161               | expr_assign_pipe
  162               | expr_assign ';'
  163               | expression_delete ';'
  164               | expression_let
  165               | expression_while_loop
  166               | expression_unsafe
  167               | expression_with
  168               | expression_with_alias
  169               | expression_for_loop
  170               | expression_break ';'
  171               | expression_continue ';'
  172               | expression_return
  173               | expression_yield
  174               | expression_if_then_else
  175               | expression_try_catch
  176               | expression_label ';'
  177               | expression_goto ';'
  178               | "pass" ';'

  179 expressions: %empty
  180            | expressions expression_any
  181            | expressions error

  182 expr_pipe: expr_assign " <|" expr_block
  183          | "@ <|" expr_block
  184          | "@@ <|" expr_block

  185 name_in_namespace: "name"
  186                  | "name" "::" "name"
  187                  | "::" "name"

  188 expression_delete: "delete" expr

  189 expr_new: "new" type_declaration
  190         | "new" type_declaration '(' ')'
  191         | "new" type_declaration '(' expr_list ')'
  192         | "new" make_decl

  193 expression_break: "break"

  194 expression_continue: "continue"

  195 expression_return: "return" ';'
  196                  | "return" expr ';'
  197                  | "return" "<-" expr ';'
  198                  | "return" expr_pipe
  199                  | "return" "<-" expr_pipe

  200 expression_yield: "yield" expr ';'
  201                 | "yield" "<-" expr ';'
  202                 | "yield" expr_pipe
  203                 | "yield" "<-" expr_pipe

  204 expression_try_catch: "try" expression_block "recover" expression_block

  205 kwd_let: "let"
  206        | "var"

  207 expression_let: kwd_let let_variable_declaration

  208 $@4: %empty

  209 $@5: %empty

  210 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 expr

  211 $@6: %empty

  212 $@7: %empty

  213 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 expr

  214 $@8: %empty

  215 $@9: %empty

  216 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 expr

  217 $@10: %empty

  218 $@11: %empty

  219 expr_type_decl: "type" '<' $@10 type_declaration '>' $@11

  220 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  221               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  222               | "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

  223 expr_list: expr
  224          | expr_list ',' expr

  225 block_or_simple_block: expression_block
  226                      | "=>" expr
  227                      | "=>" "<-" expr

  228 block_or_lambda: '$'
  229                | '@'
  230                | '@' '@'

  231 capture_entry: '&' "name"
  232              | '=' "name"
  233              | "<-" "name"
  234              | ":=" "name"

  235 capture_list: capture_entry
  236             | capture_list ',' capture_entry

  237 optional_capture_list: %empty
  238                      | "[[" capture_list ']' ']'

  239 expr_block: expression_block
  240           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  241 expr_numeric_const: "integer constant"
  242                   | "unsigned integer constant"
  243                   | "long integer constant"
  244                   | "unsigned long integer constant"
  245                   | "floating point constant"
  246                   | "double constant"

  247 expr_assign: expr
  248            | expr '=' expr
  249            | expr "<-" expr
  250            | expr ":=" expr
  251            | expr "&=" expr
  252            | expr "|=" expr
  253            | expr "^=" expr
  254            | expr "&&=" expr
  255            | expr "||=" expr
  256            | expr "^^=" expr
  257            | expr "+=" expr
  258            | expr "-=" expr
  259            | expr "*=" expr
  260            | expr "/=" expr
  261            | expr "%=" expr
  262            | expr "<<=" expr
  263            | expr ">>=" expr
  264            | expr "<<<=" expr
  265            | expr ">>>=" expr

  266 expr_assign_pipe: expr '=' "@ <|" expr
  267                 | expr '=' "@@ <|" expr
  268                 | expr "<-" "@ <|" expr
  269                 | expr "<-" "@@ <|" expr

  270 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'

  271 expr_method_call: expr "->" "name" '(' ')'
  272                 | expr "->" "name" '(' expr_list ')'

  273 func_addr_expr: '@' '@' name_in_namespace

  274 $@12: %empty

  275 $@13: %empty

  276 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 name_in_namespace

  277 $@14: %empty

  278 $@15: %empty

  279 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

  280 expr_field: expr '.' "name"
  281           | expr '.' '.' "name"

  282 $@16: %empty

  283 $@17: %empty

  284 expr_field: expr '.' $@16 error $@17

  285 expr: "null"
  286     | name_in_namespace
  287     | expr_numeric_const
  288     | expr_reader
  289     | string_builder
  290     | make_decl
  291     | "true"
  292     | "false"
  293     | expr_field
  294     | '!' expr
  295     | '~' expr
  296     | '+' expr
  297     | '-' expr
  298     | expr "<<" expr
  299     | expr ">>" expr
  300     | expr "<<<" expr
  301     | expr ">>>" expr
  302     | expr '+' expr
  303     | expr '-' expr
  304     | expr '*' expr
  305     | expr '/' expr
  306     | expr '%' expr
  307     | expr '<' expr
  308     | expr '>' expr
  309     | expr "==" expr
  310     | expr "!=" expr
  311     | expr "<=" expr
  312     | expr ">=" expr
  313     | expr '&' expr
  314     | expr '|' expr
  315     | expr '^' expr
  316     | expr "&&" expr
  317     | expr "||" expr
  318     | expr "^^" expr
  319     | expr ".." expr
  320     | "++" expr
  321     | "--" expr
  322     | expr "++"
  323     | expr "--"
  324     | '(' expr ')'
  325     | expr '[' expr ']'
  326     | expr '.' '[' expr ']'
  327     | expr "?[" expr ']'
  328     | expr '.' "?[" expr ']'
  329     | expr "?." "name"
  330     | expr '.' "?." "name"
  331     | func_addr_expr
  332     | name_in_namespace '(' ')'
  333     | name_in_namespace '(' expr_list ')'
  334     | basic_type_declaration '(' ')'
  335     | basic_type_declaration '(' expr_list ')'
  336     | '*' expr
  337     | "deref" '(' expr ')'
  338     | "addr" '(' expr ')'
  339     | "generator" '<' type_declaration '>' optional_capture_list '(' ')'
  340     | "generator" '<' type_declaration '>' optional_capture_list '(' expr ')'
  341     | expr "??" expr
  342     | expr '?' expr ':' expr

  343 $@18: %empty

  344 $@19: %empty

  345 expr: expr "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr "is" "name"
  347     | expr "as" "name"
  348     | expr '?' "as" "name"
  349     | expr_type_info
  350     | expr_type_decl
  351     | expr_cast
  352     | expr_new
  353     | expr_method_call
  354     | expr_named_call
  355     | expr_block
  356     | expr "<|" expr
  357     | expr "|>" expr
  358     | name_in_namespace "name"
  359     | "unsafe" '(' expr ')'

  360 optional_field_annotation: %empty
  361                          | "[[" annotation_argument_list ']' ']'

  362 optional_override: %empty
  363                  | "override"
  364                  | "sealed"

  365 optional_constant: %empty
  366                  | "const"

  367 optional_public_or_private_member_variable: %empty
  368                                           | "public"
  369                                           | "private"

  370 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration

  371 struct_variable_declaration_list: %empty

  372 $@20: %empty

  373 struct_variable_declaration_list: struct_variable_declaration_list $@20 structure_variable_declaration ';'

  374 $@21: %empty

  375 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@21 function_declaration_header ';'

  376 $@22: %empty

  377 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@22 function_declaration_header expression_block
  378                                 | struct_variable_declaration_list '[' annotation_list ']' ';'

  379 function_argument_declaration: optional_field_annotation variable_declaration
  380                              | optional_field_annotation "var" variable_declaration

  381 function_argument_list: function_argument_declaration
  382                       | function_argument_list ';' function_argument_declaration

  383 tuple_type: type_declaration
  384           | "name" ':' type_declaration

  385 tuple_type_list: tuple_type
  386                | tuple_type_list ';' tuple_type

  387 variant_type: "name" ':' type_declaration

  388 variant_type_list: variant_type
  389                  | variant_type_list ';' variant_type

  390 copy_or_move: '='
  391             | "<-"

  392 variable_declaration: variable_name_with_pos_list
  393                     | variable_name_with_pos_list '&'
  394                     | variable_name_with_pos_list ':' type_declaration
  395                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  396                     | variable_name_with_pos_list copy_or_move expr
  397                     | variable_name_with_pos_list copy_or_move expr_pipe

  398 copy_or_move_or_clone: '='
  399                      | "<-"
  400                      | ":="

  401 optional_ref: %empty
  402             | '&'

  403 let_variable_declaration: variable_name_with_pos_list ':' type_declaration ';'
  404                         | variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';'
  405                         | variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe
  406                         | variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'
  407                         | variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  408 global_variable_declaration_list: %empty

  409 $@23: %empty

  410 global_variable_declaration_list: global_variable_declaration_list $@23 optional_field_annotation let_variable_declaration

  411 optional_shared: %empty
  412                | "shared"

  413 optional_public_or_private_variable: %empty
  414                                    | "private"
  415                                    | "public"

  416 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  417 $@24: %empty

  418 global_let: kwd_let optional_shared optional_public_or_private_variable $@24 optional_field_annotation let_variable_declaration

  419 enum_list: %empty
  420          | enum_list "name" ';'
  421          | enum_list "name" '=' expr ';'

  422 $@25: %empty

  423 single_alias: "name" $@25 '=' type_declaration

  424 alias_list: single_alias ';'
  425           | alias_list single_alias ';'

  426 alias_declaration: "typedef" '{' alias_list '}'
  427                  | "typedef" single_alias

  428 optional_public_or_private_enum: %empty
  429                                | "private"
  430                                | "public"

  431 enum_name: "name"

  432 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  433                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

  434 optional_structure_parent: %empty
  435                          | ':' name_in_namespace

  436 optional_sealed: %empty
  437                | "sealed"

  438 structure_name: optional_sealed "name" optional_structure_parent

  439 class_or_struct: "class"
  440                | "struct"

  441 optional_public_or_private_structure: %empty
  442                                     | "private"
  443                                     | "public"

  444 $@26: %empty

  445 $@27: %empty

  446 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@26 structure_name $@27 '{' struct_variable_declaration_list '}'

  447 variable_name_with_pos_list: "name"
  448                            | "name" "aka" "name"
  449                            | variable_name_with_pos_list ',' "name"
  450                            | variable_name_with_pos_list ',' "name" "aka" "name"

  451 basic_type_declaration: "bool"
  452                       | "string"
  453                       | "int"
  454                       | "int8"
  455                       | "int16"
  456                       | "int64"
  457                       | "int2"
  458                       | "int3"
  459                       | "int4"
  460                       | "uint"
  461                       | "uint8"
  462                       | "uint16"
  463                       | "uint64"
  464                       | "uint2"
  465                       | "uint3"
  466                       | "uint4"
  467                       | "float"
  468                       | "float2"
  469                       | "float3"
  470                       | "float4"
  471                       | "void"
  472                       | "range"
  473                       | "urange"
  474                       | "double"
  475                       | "bitfield"

  476 enum_basic_type_declaration: "int"
  477                            | "int8"
  478                            | "int16"
  479                            | "uint"
  480                            | "uint8"
  481                            | "uint16"

  482 structure_type_declaration: name_in_namespace

  483 auto_type_declaration: "auto"
  484                      | "auto" '(' "name" ')'

  485 bitfield_bits: "name"
  486              | bitfield_bits ';' "name"

  487 $@28: %empty

  488 $@29: %empty

  489 bitfield_type_declaration: "bitfield" '<' $@28 bitfield_bits '>' $@29

  490 table_type_pair: type_declaration
  491                | type_declaration ';' type_declaration

  492 type_declaration: basic_type_declaration
  493                 | auto_type_declaration
  494                 | bitfield_type_declaration
  495                 | structure_type_declaration
  496                 | type_declaration '[' expr ']'
  497                 | type_declaration '[' ']'
  498                 | type_declaration '-' '[' ']'
  499                 | type_declaration "explicit"
  500                 | type_declaration "const"
  501                 | type_declaration '-' "const"
  502                 | type_declaration '&'
  503                 | type_declaration '-' '&'
  504                 | type_declaration '#'
  505                 | type_declaration "implicit"
  506                 | type_declaration '-' '#'
  507                 | type_declaration '=' "const"
  508                 | type_declaration '?'

  509 $@30: %empty

  510 $@31: %empty

  511 type_declaration: "smart_ptr" '<' $@30 type_declaration '>' $@31
  512                 | type_declaration "??"

  513 $@32: %empty

  514 $@33: %empty

  515 type_declaration: "array" '<' $@32 type_declaration '>' $@33

  516 $@34: %empty

  517 $@35: %empty

  518 type_declaration: "table" '<' $@34 table_type_pair '>' $@35

  519 $@36: %empty

  520 $@37: %empty

  521 type_declaration: "iterator" '<' $@36 type_declaration '>' $@37
  522                 | "block"

  523 $@38: %empty

  524 $@39: %empty

  525 type_declaration: "block" '<' $@38 type_declaration '>' $@39

  526 $@40: %empty

  527 $@41: %empty

  528 type_declaration: "block" '<' $@40 optional_function_argument_list optional_function_type '>' $@41
  529                 | "function"

  530 $@42: %empty

  531 $@43: %empty

  532 type_declaration: "function" '<' $@42 type_declaration '>' $@43

  533 $@44: %empty

  534 $@45: %empty

  535 type_declaration: "function" '<' $@44 optional_function_argument_list optional_function_type '>' $@45
  536                 | "lambda"

  537 $@46: %empty

  538 $@47: %empty

  539 type_declaration: "lambda" '<' $@46 type_declaration '>' $@47

  540 $@48: %empty

  541 $@49: %empty

  542 type_declaration: "lambda" '<' $@48 optional_function_argument_list optional_function_type '>' $@49

  543 $@50: %empty

  544 $@51: %empty

  545 type_declaration: "tuple" '<' $@50 tuple_type_list '>' $@51

  546 $@52: %empty

  547 $@53: %empty

  548 type_declaration: "variant" '<' $@52 variant_type_list '>' $@53

  549 $@54: %empty

  550 $@55: %empty

  551 variant_alias_declaration: "variant" $@54 "name" $@55 '{' variant_type_list ';' '}'

  552 $@56: %empty

  553 bitfield_alias_declaration: "bitfield" $@56 "name" '{' bitfield_bits ';' '}'

  554 make_decl: make_struct_decl
  555          | make_dim_decl
  556          | make_table_decl
  557          | array_comprehension

  558 make_struct_fields: "name" copy_or_move expr
  559                   | "name" ":=" expr
  560                   | make_struct_fields ',' "name" copy_or_move expr
  561                   | make_struct_fields ',' "name" ":=" expr

  562 make_struct_dim: make_struct_fields
  563                | make_struct_dim ';' make_struct_fields

  564 optional_block: %empty
  565               | "where" expr_block

  566 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']'
  567                 | "[[" type_declaration optional_block ']' ']'
  568                 | "[[" type_declaration '(' ')' optional_block ']' ']'
  569                 | "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  570                 | "[{" type_declaration make_struct_dim optional_block '}' ']'
  571                 | "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']'

  572 make_tuple: expr
  573           | make_tuple ',' expr

  574 make_map_tuple: expr "=>" expr
  575               | expr

  576 make_any_tuple: make_tuple
  577               | make_map_tuple

  578 make_dim: make_any_tuple
  579         | make_dim ';' make_any_tuple

  580 make_dim_decl: "[[" type_declaration make_dim ']' ']'
  581              | "[{" type_declaration make_dim '}' ']'

  582 make_table: make_map_tuple
  583           | make_table ';' make_map_tuple

  584 make_table_decl: "{{" make_table '}' '}'

  585 array_comprehension_where: %empty
  586                          | ';' "where" expr

  587 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'
  588                    | "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 101 294
    '#' (35) 504 506
    '$' (36) 17 228
    '%' (37) 32 36 121 306
    '&' (38) 129 231 313 393 402 502 503
    '(' (40) 83 90 96 97 190 191 220 221 222 270 271 272 324 332 333 334 335 337 338 339 340 359 484 568 569 571
    ')' (41) 83 90 96 97 190 191 220 221 222 270 271 272 324 332 333 334 335 337 338 339 340 359 484 568 569 571
    '*' (42) 119 304 336
    '+' (43) 117 296 302
    ',' (44) 45 72 85 92 224 236 449 450 560 561 573
    '-' (45) 118 297 303 498 501 503 506
    '.' (46) 37 146 280 281 284 326 328 330
    '/' (47) 38 120 305
    ':' (58) 47 48 99 342 384 387 394 395 403 404 405 433 435
    ';' (59) 13 59 159 162 163 170 171 176 177 178 195 196 197 200 201 222 373 375 378 382 386 389 403 404 406 420 421 424 425 486 491 551 553 563 579 583 586 587 588
    '<' (60) 122 210 213 216 219 221 222 276 279 307 339 340 345 489 511 515 518 521 525 528 532 535 539 542 545 548
    '=' (61) 64 76 77 78 79 80 81 83 232 248 266 267 390 398 421 423 507
    '>' (62) 123 210 213 216 219 221 222 276 279 308 339 340 345 489 511 515 518 521 525 528 532 535 539 542 545 548
    '?' (63) 342 348 508
    '@' (64) 229 230 273 276 279
    '[' (91) 94 144 270 325 326 378 496 497 498
    ']' (93) 94 144 145 238 270 325 326 327 328 361 378 496 497 498 566 567 568 569 570 571 580 581 587 588
    '^' (94) 131 315
    '{' (123) 157 158 416 426 432 433 446 551 553
    '|' (124) 130 314
    '}' (125) 157 158 416 426 432 433 446 551 553 570 571 581 584 588
    '~' (126) 102 295
    error (256) 181 284
    "lexer error" (258)
    "struct" (259) 440
    "class" (260) 439
    "let" (261) 205
    "def" (262) 150 375 377
    "while" (263) 61
    "if" (264) 56
    "static_if" (265) 57
    "else" (266) 54
    "for" (267) 59 587 588
    "recover" (268) 204
    "true" (269) 69 80 291
    "false" (270) 70 81 292
    "new" (271) 189 190 191 192
    "typeinfo" (272) 220 221 222
    "type" (273) 74 219 345
    "in" (274) 59 75 587 588
    "is" (275) 345 346
    "as" (276) 40 347 348
    "elif" (277) 51
    "static_elif" (278) 52
    "array" (279) 515
    "return" (280) 195 196 197 198 199
    "null" (281) 285
    "break" (282) 193
    "try" (283) 204
    "options" (284) 33
    "table" (285) 518
    "expect" (286) 43
    "const" (287) 366 500 501 507
    "require" (288) 34 87
    "operator" (289) 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149
    "enum" (290) 432 433
    "finally" (291) 158
    "delete" (292) 149 188
    "deref" (293) 337
    "typedef" (294) 426 427
    "with" (295) 62
    "aka" (296) 448 450
    "assume" (297) 64
    "cast" (298) 210
    "override" (299) 363
    "abstract" (300) 375
    "upcast" (301) 213
    "iterator" (302) 521
    "var" (303) 206 380
    "addr" (304) 338
    "continue" (305) 194
    "where" (306) 565 586
    "pass" (307) 178
    "reinterpret" (308) 216
    "module" (309) 19
    "public" (310) 15 42 153 368 415 430 443
    "label" (311) 48 49
    "goto" (312) 49 50
    "implicit" (313) 505
    "explicit" (314) 499
    "shared" (315) 412
    "private" (316) 16 88 152 369 414 429 442
    "smart_ptr" (317) 511
    "unsafe" (318) 60 359
    "bool" (319) 451
    "void" (320) 471
    "string" (321) 452
    "auto" (322) 483 484
    "int" (323) 453 476
    "int2" (324) 457
    "int3" (325) 458
    "int4" (326) 459
    "uint" (327) 460 479
    "bitfield" (328) 475 489 553
    "uint2" (329) 464
    "uint3" (330) 465
    "uint4" (331) 466
    "float" (332) 467
    "float2" (333) 468
    "float3" (334) 469
    "float4" (335) 470
    "range" (336) 472
    "urange" (337) 473
    "block" (338) 522 525 528
    "int64" (339) 456
    "uint64" (340) 463
    "double" (341) 474
    "function" (342) 529 532 535
    "lambda" (343) 536 539 542
    "int8" (344) 454 477
    "uint8" (345) 461 480
    "int16" (346) 455 478
    "uint16" (347) 462 481
    "tuple" (348) 545
    "variant" (349) 548 551
    "generator" (350) 339 340
    "yield" (351) 200 201 202 203
    "sealed" (352) 364 437
    "+=" (353) 103 257
    "-=" (354) 104 258
    "/=" (355) 106 260
    "*=" (356) 105 259
    "%=" (357) 107 261
    "&=" (358) 108 251
    "|=" (359) 109 252
    "^=" (360) 110 253
    "<<" (361) 136 298
    ">>" (362) 137 299
    "++" (363) 132 134 320 322
    "--" (364) 133 135 321 323
    "<=" (365) 127 311
    "<<=" (366) 138 262
    ">>=" (367) 139 263
    ">=" (368) 128 312
    "==" (369) 125 309
    "!=" (370) 126 310
    "->" (371) 271 272
    "<-" (372) 197 199 201 203 227 233 249 268 269 391 399
    "??" (373) 341 512
    "?." (374) 147 329 330
    "?[" (375) 145 327 328
    "<|" (376) 356
    " <|" (377) 182
    "@ <|" (378) 183 266 268
    "@@ <|" (379) 184 267 269
    "|>" (380) 357
    ":=" (381) 148 234 250 400 559 561
    "<<<" (382) 140 300
    ">>>" (383) 141 301
    "<<<=" (384) 142 264
    ">>>=" (385) 143 265
    "=>" (386) 226 227 574
    "::" (387) 186 187
    "&&" (388) 114 316
    "||" (389) 115 317
    "^^" (390) 116 318
    "&&=" (391) 111 254
    "||=" (392) 112 255
    "^^=" (393) 113 256
    ".." (394) 124 319
    "[[" (395) 238 361 566 567 568 569 580 587
    "[{" (396) 570 571 581 588
    "{{" (397) 584
    "integer constant" <i> (398) 46 47 48 49 67 78 241
    "long integer constant" <i64> (399) 243
    "unsigned integer constant" <ui> (400) 242
    "unsigned long integer constant" <ui64> (401) 244
    "floating point constant" <fd> (402) 68 79 245
    "double constant" <d> (403) 246
    "name" <s> (404) 18 35 37 38 40 64 66 73 77 100 185 186 187 221 222 231 232 233 234 271 272 280 281 329 330 346 347 348 358 384 387 420 421 423 431 438 447 448 449 450 484 485 486 551 553 558 559 560 561
    "start of the string" (405) 24 28
    STRING_CHARACTER <ch> (406) 20 22 29 30
    STRING_CHARACTER_ESC (407) 21 23
    "end of the string" (408) 24 28
    "{" (409) 27
    "}" (410) 27
    "end of failed eader macro" (411)
    UNARY_MINUS (412)
    UNARY_PLUS (413)
    PRE_INC (414)
    PRE_DEC (415)
    POST_INC (416)
    POST_DEC (417)
    DEREF (418)


Nonterminals, with rules where they appear

    $accept (191)
        on left: 0
    program (192)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13
    optional_public_or_private_module <b> (193)
        on left: 14 15 16
        on right: 19
    module_name <s> (194)
        on left: 17 18
        on right: 19
    module_declaration (195)
        on left: 19
        on right: 2
    character_sequence <s> (196)
        on left: 20 21 22 23
        on right: 22 23 24 26
    string_constant <s> (197)
        on left: 24
        on right: 65 76
    string_builder_body <pExpression> (198)
        on left: 25 26 27
        on right: 26 27 28
    string_builder <pExpression> (199)
        on left: 28
        on right: 289
    reader_character_sequence (200)
        on left: 29 30
        on right: 30 32
    expr_reader <pExpression> (201)
        on left: 32
        on right: 288
    $@1 (202)
        on left: 31
        on right: 32
    options_declaration (203)
        on left: 33
        on right: 9
    require_declaration (204)
        on left: 34
        on right: 8
    require_module_name <s> (205)
        on left: 35 36 37 38
        on right: 36 37 38 39 40
    require_module (206)
        on left: 39 40
        on right: 34
    is_public_module <b> (207)
        on left: 41 42
        on right: 39 40
    expect_declaration (208)
        on left: 43
        on right: 7
    expect_list (209)
        on left: 44 45
        on right: 43 45
    expect_error (210)
        on left: 46 47
        on right: 44 45
    expression_label <pExpression> (211)
        on left: 48
        on right: 176
    expression_goto <pExpression> (212)
        on left: 49 50
        on right: 177
    elif_or_static_elif <b> (213)
        on left: 51 52
        on right: 55
    expression_else <pExpression> (214)
        on left: 53 54 55
        on right: 55 58
    if_or_static_if <b> (215)
        on left: 56 57
        on right: 58
    expression_if_then_else <pExpression> (216)
        on left: 58
        on right: 174
    expression_for_loop <pExpression> (217)
        on left: 59
        on right: 169
    expression_unsafe <pExpression> (218)
        on left: 60
        on right: 166
    expression_while_loop <pExpression> (219)
        on left: 61
        on right: 165
    expression_with <pExpression> (220)
        on left: 62
        on right: 167
    expression_with_alias <pExpression> (221)
        on left: 64
        on right: 168
    $@2 (222)
        on left: 63
        on right: 64
    annotation_argument_value <aa> (223)
        on left: 65 66 67 68 69 70
        on right: 71 72
    annotation_argument_value_list <aaList> (224)
        on left: 71 72
        on right: 72 83
    annotation_argument_name <s> (225)
        on left: 73 74 75
        on right: 76 77 78 79 80 81 82 83
    annotation_argument <aa> (226)
        on left: 76 77 78 79 80 81 82 83
        on right: 84 85
    annotation_argument_list <aaList> (227)
        on left: 84 85
        on right: 33 85 90 361
    annotation_declaration_name <s> (228)
        on left: 86 87 88
        on right: 89 90
    annotation_declaration <fa> (229)
        on left: 89 90
        on right: 91 92
    annotation_list <faList> (230)
        on left: 91 92
        on right: 92 94 378
    optional_annotation_list <faList> (231)
        on left: 93 94
        on right: 150 240 375 377 432 433 446
    optional_function_argument_list <pVarDeclList> (232)
        on left: 95 96 97
        on right: 154 240 279 528 535 542
    optional_function_type <pTypeDecl> (233)
        on left: 98 99
        on right: 154 240 279 528 535 542
    function_name <s> (234)
        on left: 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149
        on right: 154
    global_function_declaration (235)
        on left: 150
        on right: 6
    optional_public_or_private_function <b> (236)
        on left: 151 152 153
        on right: 156
    function_declaration_header <pFuncDecl> (237)
        on left: 154
        on right: 156 375 377
    function_declaration <pFuncDecl> (238)
        on left: 156
        on right: 150
    $@3 (239)
        on left: 155
        on right: 156
    expression_block <pExpression> (240)
        on left: 157 158
        on right: 54 55 58 59 60 61 62 156 204 225 239 377
    expression_any <pExpression> (241)
        on left: 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
        on right: 180
    expressions <pExpression> (242)
        on left: 179 180 181
        on right: 157 158 180 181
    expr_pipe <pExpression> (243)
        on left: 182 183 184
        on right: 160 198 199 202 203 397 405 407
    name_in_namespace <s> (244)
        on left: 185 186 187
        on right: 32 86 220 221 222 270 273 276 279 286 332 333 358 435 482
    expression_delete <pExpression> (245)
        on left: 188
        on right: 163
    expr_new <pExpression> (246)
        on left: 189 190 191 192
        on right: 352
    expression_break <pExpression> (247)
        on left: 193
        on right: 170
    expression_continue <pExpression> (248)
        on left: 194
        on right: 171
    expression_return <pExpression> (249)
        on left: 195 196 197 198 199
        on right: 172
    expression_yield <pExpression> (250)
        on left: 200 201 202 203
        on right: 173
    expression_try_catch <pExpression> (251)
        on left: 204
        on right: 175
    kwd_let <b> (252)
        on left: 205 206
        on right: 207 416 418
    expression_let <pExpression> (253)
        on left: 207
        on right: 164
    expr_cast <pExpression> (254)
        on left: 210 213 216
        on right: 351
    $@4 (255)
        on left: 208
        on right: 210
    $@5 (256)
        on left: 209
        on right: 210
    $@6 (257)
        on left: 211
        on right: 213
    $@7 (258)
        on left: 212
        on right: 213
    $@8 (259)
        on left: 214
        on right: 216
    $@9 (260)
        on left: 215
        on right: 216
    expr_type_decl <pExpression> (261)
        on left: 219
        on right: 350
    $@10 (262)
        on left: 217
        on right: 219
    $@11 (263)
        on left: 218
        on right: 219
    expr_type_info <pExpression> (264)
        on left: 220 221 222
        on right: 349
    expr_list <pExpression> (265)
        on left: 223 224
        on right: 59 191 224 272 333 335 587 588
    block_or_simple_block <pExpression> (266)
        on left: 225 226 227
        on right: 240
    block_or_lambda <i> (267)
        on left: 228 229 230
        on right: 240
    capture_entry <pCapt> (268)
        on left: 231 232 233 234
        on right: 235 236
    capture_list <pCaptList> (269)
        on left: 235 236
        on right: 236 238
    optional_capture_list <pCaptList> (270)
        on left: 237 238
        on right: 240 339 340
    expr_block <pExpression> (271)
        on left: 239 240
        on right: 182 183 184 355 565
    expr_numeric_const <pExpression> (272)
        on left: 241 242 243 244 245 246
        on right: 287
    expr_assign <pExpression> (273)
        on left: 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265
        on right: 162 182
    expr_assign_pipe <pExpression> (274)
        on left: 266 267 268 269
        on right: 161
    expr_named_call <pExpression> (275)
        on left: 270
        on right: 354
    expr_method_call <pExpression> (276)
        on left: 271 272
        on right: 353
    func_addr_expr <pExpression> (277)
        on left: 273 276 279
        on right: 331
    $@12 (278)
        on left: 274
        on right: 276
    $@13 (279)
        on left: 275
        on right: 276
    $@14 (280)
        on left: 277
        on right: 279
    $@15 (281)
        on left: 278
        on right: 279
    expr_field <pExpression> (282)
        on left: 280 281 284
        on right: 293
    $@16 (283)
        on left: 282
        on right: 284
    $@17 (284)
        on left: 283
        on right: 284
    expr <pExpression> (285)
        on left: 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359
        on right: 27 50 55 58 61 62 64 188 196 197 200 201 210 213 216 220 221 222 223 224 226 227 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 271 272 280 281 284 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 336 337 338 340 341 342 345 346 347 348 356 357 359 395 396 404 406 421 496 558 559 560 561 572 573 574 575 586 587 588
    $@18 (286)
        on left: 343
        on right: 345
    $@19 (287)
        on left: 344
        on right: 345
    optional_field_annotation <aaList> (288)
        on left: 360 361
        on right: 370 379 380 410 418
    optional_override <i> (289)
        on left: 362 363 364
        on right: 370 377
    optional_constant <b> (290)
        on left: 365 366
        on right: 377
    optional_public_or_private_member_variable <b> (291)
        on left: 367 368 369
        on right: 370 375 377
    structure_variable_declaration <pVarDecl> (292)
        on left: 370
        on right: 373
    struct_variable_declaration_list <pVarDeclList> (293)
        on left: 371 373 375 377 378
        on right: 373 375 377 378 446
    $@20 (294)
        on left: 372
        on right: 373
    $@21 (295)
        on left: 374
        on right: 375
    $@22 (296)
        on left: 376
        on right: 377
    function_argument_declaration <pVarDecl> (297)
        on left: 379 380
        on right: 381 382
    function_argument_list <pVarDeclList> (298)
        on left: 381 382
        on right: 97 382
    tuple_type <pVarDecl> (299)
        on left: 383 384
        on right: 385 386
    tuple_type_list <pVarDeclList> (300)
        on left: 385 386
        on right: 386 545
    variant_type <pVarDecl> (301)
        on left: 387
        on right: 388 389
    variant_type_list <pVarDeclList> (302)
        on left: 388 389
        on right: 389 548 551
    copy_or_move <b> (303)
        on left: 390 391
        on right: 395 396 397 558 560
    variable_declaration <pVarDecl> (304)
        on left: 392 393 394 395 396 397
        on right: 370 379 380
    copy_or_move_or_clone <i> (305)
        on left: 398 399 400
        on right: 404 405 406 407
    optional_ref <b> (306)
        on left: 401 402
        on right: 406 407
    let_variable_declaration <pVarDecl> (307)
        on left: 403 404 405 406 407
        on right: 207 410 418
    global_variable_declaration_list <pVarDeclList> (308)
        on left: 408 410
        on right: 410 416
    $@23 (309)
        on left: 409
        on right: 410
    optional_shared <b> (310)
        on left: 411 412
        on right: 19 416 418
    optional_public_or_private_variable <b> (311)
        on left: 413 414 415
        on right: 416 418
    global_let (312)
        on left: 416 418
        on right: 5
    $@24 (313)
        on left: 417
        on right: 418
    enum_list <pEnum> (314)
        on left: 419 420 421
        on right: 420 421 432 433
    single_alias (315)
        on left: 423
        on right: 424 425 427
    $@25 (316)
        on left: 422
        on right: 423
    alias_list (317)
        on left: 424 425
        on right: 425 426
    alias_declaration (318)
        on left: 426 427
        on right: 10
    optional_public_or_private_enum <b> (319)
        on left: 428 429 430
        on right: 432 433
    enum_name <s> (320)
        on left: 431
        on right: 432 433
    enum_declaration (321)
        on left: 432 433
        on right: 4
    optional_structure_parent <s> (322)
        on left: 434 435
        on right: 438
    optional_sealed <b> (323)
        on left: 436 437
        on right: 438
    structure_name <pStructure> (324)
        on left: 438
        on right: 446
    class_or_struct <b> (325)
        on left: 439 440
        on right: 446
    optional_public_or_private_structure <b> (326)
        on left: 441 442 443
        on right: 446
    structure_declaration (327)
        on left: 446
        on right: 3
    $@26 (328)
        on left: 444
        on right: 446
    $@27 (329)
        on left: 445
        on right: 446
    variable_name_with_pos_list <pNameWithPosList> (330)
        on left: 447 448 449 450
        on right: 59 392 393 394 395 396 397 403 404 405 406 407 449 450 587 588
    basic_type_declaration <type> (331)
        on left: 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475
        on right: 334 335 492
    enum_basic_type_declaration <type> (332)
        on left: 476 477 478 479 480 481
        on right: 433
    structure_type_declaration <pTypeDecl> (333)
        on left: 482
        on right: 495
    auto_type_declaration <pTypeDecl> (334)
        on left: 483 484
        on right: 493
    bitfield_bits <pNameList> (335)
        on left: 485 486
        on right: 486 489 553
    bitfield_type_declaration <pTypeDecl> (336)
        on left: 489
        on right: 494
    $@28 (337)
        on left: 487
        on right: 489
    $@29 (338)
        on left: 488
        on right: 489
    table_type_pair <aTypePair> (339)
        on left: 490 491
        on right: 518
    type_declaration <pTypeDecl> (340)
        on left: 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 511 512 515 518 521 522 525 528 529 532 535 536 539 542 545 548
        on right: 99 189 190 191 210 213 216 219 276 339 340 345 383 384 387 394 395 403 404 405 423 490 491 496 497 498 499 500 501 502 503 504 505 506 507 508 511 512 515 521 525 532 539 566 567 568 569 570 571 580 581
    $@30 (341)
        on left: 509
        on right: 511
    $@31 (342)
        on left: 510
        on right: 511
    $@32 (343)
        on left: 513
        on right: 515
    $@33 (344)
        on left: 514
        on right: 515
    $@34 (345)
        on left: 516
        on right: 518
    $@35 (346)
        on left: 517
        on right: 518
    $@36 (347)
        on left: 519
        on right: 521
    $@37 (348)
        on left: 520
        on right: 521
    $@38 (349)
        on left: 523
        on right: 525
    $@39 (350)
        on left: 524
        on right: 525
    $@40 (351)
        on left: 526
        on right: 528
    $@41 (352)
        on left: 527
        on right: 528
    $@42 (353)
        on left: 530
        on right: 532
    $@43 (354)
        on left: 531
        on right: 532
    $@44 (355)
        on left: 533
        on right: 535
    $@45 (356)
        on left: 534
        on right: 535
    $@46 (357)
        on left: 537
        on right: 539
    $@47 (358)
        on left: 538
        on right: 539
    $@48 (359)
        on left: 540
        on right: 542
    $@49 (360)
        on left: 541
        on right: 542
    $@50 (361)
        on left: 543
        on right: 545
    $@51 (362)
        on left: 544
        on right: 545
    $@52 (363)
        on left: 546
        on right: 548
    $@53 (364)
        on left: 547
        on right: 548
    variant_alias_declaration (365)
        on left: 551
        on right: 11
    $@54 (366)
        on left: 549
        on right: 551
    $@55 (367)
        on left: 550
        on right: 551
    bitfield_alias_declaration (368)
        on left: 553
        on right: 12
    $@56 (369)
        on left: 552
        on right: 553
    make_decl <pExpression> (370)
        on left: 554 555 556 557
        on right: 192 290
    make_struct_fields <pMakeStruct> (371)
        on left: 558 559 560 561
        on right: 270 560 561 562 563
    make_struct_dim <pExpression> (372)
        on left: 562 563
        on right: 563 566 569 570 571
    optional_block <pExpression> (373)
        on left: 564 565
        on right: 566 567 568 569 570 571
    make_struct_decl <pExpression> (374)
        on left: 566 567 568 569 570 571
        on right: 554
    make_tuple <pExpression> (375)
        on left: 572 573
        on right: 573 576
    make_map_tuple <pExpression> (376)
        on left: 574 575
        on right: 577 582 583
    make_any_tuple <pExpression> (377)
        on left: 576 577
        on right: 578 579
    make_dim <pExpression> (378)
        on left: 578 579
        on right: 579 580 581
    make_dim_decl <pExpression> (379)
        on left: 580 581
        on right: 555
    make_table <pExpression> (380)
        on left: 582 583
        on right: 583 584
    make_table_decl <pExpression> (381)
        on left: 584
        on right: 556
    array_comprehension_where <pExpression> (382)
        on left: 585 586
        on right: 587 588
    array_comprehension <pExpression> (383)
        on left: 587 588
        on right: 557


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . bitfield_alias_declaration
   13        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "variant"   shift, and go to state 11
    '['         shift, and go to state 12
    ';'         shift, and go to state 13

    $default  reduce using rule 93 (optional_annotation_list)

    module_declaration           go to state 14
    options_declaration          go to state 15
    require_declaration          go to state 16
    expect_declaration           go to state 17
    optional_annotation_list     go to state 18
    global_function_declaration  go to state 19
    kwd_let                      go to state 20
    global_let                   go to state 21
    alias_declaration            go to state 22
    enum_declaration             go to state 23
    structure_declaration        go to state 24
    variant_alias_declaration    go to state 25
    bitfield_alias_declaration   go to state 26


State 2

    0 $accept: program $end .

    $default  accept


State 3

  205 kwd_let: "let" .

    $default  reduce using rule 205 (kwd_let)


State 4

   33 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 32


State 5

   43 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 33

    expect_list   go to state 34
    expect_error  go to state 35


State 6

   34 require_declaration: "require" . require_module

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 38
    require_module       go to state 39


State 7

  426 alias_declaration: "typedef" . '{' alias_list '}'
  427                  | "typedef" . single_alias

    "name"  shift, and go to state 40
    '{'     shift, and go to state 41

    single_alias  go to state 42


State 8

  206 kwd_let: "var" .

    $default  reduce using rule 206 (kwd_let)


State 9

   19 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 43
    '$'     shift, and go to state 44

    module_name  go to state 45


State 10

  553 bitfield_alias_declaration: "bitfield" . $@56 "name" '{' bitfield_bits ';' '}'

    $default  reduce using rule 552 ($@56)

    $@56  go to state 46


State 11

  551 variant_alias_declaration: "variant" . $@54 "name" $@55 '{' variant_type_list ';' '}'

    $default  reduce using rule 549 ($@54)

    $@54  go to state 47


State 12

   94 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 54
    name_in_namespace            go to state 55


State 13

   13 program: program ';' .

    $default  reduce using rule 13 (program)


State 14

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 15

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 16

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 17

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 18

  150 global_function_declaration: optional_annotation_list . "def" function_declaration
  432 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name '{' enum_list '}'
  433                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'
  446 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@26 structure_name $@27 '{' struct_variable_declaration_list '}'

    "struct"  shift, and go to state 56
    "class"   shift, and go to state 57
    "def"     shift, and go to state 58
    "enum"    shift, and go to state 59

    class_or_struct  go to state 60


State 19

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 20

  416 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  418           | kwd_let . optional_shared optional_public_or_private_variable $@24 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 61

    $default  reduce using rule 411 (optional_shared)

    optional_shared  go to state 62


State 21

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 22

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 23

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 24

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 25

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 26

   12 program: program bitfield_alias_declaration .

    $default  reduce using rule 12 (program)


State 27

   74 annotation_argument_name: "type" .

    $default  reduce using rule 74 (annotation_argument_name)


State 28

   75 annotation_argument_name: "in" .

    $default  reduce using rule 75 (annotation_argument_name)


State 29

   73 annotation_argument_name: "name" .

    $default  reduce using rule 73 (annotation_argument_name)


State 30

   76 annotation_argument: annotation_argument_name . '=' string_constant
   77                    | annotation_argument_name . '=' "name"
   78                    | annotation_argument_name . '=' "integer constant"
   79                    | annotation_argument_name . '=' "floating point constant"
   80                    | annotation_argument_name . '=' "true"
   81                    | annotation_argument_name . '=' "false"
   82                    | annotation_argument_name .
   83                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 63

    $default  reduce using rule 82 (annotation_argument)


State 31

   84 annotation_argument_list: annotation_argument .

    $default  reduce using rule 84 (annotation_argument_list)


State 32

   33 options_declaration: "options" annotation_argument_list .
   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 64

    $default  reduce using rule 33 (options_declaration)


State 33

   46 expect_error: "integer constant" .
   47             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 65

    $default  reduce using rule 46 (expect_error)


State 34

   43 expect_declaration: "expect" expect_list .
   45 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 66

    $default  reduce using rule 43 (expect_declaration)


State 35

   44 expect_list: expect_error .

    $default  reduce using rule 44 (expect_list)


State 36

   35 require_module_name: "name" .

    $default  reduce using rule 35 (require_module_name)


State 37

   36 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 36
    '%'     shift, and go to state 37

    require_module_name  go to state 67


State 38

   37 require_module_name: require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"
   39 require_module: require_module_name . is_public_module
   40               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 68
    "public"  shift, and go to state 69
    '/'       shift, and go to state 70
    '.'       shift, and go to state 71

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 72


State 39

   34 require_declaration: "require" require_module .

    $default  reduce using rule 34 (require_declaration)


State 40

  423 single_alias: "name" . $@25 '=' type_declaration

    $default  reduce using rule 422 ($@25)

    $@25  go to state 73


State 41

  426 alias_declaration: "typedef" '{' . alias_list '}'

    "name"  shift, and go to state 40

    single_alias  go to state 74
    alias_list    go to state 75


State 42

  427 alias_declaration: "typedef" single_alias .

    $default  reduce using rule 427 (alias_declaration)


State 43

   18 module_name: "name" .

    $default  reduce using rule 18 (module_name)


State 44

   17 module_name: '$' .

    $default  reduce using rule 17 (module_name)


State 45

   19 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 61

    $default  reduce using rule 411 (optional_shared)

    optional_shared  go to state 76


State 46

  553 bitfield_alias_declaration: "bitfield" $@56 . "name" '{' bitfield_bits ';' '}'

    "name"  shift, and go to state 77


State 47

  551 variant_alias_declaration: "variant" $@54 . "name" $@55 '{' variant_type_list ';' '}'

    "name"  shift, and go to state 78


State 48

   87 annotation_declaration_name: "require" .

    $default  reduce using rule 87 (annotation_declaration_name)


State 49

   88 annotation_declaration_name: "private" .

    $default  reduce using rule 88 (annotation_declaration_name)


State 50

  187 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 79


State 51

  185 name_in_namespace: "name" .
  186                  | "name" . "::" "name"

    "::"  shift, and go to state 80

    "::"      [reduce using rule 185 (name_in_namespace)]
    $default  reduce using rule 185 (name_in_namespace)


State 52

   89 annotation_declaration: annotation_declaration_name .
   90                       | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 81

    $default  reduce using rule 89 (annotation_declaration)


State 53

   91 annotation_list: annotation_declaration .

    $default  reduce using rule 91 (annotation_list)


State 54

   92 annotation_list: annotation_list . ',' annotation_declaration
   94 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 83


State 55

   86 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 86 (annotation_declaration_name)


State 56

  440 class_or_struct: "struct" .

    $default  reduce using rule 440 (class_or_struct)


State 57

  439 class_or_struct: "class" .

    $default  reduce using rule 439 (class_or_struct)


State 58

  150 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 84
    "private"  shift, and go to state 85

    $default  reduce using rule 151 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 86
    function_declaration                 go to state 87


State 59

  432 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name '{' enum_list '}'
  433                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "public"   shift, and go to state 88
    "private"  shift, and go to state 89

    $default  reduce using rule 428 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 90


State 60

  446 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@26 structure_name $@27 '{' struct_variable_declaration_list '}'

    "public"   shift, and go to state 91
    "private"  shift, and go to state 92

    $default  reduce using rule 441 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 93


State 61

  412 optional_shared: "shared" .

    $default  reduce using rule 412 (optional_shared)


State 62

  416 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  418           | kwd_let optional_shared . optional_public_or_private_variable $@24 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 94
    "private"  shift, and go to state 95

    $default  reduce using rule 413 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 96


State 63

   76 annotation_argument: annotation_argument_name '=' . string_constant
   77                    | annotation_argument_name '=' . "name"
   78                    | annotation_argument_name '=' . "integer constant"
   79                    | annotation_argument_name '=' . "floating point constant"
   80                    | annotation_argument_name '=' . "true"
   81                    | annotation_argument_name '=' . "false"
   83                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 97
    "false"                    shift, and go to state 98
    "integer constant"         shift, and go to state 99
    "floating point constant"  shift, and go to state 100
    "name"                     shift, and go to state 101
    "start of the string"      shift, and go to state 102
    '('                        shift, and go to state 103

    string_constant  go to state 104


State 64

   85 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 105


State 65

   47 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 106


State 66

   45 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 33

    expect_error  go to state 107


State 67

   36 require_module_name: '%' require_module_name .
   37                    | require_module_name . '.' "name"
   38                    | require_module_name . '/' "name"

    '.'  shift, and go to state 71

    $default  reduce using rule 36 (require_module_name)


State 68

   40 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 108


State 69

   42 is_public_module: "public" .

    $default  reduce using rule 42 (is_public_module)


State 70

   38 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 109


State 71

   37 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 110


State 72

   39 require_module: require_module_name is_public_module .

    $default  reduce using rule 39 (require_module)


State 73

  423 single_alias: "name" $@25 . '=' type_declaration

    '='  shift, and go to state 111


State 74

  424 alias_list: single_alias . ';'

    ';'  shift, and go to state 112


State 75

  425 alias_list: alias_list . single_alias ';'
  426 alias_declaration: "typedef" '{' alias_list . '}'

    "name"  shift, and go to state 40
    '}'     shift, and go to state 113

    single_alias  go to state 114


State 76

   19 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 14 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 117


State 77

  553 bitfield_alias_declaration: "bitfield" $@56 "name" . '{' bitfield_bits ';' '}'

    '{'  shift, and go to state 118


State 78

  551 variant_alias_declaration: "variant" $@54 "name" . $@55 '{' variant_type_list ';' '}'

    $default  reduce using rule 550 ($@55)

    $@55  go to state 119


State 79

  187 name_in_namespace: "::" "name" .

    $default  reduce using rule 187 (name_in_namespace)


State 80

  186 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 120


State 81

   90 annotation_declaration: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 121


State 82

   92 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 122
    name_in_namespace            go to state 55


State 83

   94 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 94 (optional_annotation_list)


State 84

  153 optional_public_or_private_function: "public" .

    $default  reduce using rule 153 (optional_public_or_private_function)


State 85

  152 optional_public_or_private_function: "private" .

    $default  reduce using rule 152 (optional_public_or_private_function)


State 86

  156 function_declaration: optional_public_or_private_function . $@3 function_declaration_header expression_block

    $default  reduce using rule 155 ($@3)

    $@3  go to state 123


State 87

  150 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 150 (global_function_declaration)


State 88

  430 optional_public_or_private_enum: "public" .

    $default  reduce using rule 430 (optional_public_or_private_enum)


State 89

  429 optional_public_or_private_enum: "private" .

    $default  reduce using rule 429 (optional_public_or_private_enum)


State 90

  432 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name '{' enum_list '}'
  433                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration '{' enum_list '}'

    "name"  shift, and go to state 124

    enum_name  go to state 125


State 91

  443 optional_public_or_private_structure: "public" .

    $default  reduce using rule 443 (optional_public_or_private_structure)


State 92

  442 optional_public_or_private_structure: "private" .

    $default  reduce using rule 442 (optional_public_or_private_structure)


State 93

  446 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@26 structure_name $@27 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 444 ($@26)

    $@26  go to state 126


State 94

  415 optional_public_or_private_variable: "public" .

    $default  reduce using rule 415 (optional_public_or_private_variable)


State 95

  414 optional_public_or_private_variable: "private" .

    $default  reduce using rule 414 (optional_public_or_private_variable)


State 96

  416 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  418           | kwd_let optional_shared optional_public_or_private_variable . $@24 optional_field_annotation let_variable_declaration

    '{'  shift, and go to state 127

    $default  reduce using rule 417 ($@24)

    $@24  go to state 128


State 97

   80 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 80 (annotation_argument)


State 98

   81 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 81 (annotation_argument)


State 99

   78 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 78 (annotation_argument)


State 100

   79 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 79 (annotation_argument)


State 101

   77 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 77 (annotation_argument)


State 102

   24 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130

    character_sequence  go to state 131


State 103

   83 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant                 go to state 137
    annotation_argument_value       go to state 138
    annotation_argument_value_list  go to state 139


State 104

   76 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 76 (annotation_argument)


State 105

   85 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 85 (annotation_argument_list)


State 106

   47 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 47 (expect_error)


State 107

   45 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 45 (expect_list)


State 108

   40 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 69

    $default  reduce using rule 41 (is_public_module)

    is_public_module  go to state 140


State 109

   38 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 38 (require_module_name)


State 110

   37 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 37 (require_module_name)


State 111

  423 single_alias: "name" $@25 '=' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 181


State 112

  424 alias_list: single_alias ';' .

    $default  reduce using rule 424 (alias_list)


State 113

  426 alias_declaration: "typedef" '{' alias_list '}' .

    $default  reduce using rule 426 (alias_declaration)


State 114

  425 alias_list: alias_list single_alias . ';'

    ';'  shift, and go to state 182


State 115

   15 optional_public_or_private_module: "public" .

    $default  reduce using rule 15 (optional_public_or_private_module)


State 116

   16 optional_public_or_private_module: "private" .

    $default  reduce using rule 16 (optional_public_or_private_module)


State 117

   19 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 19 (module_declaration)


State 118

  553 bitfield_alias_declaration: "bitfield" $@56 "name" '{' . bitfield_bits ';' '}'

    "name"  shift, and go to state 183

    bitfield_bits  go to state 184


State 119

  551 variant_alias_declaration: "variant" $@54 "name" $@55 . '{' variant_type_list ';' '}'

    '{'  shift, and go to state 185


State 120

  186 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 186 (name_in_namespace)


State 121

   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument
   90 annotation_declaration: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 64
    ')'  shift, and go to state 186


State 122

   92 annotation_list: annotation_list ',' annotation_declaration .

    $default  reduce using rule 92 (annotation_list)


State 123

  156 function_declaration: optional_public_or_private_function $@3 . function_declaration_header expression_block

    "operator"  shift, and go to state 187
    "++"        shift, and go to state 188
    "--"        shift, and go to state 189
    "name"      shift, and go to state 190

    function_name                go to state 191
    function_declaration_header  go to state 192


State 124

  431 enum_name: "name" .

    $default  reduce using rule 431 (enum_name)


State 125

  432 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . '{' enum_list '}'
  433                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration '{' enum_list '}'

    ':'  shift, and go to state 193
    '{'  shift, and go to state 194


State 126

  446 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@26 . structure_name $@27 '{' struct_variable_declaration_list '}'

    "sealed"  shift, and go to state 195

    $default  reduce using rule 436 (optional_sealed)

    optional_sealed  go to state 196
    structure_name   go to state 197


State 127

  416 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 408 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 198


State 128

  418 global_let: kwd_let optional_shared optional_public_or_private_variable $@24 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 199

    $default  reduce using rule 360 (optional_field_annotation)

    optional_field_annotation  go to state 200


State 129

   20 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 20 (character_sequence)


State 130

   21 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 21 (character_sequence)


State 131

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   24 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 201
    STRING_CHARACTER_ESC  shift, and go to state 202
    "end of the string"   shift, and go to state 203


State 132

   69 annotation_argument_value: "true" .

    $default  reduce using rule 69 (annotation_argument_value)


State 133

   70 annotation_argument_value: "false" .

    $default  reduce using rule 70 (annotation_argument_value)


State 134

   67 annotation_argument_value: "integer constant" .

    $default  reduce using rule 67 (annotation_argument_value)


State 135

   68 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 68 (annotation_argument_value)


State 136

   66 annotation_argument_value: "name" .

    $default  reduce using rule 66 (annotation_argument_value)


State 137

   65 annotation_argument_value: string_constant .

    $default  reduce using rule 65 (annotation_argument_value)


State 138

   71 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 71 (annotation_argument_value_list)


State 139

   72 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   83 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 204
    ')'  shift, and go to state 205


State 140

   40 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 40 (require_module)


State 141

  515 type_declaration: "array" . '<' $@32 type_declaration '>' $@33

    '<'  shift, and go to state 206


State 142

  518 type_declaration: "table" . '<' $@34 table_type_pair '>' $@35

    '<'  shift, and go to state 207


State 143

  521 type_declaration: "iterator" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 208


State 144

  511 type_declaration: "smart_ptr" . '<' $@30 type_declaration '>' $@31

    '<'  shift, and go to state 209


State 145

  451 basic_type_declaration: "bool" .

    $default  reduce using rule 451 (basic_type_declaration)


State 146

  471 basic_type_declaration: "void" .

    $default  reduce using rule 471 (basic_type_declaration)


State 147

  452 basic_type_declaration: "string" .

    $default  reduce using rule 452 (basic_type_declaration)


State 148

  483 auto_type_declaration: "auto" .
  484                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 210

    '('       [reduce using rule 483 (auto_type_declaration)]
    $default  reduce using rule 483 (auto_type_declaration)


State 149

  453 basic_type_declaration: "int" .

    $default  reduce using rule 453 (basic_type_declaration)


State 150

  457 basic_type_declaration: "int2" .

    $default  reduce using rule 457 (basic_type_declaration)


State 151

  458 basic_type_declaration: "int3" .

    $default  reduce using rule 458 (basic_type_declaration)


State 152

  459 basic_type_declaration: "int4" .

    $default  reduce using rule 459 (basic_type_declaration)


State 153

  460 basic_type_declaration: "uint" .

    $default  reduce using rule 460 (basic_type_declaration)


State 154

  475 basic_type_declaration: "bitfield" .
  489 bitfield_type_declaration: "bitfield" . '<' $@28 bitfield_bits '>' $@29

    '<'  shift, and go to state 211

    '<'       [reduce using rule 475 (basic_type_declaration)]
    $default  reduce using rule 475 (basic_type_declaration)


State 155

  464 basic_type_declaration: "uint2" .

    $default  reduce using rule 464 (basic_type_declaration)


State 156

  465 basic_type_declaration: "uint3" .

    $default  reduce using rule 465 (basic_type_declaration)


State 157

  466 basic_type_declaration: "uint4" .

    $default  reduce using rule 466 (basic_type_declaration)


State 158

  467 basic_type_declaration: "float" .

    $default  reduce using rule 467 (basic_type_declaration)


State 159

  468 basic_type_declaration: "float2" .

    $default  reduce using rule 468 (basic_type_declaration)


State 160

  469 basic_type_declaration: "float3" .

    $default  reduce using rule 469 (basic_type_declaration)


State 161

  470 basic_type_declaration: "float4" .

    $default  reduce using rule 470 (basic_type_declaration)


State 162

  472 basic_type_declaration: "range" .

    $default  reduce using rule 472 (basic_type_declaration)


State 163

  473 basic_type_declaration: "urange" .

    $default  reduce using rule 473 (basic_type_declaration)


State 164

  522 type_declaration: "block" .
  525                 | "block" . '<' $@38 type_declaration '>' $@39
  528                 | "block" . '<' $@40 optional_function_argument_list optional_function_type '>' $@41

    '<'  shift, and go to state 212

    '<'       [reduce using rule 522 (type_declaration)]
    $default  reduce using rule 522 (type_declaration)


State 165

  456 basic_type_declaration: "int64" .

    $default  reduce using rule 456 (basic_type_declaration)


State 166

  463 basic_type_declaration: "uint64" .

    $default  reduce using rule 463 (basic_type_declaration)


State 167

  474 basic_type_declaration: "double" .

    $default  reduce using rule 474 (basic_type_declaration)


State 168

  529 type_declaration: "function" .
  532                 | "function" . '<' $@42 type_declaration '>' $@43
  535                 | "function" . '<' $@44 optional_function_argument_list optional_function_type '>' $@45

    '<'  shift, and go to state 213

    '<'       [reduce using rule 529 (type_declaration)]
    $default  reduce using rule 529 (type_declaration)


State 169

  536 type_declaration: "lambda" .
  539                 | "lambda" . '<' $@46 type_declaration '>' $@47
  542                 | "lambda" . '<' $@48 optional_function_argument_list optional_function_type '>' $@49

    '<'  shift, and go to state 214

    '<'       [reduce using rule 536 (type_declaration)]
    $default  reduce using rule 536 (type_declaration)


State 170

  454 basic_type_declaration: "int8" .

    $default  reduce using rule 454 (basic_type_declaration)


State 171

  461 basic_type_declaration: "uint8" .

    $default  reduce using rule 461 (basic_type_declaration)


State 172

  455 basic_type_declaration: "int16" .

    $default  reduce using rule 455 (basic_type_declaration)


State 173

  462 basic_type_declaration: "uint16" .

    $default  reduce using rule 462 (basic_type_declaration)


State 174

  545 type_declaration: "tuple" . '<' $@50 tuple_type_list '>' $@51

    '<'  shift, and go to state 215


State 175

  548 type_declaration: "variant" . '<' $@52 variant_type_list '>' $@53

    '<'  shift, and go to state 216


State 176

  482 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 482 (structure_type_declaration)


State 177

  492 type_declaration: basic_type_declaration .

    $default  reduce using rule 492 (type_declaration)


State 178

  495 type_declaration: structure_type_declaration .

    $default  reduce using rule 495 (type_declaration)


State 179

  493 type_declaration: auto_type_declaration .

    $default  reduce using rule 493 (type_declaration)


State 180

  494 type_declaration: bitfield_type_declaration .

    $default  reduce using rule 494 (type_declaration)


State 181

  423 single_alias: "name" $@25 '=' type_declaration .
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226

    $default  reduce using rule 423 (single_alias)


State 182

  425 alias_list: alias_list single_alias ';' .

    $default  reduce using rule 425 (alias_list)


State 183

  485 bitfield_bits: "name" .

    $default  reduce using rule 485 (bitfield_bits)


State 184

  486 bitfield_bits: bitfield_bits . ';' "name"
  553 bitfield_alias_declaration: "bitfield" $@56 "name" '{' bitfield_bits . ';' '}'

    ';'  shift, and go to state 227


State 185

  551 variant_alias_declaration: "variant" $@54 "name" $@55 '{' . variant_type_list ';' '}'

    "name"  shift, and go to state 228

    variant_type       go to state 229
    variant_type_list  go to state 230


State 186

   90 annotation_declaration: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 90 (annotation_declaration)


State 187

  101 function_name: "operator" . '!'
  102              | "operator" . '~'
  103              | "operator" . "+="
  104              | "operator" . "-="
  105              | "operator" . "*="
  106              | "operator" . "/="
  107              | "operator" . "%="
  108              | "operator" . "&="
  109              | "operator" . "|="
  110              | "operator" . "^="
  111              | "operator" . "&&="
  112              | "operator" . "||="
  113              | "operator" . "^^="
  114              | "operator" . "&&"
  115              | "operator" . "||"
  116              | "operator" . "^^"
  117              | "operator" . '+'
  118              | "operator" . '-'
  119              | "operator" . '*'
  120              | "operator" . '/'
  121              | "operator" . '%'
  122              | "operator" . '<'
  123              | "operator" . '>'
  124              | "operator" . ".."
  125              | "operator" . "=="
  126              | "operator" . "!="
  127              | "operator" . "<="
  128              | "operator" . ">="
  129              | "operator" . '&'
  130              | "operator" . '|'
  131              | "operator" . '^'
  134              | "operator" . "++"
  135              | "operator" . "--"
  136              | "operator" . "<<"
  137              | "operator" . ">>"
  138              | "operator" . "<<="
  139              | "operator" . ">>="
  140              | "operator" . "<<<"
  141              | "operator" . ">>>"
  142              | "operator" . "<<<="
  143              | "operator" . ">>>="
  144              | "operator" . '[' ']'
  145              | "operator" . "?[" ']'
  146              | "operator" . '.'
  147              | "operator" . "?."
  148              | "operator" . ":="
  149              | "operator" . "delete"

    "delete"  shift, and go to state 231
    "+="      shift, and go to state 232
    "-="      shift, and go to state 233
    "/="      shift, and go to state 234
    "*="      shift, and go to state 235
    "%="      shift, and go to state 236
    "&="      shift, and go to state 237
    "|="      shift, and go to state 238
    "^="      shift, and go to state 239
    "<<"      shift, and go to state 240
    ">>"      shift, and go to state 241
    "++"      shift, and go to state 242
    "--"      shift, and go to state 243
    "<="      shift, and go to state 244
    "<<="     shift, and go to state 245
    ">>="     shift, and go to state 246
    ">="      shift, and go to state 247
    "=="      shift, and go to state 248
    "!="      shift, and go to state 249
    "?."      shift, and go to state 250
    "?["      shift, and go to state 251
    ":="      shift, and go to state 252
    "<<<"     shift, and go to state 253
    ">>>"     shift, and go to state 254
    "<<<="    shift, and go to state 255
    ">>>="    shift, and go to state 256
    "&&"      shift, and go to state 257
    "||"      shift, and go to state 258
    "^^"      shift, and go to state 259
    "&&="     shift, and go to state 260
    "||="     shift, and go to state 261
    "^^="     shift, and go to state 262
    ".."      shift, and go to state 263
    '|'       shift, and go to state 264
    '^'       shift, and go to state 265
    '&'       shift, and go to state 266
    '<'       shift, and go to state 267
    '>'       shift, and go to state 268
    '-'       shift, and go to state 269
    '+'       shift, and go to state 270
    '*'       shift, and go to state 271
    '/'       shift, and go to state 272
    '%'       shift, and go to state 273
    '~'       shift, and go to state 274
    '!'       shift, and go to state 275
    '.'       shift, and go to state 276
    '['       shift, and go to state 277


State 188

  132 function_name: "++" . "operator"

    "operator"  shift, and go to state 278


State 189

  133 function_name: "--" . "operator"

    "operator"  shift, and go to state 279


State 190

  100 function_name: "name" .

    $default  reduce using rule 100 (function_name)


State 191

  154 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 280

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 281


State 192

  156 function_declaration: optional_public_or_private_function $@3 function_declaration_header . expression_block

    '{'  shift, and go to state 282

    expression_block  go to state 283


State 193

  433 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration '{' enum_list '}'

    "int"     shift, and go to state 284
    "uint"    shift, and go to state 285
    "int8"    shift, and go to state 286
    "uint8"   shift, and go to state 287
    "int16"   shift, and go to state 288
    "uint16"  shift, and go to state 289

    enum_basic_type_declaration  go to state 290


State 194

  432 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' . enum_list '}'

    $default  reduce using rule 419 (enum_list)

    enum_list  go to state 291


State 195

  437 optional_sealed: "sealed" .

    $default  reduce using rule 437 (optional_sealed)


State 196

  438 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 292


State 197

  446 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@26 structure_name . $@27 '{' struct_variable_declaration_list '}'

    $default  reduce using rule 445 ($@27)

    $@27  go to state 293


State 198

  410 global_variable_declaration_list: global_variable_declaration_list . $@23 optional_field_annotation let_variable_declaration
  416 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    '}'  shift, and go to state 294

    $default  reduce using rule 409 ($@23)

    $@23  go to state 295


State 199

  361 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 27
    "in"    shift, and go to state 28
    "name"  shift, and go to state 29

    annotation_argument_name  go to state 30
    annotation_argument       go to state 31
    annotation_argument_list  go to state 296


State 200

  418 global_let: kwd_let optional_shared optional_public_or_private_variable $@24 optional_field_annotation . let_variable_declaration

    "name"  shift, and go to state 297

    let_variable_declaration     go to state 298
    variable_name_with_pos_list  go to state 299


State 201

   22 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 22 (character_sequence)


State 202

   23 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 23 (character_sequence)


State 203

   24 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 24 (string_constant)


State 204

   72 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 132
    "false"                    shift, and go to state 133
    "integer constant"         shift, and go to state 134
    "floating point constant"  shift, and go to state 135
    "name"                     shift, and go to state 136
    "start of the string"      shift, and go to state 102

    string_constant            go to state 137
    annotation_argument_value  go to state 300


State 205

   83 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 83 (annotation_argument)


State 206

  515 type_declaration: "array" '<' . $@32 type_declaration '>' $@33

    $default  reduce using rule 513 ($@32)

    $@32  go to state 301


State 207

  518 type_declaration: "table" '<' . $@34 table_type_pair '>' $@35

    $default  reduce using rule 516 ($@34)

    $@34  go to state 302


State 208

  521 type_declaration: "iterator" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 519 ($@36)

    $@36  go to state 303


State 209

  511 type_declaration: "smart_ptr" '<' . $@30 type_declaration '>' $@31

    $default  reduce using rule 509 ($@30)

    $@30  go to state 304


State 210

  484 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 305


State 211

  489 bitfield_type_declaration: "bitfield" '<' . $@28 bitfield_bits '>' $@29

    $default  reduce using rule 487 ($@28)

    $@28  go to state 306


State 212

  525 type_declaration: "block" '<' . $@38 type_declaration '>' $@39
  528                 | "block" '<' . $@40 optional_function_argument_list optional_function_type '>' $@41

    ':'       reduce using rule 526 ($@40)
    '>'       reduce using rule 526 ($@40)
    '('       reduce using rule 526 ($@40)
    $default  reduce using rule 523 ($@38)

    $@38  go to state 307
    $@40  go to state 308


State 213

  532 type_declaration: "function" '<' . $@42 type_declaration '>' $@43
  535                 | "function" '<' . $@44 optional_function_argument_list optional_function_type '>' $@45

    ':'       reduce using rule 533 ($@44)
    '>'       reduce using rule 533 ($@44)
    '('       reduce using rule 533 ($@44)
    $default  reduce using rule 530 ($@42)

    $@42  go to state 309
    $@44  go to state 310


State 214

  539 type_declaration: "lambda" '<' . $@46 type_declaration '>' $@47
  542                 | "lambda" '<' . $@48 optional_function_argument_list optional_function_type '>' $@49

    ':'       reduce using rule 540 ($@48)
    '>'       reduce using rule 540 ($@48)
    '('       reduce using rule 540 ($@48)
    $default  reduce using rule 537 ($@46)

    $@46  go to state 311
    $@48  go to state 312


State 215

  545 type_declaration: "tuple" '<' . $@50 tuple_type_list '>' $@51

    $default  reduce using rule 543 ($@50)

    $@50  go to state 313


State 216

  548 type_declaration: "variant" '<' . $@52 variant_type_list '>' $@53

    $default  reduce using rule 546 ($@52)

    $@52  go to state 314


State 217

  500 type_declaration: type_declaration "const" .

    $default  reduce using rule 500 (type_declaration)


State 218

  505 type_declaration: type_declaration "implicit" .

    $default  reduce using rule 505 (type_declaration)


State 219

  499 type_declaration: type_declaration "explicit" .

    $default  reduce using rule 499 (type_declaration)


State 220

  512 type_declaration: type_declaration "??" .

    $default  reduce using rule 512 (type_declaration)


State 221

  507 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 315


State 222

  508 type_declaration: type_declaration '?' .

    $default  reduce using rule 508 (type_declaration)


State 223

  502 type_declaration: type_declaration '&' .

    $default  reduce using rule 502 (type_declaration)


State 224

  498 type_declaration: type_declaration '-' . '[' ']'
  501                 | type_declaration '-' . "const"
  503                 | type_declaration '-' . '&'
  506                 | type_declaration '-' . '#'

    "const"  shift, and go to state 316
    '&'      shift, and go to state 317
    '['      shift, and go to state 318
    '#'      shift, and go to state 319


State 225

  496 type_declaration: type_declaration '[' . expr ']'
  497                 | type_declaration '[' . ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    ']'                               shift, and go to state 352
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 371
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 226

  504 type_declaration: type_declaration '#' .

    $default  reduce using rule 504 (type_declaration)


State 227

  486 bitfield_bits: bitfield_bits ';' . "name"
  553 bitfield_alias_declaration: "bitfield" $@56 "name" '{' bitfield_bits ';' . '}'

    "name"  shift, and go to state 378
    '}'     shift, and go to state 379


State 228

  387 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 380


State 229

  388 variant_type_list: variant_type .

    $default  reduce using rule 388 (variant_type_list)


State 230

  389 variant_type_list: variant_type_list . ';' variant_type
  551 variant_alias_declaration: "variant" $@54 "name" $@55 '{' variant_type_list . ';' '}'

    ';'  shift, and go to state 381


State 231

  149 function_name: "operator" "delete" .

    $default  reduce using rule 149 (function_name)


State 232

  103 function_name: "operator" "+=" .

    $default  reduce using rule 103 (function_name)


State 233

  104 function_name: "operator" "-=" .

    $default  reduce using rule 104 (function_name)


State 234

  106 function_name: "operator" "/=" .

    $default  reduce using rule 106 (function_name)


State 235

  105 function_name: "operator" "*=" .

    $default  reduce using rule 105 (function_name)


State 236

  107 function_name: "operator" "%=" .

    $default  reduce using rule 107 (function_name)


State 237

  108 function_name: "operator" "&=" .

    $default  reduce using rule 108 (function_name)


State 238

  109 function_name: "operator" "|=" .

    $default  reduce using rule 109 (function_name)


State 239

  110 function_name: "operator" "^=" .

    $default  reduce using rule 110 (function_name)


State 240

  136 function_name: "operator" "<<" .

    $default  reduce using rule 136 (function_name)


State 241

  137 function_name: "operator" ">>" .

    $default  reduce using rule 137 (function_name)


State 242

  134 function_name: "operator" "++" .

    $default  reduce using rule 134 (function_name)


State 243

  135 function_name: "operator" "--" .

    $default  reduce using rule 135 (function_name)


State 244

  127 function_name: "operator" "<=" .

    $default  reduce using rule 127 (function_name)


State 245

  138 function_name: "operator" "<<=" .

    $default  reduce using rule 138 (function_name)


State 246

  139 function_name: "operator" ">>=" .

    $default  reduce using rule 139 (function_name)


State 247

  128 function_name: "operator" ">=" .

    $default  reduce using rule 128 (function_name)


State 248

  125 function_name: "operator" "==" .

    $default  reduce using rule 125 (function_name)


State 249

  126 function_name: "operator" "!=" .

    $default  reduce using rule 126 (function_name)


State 250

  147 function_name: "operator" "?." .

    $default  reduce using rule 147 (function_name)


State 251

  145 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 382


State 252

  148 function_name: "operator" ":=" .

    $default  reduce using rule 148 (function_name)


State 253

  140 function_name: "operator" "<<<" .

    $default  reduce using rule 140 (function_name)


State 254

  141 function_name: "operator" ">>>" .

    $default  reduce using rule 141 (function_name)


State 255

  142 function_name: "operator" "<<<=" .

    $default  reduce using rule 142 (function_name)


State 256

  143 function_name: "operator" ">>>=" .

    $default  reduce using rule 143 (function_name)


State 257

  114 function_name: "operator" "&&" .

    $default  reduce using rule 114 (function_name)


State 258

  115 function_name: "operator" "||" .

    $default  reduce using rule 115 (function_name)


State 259

  116 function_name: "operator" "^^" .

    $default  reduce using rule 116 (function_name)


State 260

  111 function_name: "operator" "&&=" .

    $default  reduce using rule 111 (function_name)


State 261

  112 function_name: "operator" "||=" .

    $default  reduce using rule 112 (function_name)


State 262

  113 function_name: "operator" "^^=" .

    $default  reduce using rule 113 (function_name)


State 263

  124 function_name: "operator" ".." .

    $default  reduce using rule 124 (function_name)


State 264

  130 function_name: "operator" '|' .

    $default  reduce using rule 130 (function_name)


State 265

  131 function_name: "operator" '^' .

    $default  reduce using rule 131 (function_name)


State 266

  129 function_name: "operator" '&' .

    $default  reduce using rule 129 (function_name)


State 267

  122 function_name: "operator" '<' .

    $default  reduce using rule 122 (function_name)


State 268

  123 function_name: "operator" '>' .

    $default  reduce using rule 123 (function_name)


State 269

  118 function_name: "operator" '-' .

    $default  reduce using rule 118 (function_name)


State 270

  117 function_name: "operator" '+' .

    $default  reduce using rule 117 (function_name)


State 271

  119 function_name: "operator" '*' .

    $default  reduce using rule 119 (function_name)


State 272

  120 function_name: "operator" '/' .

    $default  reduce using rule 120 (function_name)


State 273

  121 function_name: "operator" '%' .

    $default  reduce using rule 121 (function_name)


State 274

  102 function_name: "operator" '~' .

    $default  reduce using rule 102 (function_name)


State 275

  101 function_name: "operator" '!' .

    $default  reduce using rule 101 (function_name)


State 276

  146 function_name: "operator" '.' .

    $default  reduce using rule 146 (function_name)


State 277

  144 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 383


State 278

  132 function_name: "++" "operator" .

    $default  reduce using rule 132 (function_name)


State 279

  133 function_name: "--" "operator" .

    $default  reduce using rule 133 (function_name)


State 280

   96 optional_function_argument_list: '(' . ')'
   97                                | '(' . function_argument_list ')'

    "[["  shift, and go to state 199
    ')'   shift, and go to state 384

    $default  reduce using rule 360 (optional_field_annotation)

    optional_field_annotation      go to state 385
    function_argument_declaration  go to state 386
    function_argument_list         go to state 387


State 281

  154 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 388

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 389


State 282

  157 expression_block: '{' . expressions '}'
  158                 | '{' . expressions '}' "finally" '{' expressions '}'

    $default  reduce using rule 179 (expressions)

    expressions  go to state 390


State 283

  156 function_declaration: optional_public_or_private_function $@3 function_declaration_header expression_block .

    $default  reduce using rule 156 (function_declaration)


State 284

  476 enum_basic_type_declaration: "int" .

    $default  reduce using rule 476 (enum_basic_type_declaration)


State 285

  479 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 479 (enum_basic_type_declaration)


State 286

  477 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 477 (enum_basic_type_declaration)


State 287

  480 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 480 (enum_basic_type_declaration)


State 288

  478 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 478 (enum_basic_type_declaration)


State 289

  481 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 481 (enum_basic_type_declaration)


State 290

  433 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . '{' enum_list '}'

    '{'  shift, and go to state 391


State 291

  420 enum_list: enum_list . "name" ';'
  421          | enum_list . "name" '=' expr ';'
  432 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list . '}'

    "name"  shift, and go to state 392
    '}'     shift, and go to state 393


State 292

  438 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 394

    $default  reduce using rule 434 (optional_structure_parent)

    optional_structure_parent  go to state 395


State 293

  446 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@26 structure_name $@27 . '{' struct_variable_declaration_list '}'

    '{'  shift, and go to state 396


State 294

  416 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 416 (global_let)


State 295

  410 global_variable_declaration_list: global_variable_declaration_list $@23 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 199

    $default  reduce using rule 360 (optional_field_annotation)

    optional_field_annotation  go to state 397


State 296

   85 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  361 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 64
    ']'  shift, and go to state 398


State 297

  447 variable_name_with_pos_list: "name" .
  448                            | "name" . "aka" "name"

    "aka"  shift, and go to state 399

    $default  reduce using rule 447 (variable_name_with_pos_list)


State 298

  418 global_let: kwd_let optional_shared optional_public_or_private_variable $@24 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 418 (global_let)


State 299

  403 let_variable_declaration: variable_name_with_pos_list . ':' type_declaration ';'
  404                         | variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr ';'
  405                         | variable_name_with_pos_list . ':' type_declaration copy_or_move_or_clone expr_pipe
  406                         | variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'
  407                         | variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe
  449 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  450                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    ','  shift, and go to state 400
    ':'  shift, and go to state 401
    '&'  shift, and go to state 402

    $default  reduce using rule 401 (optional_ref)

    optional_ref  go to state 403


State 300

   72 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 72 (annotation_argument_value_list)


State 301

  515 type_declaration: "array" '<' $@32 . type_declaration '>' $@33

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 404


State 302

  518 type_declaration: "table" '<' $@34 . table_type_pair '>' $@35

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    table_type_pair             go to state 405
    type_declaration            go to state 406


State 303

  521 type_declaration: "iterator" '<' $@36 . type_declaration '>' $@37

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 407


State 304

  511 type_declaration: "smart_ptr" '<' $@30 . type_declaration '>' $@31

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 408


State 305

  484 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 409


State 306

  489 bitfield_type_declaration: "bitfield" '<' $@28 . bitfield_bits '>' $@29

    "name"  shift, and go to state 183

    bitfield_bits  go to state 410


State 307

  525 type_declaration: "block" '<' $@38 . type_declaration '>' $@39

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 411


State 308

  528 type_declaration: "block" '<' $@40 . optional_function_argument_list optional_function_type '>' $@41

    '('  shift, and go to state 280

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 412


State 309

  532 type_declaration: "function" '<' $@42 . type_declaration '>' $@43

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 413


State 310

  535 type_declaration: "function" '<' $@44 . optional_function_argument_list optional_function_type '>' $@45

    '('  shift, and go to state 280

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 414


State 311

  539 type_declaration: "lambda" '<' $@46 . type_declaration '>' $@47

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 415


State 312

  542 type_declaration: "lambda" '<' $@48 . optional_function_argument_list optional_function_type '>' $@49

    '('  shift, and go to state 280

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 416


State 313

  545 type_declaration: "tuple" '<' $@50 . tuple_type_list '>' $@51

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 417

    name_in_namespace           go to state 176
    tuple_type                  go to state 418
    tuple_type_list             go to state 419
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 420


State 314

  548 type_declaration: "variant" '<' $@52 . variant_type_list '>' $@53

    "name"  shift, and go to state 228

    variant_type       go to state 229
    variant_type_list  go to state 421


State 315

  507 type_declaration: type_declaration '=' "const" .

    $default  reduce using rule 507 (type_declaration)


State 316

  501 type_declaration: type_declaration '-' "const" .

    $default  reduce using rule 501 (type_declaration)


State 317

  503 type_declaration: type_declaration '-' '&' .

    $default  reduce using rule 503 (type_declaration)


State 318

  498 type_declaration: type_declaration '-' '[' . ']'

    ']'  shift, and go to state 422


State 319

  506 type_declaration: type_declaration '-' '#' .

    $default  reduce using rule 506 (type_declaration)


State 320

  291 expr: "true" .

    $default  reduce using rule 291 (expr)


State 321

  292 expr: "false" .

    $default  reduce using rule 292 (expr)


State 322

  189 expr_new: "new" . type_declaration
  190         | "new" . type_declaration '(' ')'
  191         | "new" . type_declaration '(' expr_list ')'
  192         | "new" . make_decl

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "[["         shift, and go to state 336
    "[{"         shift, and go to state 337
    "{{"         shift, and go to state 338
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 423
    make_decl                   go to state 424
    make_struct_decl            go to state 374
    make_dim_decl               go to state 375
    make_table_decl             go to state 376
    array_comprehension         go to state 377


State 323

  220 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  221               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  222               | "typeinfo" . '(' name_in_namespace '<' "name" ';' "name" '>' expr ')'

    '('  shift, and go to state 425


State 324

  219 expr_type_decl: "type" . '<' $@10 type_declaration '>' $@11

    '<'  shift, and go to state 426


State 325

  285 expr: "null" .

    $default  reduce using rule 285 (expr)


State 326

  337 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 427


State 327

  210 expr_cast: "cast" . '<' $@4 type_declaration '>' $@5 expr

    '<'  shift, and go to state 428


State 328

  213 expr_cast: "upcast" . '<' $@6 type_declaration '>' $@7 expr

    '<'  shift, and go to state 429


State 329

  338 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 430


State 330

  216 expr_cast: "reinterpret" . '<' $@8 type_declaration '>' $@9 expr

    '<'  shift, and go to state 431


State 331

  359 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 432


State 332

  475 basic_type_declaration: "bitfield" .

    $default  reduce using rule 475 (basic_type_declaration)


State 333

  339 expr: "generator" . '<' type_declaration '>' optional_capture_list '(' ')'
  340     | "generator" . '<' type_declaration '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 433


State 334

  320 expr: "++" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 434
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 335

  321 expr: "--" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 435
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 336

  566 make_struct_decl: "[[" . type_declaration make_struct_dim optional_block ']' ']'
  567                 | "[[" . type_declaration optional_block ']' ']'
  568                 | "[[" . type_declaration '(' ')' optional_block ']' ']'
  569                 | "[[" . type_declaration '(' ')' make_struct_dim optional_block ']' ']'
  580 make_dim_decl: "[[" . type_declaration make_dim ']' ']'
  587 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 436
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 437


State 337

  570 make_struct_decl: "[{" . type_declaration make_struct_dim optional_block '}' ']'
  571                 | "[{" . type_declaration '(' ')' make_struct_dim optional_block '}' ']'
  581 make_dim_decl: "[{" . type_declaration make_dim '}' ']'
  588 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "for"        shift, and go to state 438
    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 439


State 338

  584 make_table_decl: "{{" . make_table '}' '}'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 440
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_map_tuple          go to state 441
    make_dim_decl           go to state 375
    make_table              go to state 442
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 339

  241 expr_numeric_const: "integer constant" .

    $default  reduce using rule 241 (expr_numeric_const)


State 340

  243 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 243 (expr_numeric_const)


State 341

  242 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 242 (expr_numeric_const)


State 342

  244 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 244 (expr_numeric_const)


State 343

  245 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 245 (expr_numeric_const)


State 344

  246 expr_numeric_const: "double constant" .

    $default  reduce using rule 246 (expr_numeric_const)


State 345

   28 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 25 (string_builder_body)

    string_builder_body  go to state 443


State 346

  297 expr: '-' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 444
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 347

  296 expr: '+' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 445
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 348

  336 expr: '*' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 446
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 349

   32 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 447


State 350

  295 expr: '~' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 448
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 351

  294 expr: '!' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 449
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 352

  497 type_declaration: type_declaration '[' ']' .

    $default  reduce using rule 497 (type_declaration)


State 353

  324 expr: '(' . expr ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 450
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 354

  228 block_or_lambda: '$' .

    $default  reduce using rule 228 (block_or_lambda)


State 355

  229 block_or_lambda: '@' .
  230                | '@' . '@'
  273 func_addr_expr: '@' . '@' name_in_namespace
  276               | '@' . '@' '<' $@12 type_declaration '>' $@13 name_in_namespace
  279               | '@' . '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

    '@'  shift, and go to state 451

    $default  reduce using rule 229 (block_or_lambda)


State 356

  289 expr: string_builder .

    $default  reduce using rule 289 (expr)


State 357

  288 expr: expr_reader .

    $default  reduce using rule 288 (expr)


State 358

  239 expr_block: expression_block .

    $default  reduce using rule 239 (expr_block)


State 359

  270 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  286 expr: name_in_namespace .
  332     | name_in_namespace . '(' ')'
  333     | name_in_namespace . '(' expr_list ')'
  358     | name_in_namespace . "name"

    "name"  shift, and go to state 452
    '('     shift, and go to state 453

    "name"    [reduce using rule 286 (expr)]
    '('       [reduce using rule 286 (expr)]
    $default  reduce using rule 286 (expr)


State 360

  352 expr: expr_new .

    $default  reduce using rule 352 (expr)


State 361

  351 expr: expr_cast .

    $default  reduce using rule 351 (expr)


State 362

  350 expr: expr_type_decl .

    $default  reduce using rule 350 (expr)


State 363

  349 expr: expr_type_info .

    $default  reduce using rule 349 (expr)


State 364

  240 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 12

    $default  reduce using rule 93 (optional_annotation_list)

    optional_annotation_list  go to state 454


State 365

  355 expr: expr_block .

    $default  reduce using rule 355 (expr)


State 366

  287 expr: expr_numeric_const .

    $default  reduce using rule 287 (expr)


State 367

  354 expr: expr_named_call .

    $default  reduce using rule 354 (expr)


State 368

  353 expr: expr_method_call .

    $default  reduce using rule 353 (expr)


State 369

  331 expr: func_addr_expr .

    $default  reduce using rule 331 (expr)


State 370

  293 expr: expr_field .

    $default  reduce using rule 293 (expr)


State 371

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  496 type_declaration: type_declaration '[' expr . ']'

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ']'    shift, and go to state 490


State 372

  334 expr: basic_type_declaration . '(' ')'
  335     | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 491


State 373

  290 expr: make_decl .

    $default  reduce using rule 290 (expr)


State 374

  554 make_decl: make_struct_decl .

    $default  reduce using rule 554 (make_decl)


State 375

  555 make_decl: make_dim_decl .

    $default  reduce using rule 555 (make_decl)


State 376

  556 make_decl: make_table_decl .

    $default  reduce using rule 556 (make_decl)


State 377

  557 make_decl: array_comprehension .

    $default  reduce using rule 557 (make_decl)


State 378

  486 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 486 (bitfield_bits)


State 379

  553 bitfield_alias_declaration: "bitfield" $@56 "name" '{' bitfield_bits ';' '}' .

    $default  reduce using rule 553 (bitfield_alias_declaration)


State 380

  387 variant_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 492


State 381

  389 variant_type_list: variant_type_list ';' . variant_type
  551 variant_alias_declaration: "variant" $@54 "name" $@55 '{' variant_type_list ';' . '}'

    "name"  shift, and go to state 228
    '}'     shift, and go to state 493

    variant_type  go to state 494


State 382

  145 function_name: "operator" "?[" ']' .

    $default  reduce using rule 145 (function_name)


State 383

  144 function_name: "operator" '[' ']' .

    $default  reduce using rule 144 (function_name)


State 384

   96 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 96 (optional_function_argument_list)


State 385

  379 function_argument_declaration: optional_field_annotation . variable_declaration
  380                              | optional_field_annotation . "var" variable_declaration

    "var"   shift, and go to state 495
    "name"  shift, and go to state 297

    variable_declaration         go to state 496
    variable_name_with_pos_list  go to state 497


State 386

  381 function_argument_list: function_argument_declaration .

    $default  reduce using rule 381 (function_argument_list)


State 387

   97 optional_function_argument_list: '(' function_argument_list . ')'
  382 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 498
    ';'  shift, and go to state 499


State 388

   99 optional_function_type: ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 500


State 389

  154 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 154 (function_declaration_header)


State 390

  157 expression_block: '{' expressions . '}'
  158                 | '{' expressions . '}' "finally" '{' expressions '}'
  180 expressions: expressions . expression_any
  181            | expressions . error

    error                             shift, and go to state 501
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 502
    "if"                              shift, and go to state 503
    "static_if"                       shift, and go to state 504
    "for"                             shift, and go to state 505
    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "return"                          shift, and go to state 506
    "null"                            shift, and go to state 325
    "break"                           shift, and go to state 507
    "try"                             shift, and go to state 508
    "delete"                          shift, and go to state 509
    "deref"                           shift, and go to state 326
    "with"                            shift, and go to state 510
    "assume"                          shift, and go to state 511
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 329
    "continue"                        shift, and go to state 512
    "pass"                            shift, and go to state 513
    "reinterpret"                     shift, and go to state 330
    "label"                           shift, and go to state 514
    "goto"                            shift, and go to state 515
    "unsafe"                          shift, and go to state 516
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "yield"                           shift, and go to state 517
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    ';'                               shift, and go to state 520
    '{'                               shift, and go to state 282
    '}'                               shift, and go to state 521

    string_builder           go to state 356
    expr_reader              go to state 357
    expression_label         go to state 522
    expression_goto          go to state 523
    if_or_static_if          go to state 524
    expression_if_then_else  go to state 525
    expression_for_loop      go to state 526
    expression_unsafe        go to state 527
    expression_while_loop    go to state 528
    expression_with          go to state 529
    expression_with_alias    go to state 530
    expression_block         go to state 358
    expression_any           go to state 531
    expr_pipe                go to state 532
    name_in_namespace        go to state 359
    expression_delete        go to state 533
    expr_new                 go to state 360
    expression_break         go to state 534
    expression_continue      go to state 535
    expression_return        go to state 536
    expression_yield         go to state 537
    expression_try_catch     go to state 538
    kwd_let                  go to state 539
    expression_let           go to state 540
    expr_cast                go to state 361
    expr_type_decl           go to state 362
    expr_type_info           go to state 363
    block_or_lambda          go to state 364
    expr_block               go to state 365
    expr_numeric_const       go to state 366
    expr_assign              go to state 541
    expr_assign_pipe         go to state 542
    expr_named_call          go to state 367
    expr_method_call         go to state 368
    func_addr_expr           go to state 369
    expr_field               go to state 370
    expr                     go to state 543
    basic_type_declaration   go to state 372
    make_decl                go to state 373
    make_struct_decl         go to state 374
    make_dim_decl            go to state 375
    make_table_decl          go to state 376
    array_comprehension      go to state 377


State 391

  433 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' . enum_list '}'

    $default  reduce using rule 419 (enum_list)

    enum_list  go to state 544


State 392

  420 enum_list: enum_list "name" . ';'
  421          | enum_list "name" . '=' expr ';'

    '='  shift, and go to state 545
    ';'  shift, and go to state 546


State 393

  432 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name '{' enum_list '}' .

    $default  reduce using rule 432 (enum_declaration)


State 394

  435 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 547


State 395

  438 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 438 (structure_name)


State 396

  446 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@26 structure_name $@27 '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 371 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 548


State 397

  410 global_variable_declaration_list: global_variable_declaration_list $@23 optional_field_annotation . let_variable_declaration

    "name"  shift, and go to state 297

    let_variable_declaration     go to state 549
    variable_name_with_pos_list  go to state 299


State 398

  361 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 550


State 399

  448 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 551


State 400

  449 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  450                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 552


State 401

  403 let_variable_declaration: variable_name_with_pos_list ':' . type_declaration ';'
  404                         | variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr ';'
  405                         | variable_name_with_pos_list ':' . type_declaration copy_or_move_or_clone expr_pipe

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 553


State 402

  402 optional_ref: '&' .

    $default  reduce using rule 402 (optional_ref)


State 403

  406 let_variable_declaration: variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'
  407                         | variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 554
    ":="  shift, and go to state 555
    '='   shift, and go to state 556

    copy_or_move_or_clone  go to state 557


State 404

  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"
  515                 | "array" '<' $@32 type_declaration . '>' $@33

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 558
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 405

  518 type_declaration: "table" '<' $@34 table_type_pair . '>' $@35

    '>'  shift, and go to state 559


State 406

  490 table_type_pair: type_declaration .
  491                | type_declaration . ';' type_declaration
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    ';'         shift, and go to state 560
    '#'         shift, and go to state 226

    $default  reduce using rule 490 (table_type_pair)


State 407

  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"
  521                 | "iterator" '<' $@36 type_declaration . '>' $@37

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 561
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 408

  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  511                 | "smart_ptr" '<' $@30 type_declaration . '>' $@31
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 562
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 409

  484 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 484 (auto_type_declaration)


State 410

  486 bitfield_bits: bitfield_bits . ';' "name"
  489 bitfield_type_declaration: "bitfield" '<' $@28 bitfield_bits . '>' $@29

    '>'  shift, and go to state 563
    ';'  shift, and go to state 564


State 411

  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"
  525                 | "block" '<' $@38 type_declaration . '>' $@39

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 565
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 412

  528 type_declaration: "block" '<' $@40 optional_function_argument_list . optional_function_type '>' $@41

    ':'  shift, and go to state 388

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 566


State 413

  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"
  532                 | "function" '<' $@42 type_declaration . '>' $@43

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 567
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 414

  535 type_declaration: "function" '<' $@44 optional_function_argument_list . optional_function_type '>' $@45

    ':'  shift, and go to state 388

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 568


State 415

  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"
  539                 | "lambda" '<' $@46 type_declaration . '>' $@47

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 569
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 416

  542 type_declaration: "lambda" '<' $@48 optional_function_argument_list . optional_function_type '>' $@49

    ':'  shift, and go to state 388

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 570


State 417

  185 name_in_namespace: "name" .
  186                  | "name" . "::" "name"
  384 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 80
    ':'   shift, and go to state 571

    $default  reduce using rule 185 (name_in_namespace)


State 418

  385 tuple_type_list: tuple_type .

    $default  reduce using rule 385 (tuple_type_list)


State 419

  386 tuple_type_list: tuple_type_list . ';' tuple_type
  545 type_declaration: "tuple" '<' $@50 tuple_type_list . '>' $@51

    '>'  shift, and go to state 572
    ';'  shift, and go to state 573


State 420

  383 tuple_type: type_declaration .
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226

    $default  reduce using rule 383 (tuple_type)


State 421

  389 variant_type_list: variant_type_list . ';' variant_type
  548 type_declaration: "variant" '<' $@52 variant_type_list . '>' $@53

    '>'  shift, and go to state 574
    ';'  shift, and go to state 575


State 422

  498 type_declaration: type_declaration '-' '[' ']' .

    $default  reduce using rule 498 (type_declaration)


State 423

  189 expr_new: "new" type_declaration .
  190         | "new" type_declaration . '(' ')'
  191         | "new" type_declaration . '(' expr_list ')'
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '('         shift, and go to state 576
    '#'         shift, and go to state 226

    "??"      [reduce using rule 189 (expr_new)]
    '='       [reduce using rule 189 (expr_new)]
    '?'       [reduce using rule 189 (expr_new)]
    '&'       [reduce using rule 189 (expr_new)]
    '-'       [reduce using rule 189 (expr_new)]
    '['       [reduce using rule 189 (expr_new)]
    '('       [reduce using rule 189 (expr_new)]
    $default  reduce using rule 189 (expr_new)


State 424

  192 expr_new: "new" make_decl .

    $default  reduce using rule 192 (expr_new)


State 425

  220 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  221               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  222               | "typeinfo" '(' . name_in_namespace '<' "name" ';' "name" '>' expr ')'

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 577


State 426

  219 expr_type_decl: "type" '<' . $@10 type_declaration '>' $@11

    $default  reduce using rule 217 ($@10)

    $@10  go to state 578


State 427

  337 expr: "deref" '(' . expr ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 579
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 428

  210 expr_cast: "cast" '<' . $@4 type_declaration '>' $@5 expr

    $default  reduce using rule 208 ($@4)

    $@4  go to state 580


State 429

  213 expr_cast: "upcast" '<' . $@6 type_declaration '>' $@7 expr

    $default  reduce using rule 211 ($@6)

    $@6  go to state 581


State 430

  338 expr: "addr" '(' . expr ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 582
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 431

  216 expr_cast: "reinterpret" '<' . $@8 type_declaration '>' $@9 expr

    $default  reduce using rule 214 ($@8)

    $@8  go to state 583


State 432

  359 expr: "unsafe" '(' . expr ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 584
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 433

  339 expr: "generator" '<' . type_declaration '>' optional_capture_list '(' ')'
  340     | "generator" '<' . type_declaration '>' optional_capture_list '(' expr ')'

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 585


State 434

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  320     | "++" expr .
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 320 (expr)


State 435

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  321     | "--" expr .
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 321 (expr)


State 436

  587 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']'

    "name"  shift, and go to state 297

    variable_name_with_pos_list  go to state 586


State 437

  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"
  566 make_struct_decl: "[[" type_declaration . make_struct_dim optional_block ']' ']'
  567                 | "[[" type_declaration . optional_block ']' ']'
  568                 | "[[" type_declaration . '(' ')' optional_block ']' ']'
  569                 | "[[" type_declaration . '(' ')' make_struct_dim optional_block ']' ']'
  580 make_dim_decl: "[[" type_declaration . make_dim ']' ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "const"                           shift, and go to state 217
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "where"                           shift, and go to state 587
    "reinterpret"                     shift, and go to state 330
    "implicit"                        shift, and go to state 218
    "explicit"                        shift, and go to state 219
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "??"                              shift, and go to state 220
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 588
    "start of the string"             shift, and go to state 345
    '='                               shift, and go to state 221
    '?'                               shift, and go to state 222
    '&'                               shift, and go to state 223
    '-'                               shift, and go to state 589
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '['                               shift, and go to state 225
    '('                               shift, and go to state 590
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282
    '#'                               shift, and go to state 226

    $default  reduce using rule 564 (optional_block)

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 591
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_fields      go to state 592
    make_struct_dim         go to state 593
    optional_block          go to state 594
    make_struct_decl        go to state 374
    make_tuple              go to state 595
    make_map_tuple          go to state 596
    make_any_tuple          go to state 597
    make_dim                go to state 598
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 438

  588 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']'

    "name"  shift, and go to state 297

    variable_name_with_pos_list  go to state 599


State 439

  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"
  570 make_struct_decl: "[{" type_declaration . make_struct_dim optional_block '}' ']'
  571                 | "[{" type_declaration . '(' ')' make_struct_dim optional_block '}' ']'
  581 make_dim_decl: "[{" type_declaration . make_dim '}' ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "const"                           shift, and go to state 217
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "implicit"                        shift, and go to state 218
    "explicit"                        shift, and go to state 219
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "??"                              shift, and go to state 220
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 588
    "start of the string"             shift, and go to state 345
    '='                               shift, and go to state 221
    '?'                               shift, and go to state 222
    '&'                               shift, and go to state 223
    '-'                               shift, and go to state 589
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '['                               shift, and go to state 225
    '('                               shift, and go to state 600
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282
    '#'                               shift, and go to state 226

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 591
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_fields      go to state 592
    make_struct_dim         go to state 601
    make_struct_decl        go to state 374
    make_tuple              go to state 595
    make_map_tuple          go to state 596
    make_any_tuple          go to state 597
    make_dim                go to state 602
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 440

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  574 make_map_tuple: expr . "=>" expr
  575               | expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "=>"   shift, and go to state 603
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 575 (make_map_tuple)


State 441

  582 make_table: make_map_tuple .

    $default  reduce using rule 582 (make_table)


State 442

  583 make_table: make_table . ';' make_map_tuple
  584 make_table_decl: "{{" make_table . '}' '}'

    ';'  shift, and go to state 604
    '}'  shift, and go to state 605


State 443

   26 string_builder_body: string_builder_body . character_sequence
   27                    | string_builder_body . "{" expr "}"
   28 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 129
    STRING_CHARACTER_ESC  shift, and go to state 130
    "end of the string"   shift, and go to state 606
    "{"                   shift, and go to state 607

    character_sequence  go to state 608


State 444

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  297 expr: '-' expr .
  298     | expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 297 (expr)


State 445

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  296 expr: '+' expr .
  298     | expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 296 (expr)


State 446

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  336     | '*' expr .
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 336 (expr)


State 447

   32 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 31 ($@1)

    $@1  go to state 609


State 448

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  295 expr: '~' expr .
  298     | expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 295 (expr)


State 449

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  294 expr: '!' expr .
  298     | expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 294 (expr)


State 450

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  324     | '(' expr . ')'
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ')'    shift, and go to state 610


State 451

  230 block_or_lambda: '@' '@' .
  273 func_addr_expr: '@' '@' . name_in_namespace
  276               | '@' '@' . '<' $@12 type_declaration '>' $@13 name_in_namespace
  279               | '@' '@' . '<' $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51
    '<'     shift, and go to state 611

    $default  reduce using rule 230 (block_or_lambda)

    name_in_namespace  go to state 612


State 452

  358 expr: name_in_namespace "name" .

    $default  reduce using rule 358 (expr)


State 453

  270 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  332 expr: name_in_namespace '(' . ')'
  333     | name_in_namespace '(' . expr_list ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '['                               shift, and go to state 613
    '('                               shift, and go to state 353
    ')'                               shift, and go to state 614
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    expr_list               go to state 615
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 616
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 454

  240 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "[["  shift, and go to state 617

    $default  reduce using rule 237 (optional_capture_list)

    optional_capture_list  go to state 618


State 455

  345 expr: expr "is" . "type" '<' $@18 type_declaration '>' $@19
  346     | expr "is" . "name"

    "type"  shift, and go to state 619
    "name"  shift, and go to state 620


State 456

  347 expr: expr "as" . "name"

    "name"  shift, and go to state 621


State 457

  298 expr: expr "<<" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 622
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 458

  299 expr: expr ">>" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 623
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 459

  322 expr: expr "++" .

    $default  reduce using rule 322 (expr)


State 460

  323 expr: expr "--" .

    $default  reduce using rule 323 (expr)


State 461

  311 expr: expr "<=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 624
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 462

  312 expr: expr ">=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 625
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 463

  309 expr: expr "==" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 626
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 464

  310 expr: expr "!=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 627
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 465

  271 expr_method_call: expr "->" . "name" '(' ')'
  272                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 628


State 466

  341 expr: expr "??" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 629
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 467

  329 expr: expr "?." . "name"

    "name"  shift, and go to state 630


State 468

  327 expr: expr "?[" . expr ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 631
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 469

  356 expr: expr "<|" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 632
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 470

  357 expr: expr "|>" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 633
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 471

  300 expr: expr "<<<" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 634
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 472

  301 expr: expr ">>>" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 635
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 473

  316 expr: expr "&&" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 636
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 474

  317 expr: expr "||" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 637
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 475

  318 expr: expr "^^" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 638
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 476

  319 expr: expr ".." . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 639
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 477

  342 expr: expr '?' . expr ':' expr
  348     | expr '?' . "as" "name"

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "as"                              shift, and go to state 640
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 641
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 478

  314 expr: expr '|' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 642
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 479

  315 expr: expr '^' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 643
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 480

  313 expr: expr '&' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 644
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 481

  307 expr: expr '<' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 645
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 482

  308 expr: expr '>' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 646
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 483

  303 expr: expr '-' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 647
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 484

  302 expr: expr '+' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 648
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 485

  304 expr: expr '*' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 649
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 486

  305 expr: expr '/' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 650
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 487

  306 expr: expr '%' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 651
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 488

  280 expr_field: expr '.' . "name"
  281           | expr '.' . '.' "name"
  284           | expr '.' . $@16 error $@17
  326 expr: expr '.' . '[' expr ']'
  328     | expr '.' . "?[" expr ']'
  330     | expr '.' . "?." "name"

    "?."    shift, and go to state 652
    "?["    shift, and go to state 653
    "name"  shift, and go to state 654
    '.'     shift, and go to state 655
    '['     shift, and go to state 656

    $default  reduce using rule 282 ($@16)

    $@16  go to state 657


State 489

  325 expr: expr '[' . expr ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 658
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 490

  496 type_declaration: type_declaration '[' expr ']' .

    $default  reduce using rule 496 (type_declaration)


State 491

  334 expr: basic_type_declaration '(' . ')'
  335     | basic_type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    ')'                               shift, and go to state 659
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    expr_list               go to state 660
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 616
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 492

  387 variant_type: "name" ':' type_declaration .
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226

    $default  reduce using rule 387 (variant_type)


State 493

  551 variant_alias_declaration: "variant" $@54 "name" $@55 '{' variant_type_list ';' '}' .

    $default  reduce using rule 551 (variant_alias_declaration)


State 494

  389 variant_type_list: variant_type_list ';' variant_type .

    $default  reduce using rule 389 (variant_type_list)


State 495

  380 function_argument_declaration: optional_field_annotation "var" . variable_declaration

    "name"  shift, and go to state 297

    variable_declaration         go to state 661
    variable_name_with_pos_list  go to state 497


State 496

  379 function_argument_declaration: optional_field_annotation variable_declaration .

    $default  reduce using rule 379 (function_argument_declaration)


State 497

  392 variable_declaration: variable_name_with_pos_list .
  393                     | variable_name_with_pos_list . '&'
  394                     | variable_name_with_pos_list . ':' type_declaration
  395                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  396                     | variable_name_with_pos_list . copy_or_move expr
  397                     | variable_name_with_pos_list . copy_or_move expr_pipe
  449 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  450                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 662
    ','   shift, and go to state 400
    '='   shift, and go to state 663
    ':'   shift, and go to state 664
    '&'   shift, and go to state 665

    $default  reduce using rule 392 (variable_declaration)

    copy_or_move  go to state 666


State 498

   97 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 97 (optional_function_argument_list)


State 499

  382 function_argument_list: function_argument_list ';' . function_argument_declaration

    "[["  shift, and go to state 199

    $default  reduce using rule 360 (optional_field_annotation)

    optional_field_annotation      go to state 385
    function_argument_declaration  go to state 667


State 500

   99 optional_function_type: ':' type_declaration .
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226

    $default  reduce using rule 99 (optional_function_type)


State 501

  181 expressions: expressions error .

    $default  reduce using rule 181 (expressions)


State 502

   61 expression_while_loop: "while" . expr expression_block

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 668
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 503

   56 if_or_static_if: "if" .

    $default  reduce using rule 56 (if_or_static_if)


State 504

   57 if_or_static_if: "static_if" .

    $default  reduce using rule 57 (if_or_static_if)


State 505

   59 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list ';' expression_block

    "name"  shift, and go to state 297

    variable_name_with_pos_list  go to state 669


State 506

  195 expression_return: "return" . ';'
  196                  | "return" . expr ';'
  197                  | "return" . "<-" expr ';'
  198                  | "return" . expr_pipe
  199                  | "return" . "<-" expr_pipe

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "<-"                              shift, and go to state 670
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    ';'                               shift, and go to state 671
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    expr_pipe               go to state 672
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_assign             go to state 673
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 674
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 507

  193 expression_break: "break" .

    $default  reduce using rule 193 (expression_break)


State 508

  204 expression_try_catch: "try" . expression_block "recover" expression_block

    '{'  shift, and go to state 282

    expression_block  go to state 675


State 509

  188 expression_delete: "delete" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 676
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 510

   62 expression_with: "with" . expr expression_block

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 677
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 511

   64 expression_with_alias: "assume" . "name" '=' $@2 expr

    "name"  shift, and go to state 678


State 512

  194 expression_continue: "continue" .

    $default  reduce using rule 194 (expression_continue)


State 513

  178 expression_any: "pass" . ';'

    ';'  shift, and go to state 679


State 514

   48 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 680


State 515

   49 expression_goto: "goto" . "label" "integer constant"
   50                | "goto" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "label"                           shift, and go to state 681
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 682
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 516

   60 expression_unsafe: "unsafe" . expression_block
  359 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 432
    '{'  shift, and go to state 282

    expression_block  go to state 683


State 517

  200 expression_yield: "yield" . expr ';'
  201                 | "yield" . "<-" expr ';'
  202                 | "yield" . expr_pipe
  203                 | "yield" . "<-" expr_pipe

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "<-"                              shift, and go to state 684
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    expr_pipe               go to state 685
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_assign             go to state 673
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 686
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 518

  183 expr_pipe: "@ <|" . expr_block

    '$'  shift, and go to state 354
    '@'  shift, and go to state 687
    '{'  shift, and go to state 282

    expression_block  go to state 358
    block_or_lambda   go to state 364
    expr_block        go to state 688


State 519

  184 expr_pipe: "@@ <|" . expr_block

    '$'  shift, and go to state 354
    '@'  shift, and go to state 687
    '{'  shift, and go to state 282

    expression_block  go to state 358
    block_or_lambda   go to state 364
    expr_block        go to state 689


State 520

  159 expression_any: ';' .

    $default  reduce using rule 159 (expression_any)


State 521

  157 expression_block: '{' expressions '}' .
  158                 | '{' expressions '}' . "finally" '{' expressions '}'

    "finally"  shift, and go to state 690

    $default  reduce using rule 157 (expression_block)


State 522

  176 expression_any: expression_label . ';'

    ';'  shift, and go to state 691


State 523

  177 expression_any: expression_goto . ';'

    ';'  shift, and go to state 692


State 524

   58 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 693
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 525

  174 expression_any: expression_if_then_else .

    $default  reduce using rule 174 (expression_any)


State 526

  169 expression_any: expression_for_loop .

    $default  reduce using rule 169 (expression_any)


State 527

  166 expression_any: expression_unsafe .

    $default  reduce using rule 166 (expression_any)


State 528

  165 expression_any: expression_while_loop .

    $default  reduce using rule 165 (expression_any)


State 529

  167 expression_any: expression_with .

    $default  reduce using rule 167 (expression_any)


State 530

  168 expression_any: expression_with_alias .

    $default  reduce using rule 168 (expression_any)


State 531

  180 expressions: expressions expression_any .

    $default  reduce using rule 180 (expressions)


State 532

  160 expression_any: expr_pipe .

    $default  reduce using rule 160 (expression_any)


State 533

  163 expression_any: expression_delete . ';'

    ';'  shift, and go to state 694


State 534

  170 expression_any: expression_break . ';'

    ';'  shift, and go to state 695


State 535

  171 expression_any: expression_continue . ';'

    ';'  shift, and go to state 696


State 536

  172 expression_any: expression_return .

    $default  reduce using rule 172 (expression_any)


State 537

  173 expression_any: expression_yield .

    $default  reduce using rule 173 (expression_any)


State 538

  175 expression_any: expression_try_catch .

    $default  reduce using rule 175 (expression_any)


State 539

  207 expression_let: kwd_let . let_variable_declaration

    "name"  shift, and go to state 297

    let_variable_declaration     go to state 697
    variable_name_with_pos_list  go to state 299


State 540

  164 expression_any: expression_let .

    $default  reduce using rule 164 (expression_any)


State 541

  162 expression_any: expr_assign . ';'
  182 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 698
    ';'    shift, and go to state 699


State 542

  161 expression_any: expr_assign_pipe .

    $default  reduce using rule 161 (expression_any)


State 543

  247 expr_assign: expr .
  248            | expr . '=' expr
  249            | expr . "<-" expr
  250            | expr . ":=" expr
  251            | expr . "&=" expr
  252            | expr . "|=" expr
  253            | expr . "^=" expr
  254            | expr . "&&=" expr
  255            | expr . "||=" expr
  256            | expr . "^^=" expr
  257            | expr . "+=" expr
  258            | expr . "-=" expr
  259            | expr . "*=" expr
  260            | expr . "/=" expr
  261            | expr . "%=" expr
  262            | expr . "<<=" expr
  263            | expr . ">>=" expr
  264            | expr . "<<<=" expr
  265            | expr . ">>>=" expr
  266 expr_assign_pipe: expr . '=' "@ <|" expr
  267                 | expr . '=' "@@ <|" expr
  268                 | expr . "<-" "@ <|" expr
  269                 | expr . "<-" "@@ <|" expr
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"    shift, and go to state 455
    "as"    shift, and go to state 456
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 457
    ">>"    shift, and go to state 458
    "++"    shift, and go to state 459
    "--"    shift, and go to state 460
    "<="    shift, and go to state 461
    "<<="   shift, and go to state 708
    ">>="   shift, and go to state 709
    ">="    shift, and go to state 462
    "=="    shift, and go to state 463
    "!="    shift, and go to state 464
    "->"    shift, and go to state 465
    "<-"    shift, and go to state 710
    "??"    shift, and go to state 466
    "?."    shift, and go to state 467
    "?["    shift, and go to state 468
    "<|"    shift, and go to state 469
    "|>"    shift, and go to state 470
    ":="    shift, and go to state 711
    "<<<"   shift, and go to state 471
    ">>>"   shift, and go to state 472
    "<<<="  shift, and go to state 712
    ">>>="  shift, and go to state 713
    "&&"    shift, and go to state 473
    "||"    shift, and go to state 474
    "^^"    shift, and go to state 475
    "&&="   shift, and go to state 714
    "||="   shift, and go to state 715
    "^^="   shift, and go to state 716
    ".."    shift, and go to state 476
    '='     shift, and go to state 717
    '?'     shift, and go to state 477
    '|'     shift, and go to state 478
    '^'     shift, and go to state 479
    '&'     shift, and go to state 480
    '<'     shift, and go to state 481
    '>'     shift, and go to state 482
    '-'     shift, and go to state 483
    '+'     shift, and go to state 484
    '*'     shift, and go to state 485
    '/'     shift, and go to state 486
    '%'     shift, and go to state 487
    '.'     shift, and go to state 488
    '['     shift, and go to state 489

    $default  reduce using rule 247 (expr_assign)


State 544

  420 enum_list: enum_list . "name" ';'
  421          | enum_list . "name" '=' expr ';'
  433 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list . '}'

    "name"  shift, and go to state 392
    '}'     shift, and go to state 718


State 545

  421 enum_list: enum_list "name" '=' . expr ';'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 719
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 546

  420 enum_list: enum_list "name" ';' .

    $default  reduce using rule 420 (enum_list)


State 547

  435 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 435 (optional_structure_parent)


State 548

  373 struct_variable_declaration_list: struct_variable_declaration_list . $@20 structure_variable_declaration ';'
  375                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@21 function_declaration_header ';'
  377                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@22 function_declaration_header expression_block
  378                                 | struct_variable_declaration_list . '[' annotation_list ']' ';'
  446 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@26 structure_name $@27 '{' struct_variable_declaration_list . '}'

    '['  shift, and go to state 720
    '}'  shift, and go to state 721

    "def"     reduce using rule 93 (optional_annotation_list)
    $default  reduce using rule 372 ($@20)

    optional_annotation_list  go to state 722
    $@20                      go to state 723


State 549

  410 global_variable_declaration_list: global_variable_declaration_list $@23 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 410 (global_variable_declaration_list)


State 550

  361 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 361 (optional_field_annotation)


State 551

  448 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 448 (variable_name_with_pos_list)


State 552

  449 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  450                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 724

    $default  reduce using rule 449 (variable_name_with_pos_list)


State 553

  403 let_variable_declaration: variable_name_with_pos_list ':' type_declaration . ';'
  404                         | variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr ';'
  405                         | variable_name_with_pos_list ':' type_declaration . copy_or_move_or_clone expr_pipe
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "<-"        shift, and go to state 554
    "??"        shift, and go to state 220
    ":="        shift, and go to state 555
    '='         shift, and go to state 725
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    ';'         shift, and go to state 726
    '#'         shift, and go to state 226

    copy_or_move_or_clone  go to state 727


State 554

  399 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 399 (copy_or_move_or_clone)


State 555

  400 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 400 (copy_or_move_or_clone)


State 556

  398 copy_or_move_or_clone: '=' .

    $default  reduce using rule 398 (copy_or_move_or_clone)


State 557

  406 let_variable_declaration: variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'
  407                         | variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    expr_pipe               go to state 728
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_assign             go to state 673
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 729
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 558

  515 type_declaration: "array" '<' $@32 type_declaration '>' . $@33

    $default  reduce using rule 514 ($@33)

    $@33  go to state 730


State 559

  518 type_declaration: "table" '<' $@34 table_type_pair '>' . $@35

    $default  reduce using rule 517 ($@35)

    $@35  go to state 731


State 560

  491 table_type_pair: type_declaration ';' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 732


State 561

  521 type_declaration: "iterator" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 520 ($@37)

    $@37  go to state 733


State 562

  511 type_declaration: "smart_ptr" '<' $@30 type_declaration '>' . $@31

    $default  reduce using rule 510 ($@31)

    $@31  go to state 734


State 563

  489 bitfield_type_declaration: "bitfield" '<' $@28 bitfield_bits '>' . $@29

    $default  reduce using rule 488 ($@29)

    $@29  go to state 735


State 564

  486 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 378


State 565

  525 type_declaration: "block" '<' $@38 type_declaration '>' . $@39

    $default  reduce using rule 524 ($@39)

    $@39  go to state 736


State 566

  528 type_declaration: "block" '<' $@40 optional_function_argument_list optional_function_type . '>' $@41

    '>'  shift, and go to state 737


State 567

  532 type_declaration: "function" '<' $@42 type_declaration '>' . $@43

    $default  reduce using rule 531 ($@43)

    $@43  go to state 738


State 568

  535 type_declaration: "function" '<' $@44 optional_function_argument_list optional_function_type . '>' $@45

    '>'  shift, and go to state 739


State 569

  539 type_declaration: "lambda" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 538 ($@47)

    $@47  go to state 740


State 570

  542 type_declaration: "lambda" '<' $@48 optional_function_argument_list optional_function_type . '>' $@49

    '>'  shift, and go to state 741


State 571

  384 tuple_type: "name" ':' . type_declaration

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 742


State 572

  545 type_declaration: "tuple" '<' $@50 tuple_type_list '>' . $@51

    $default  reduce using rule 544 ($@51)

    $@51  go to state 743


State 573

  386 tuple_type_list: tuple_type_list ';' . tuple_type

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 417

    name_in_namespace           go to state 176
    tuple_type                  go to state 744
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 420


State 574

  548 type_declaration: "variant" '<' $@52 variant_type_list '>' . $@53

    $default  reduce using rule 547 ($@53)

    $@53  go to state 745


State 575

  389 variant_type_list: variant_type_list ';' . variant_type

    "name"  shift, and go to state 228

    variant_type  go to state 494


State 576

  190 expr_new: "new" type_declaration '(' . ')'
  191         | "new" type_declaration '(' . expr_list ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    ')'                               shift, and go to state 746
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    expr_list               go to state 747
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 616
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 577

  220 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  221               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  222               | "typeinfo" '(' name_in_namespace . '<' "name" ';' "name" '>' expr ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '<'                               shift, and go to state 748
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 749
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 578

  219 expr_type_decl: "type" '<' $@10 . type_declaration '>' $@11

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 750


State 579

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  337     | "deref" '(' expr . ')'
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ')'    shift, and go to state 751


State 580

  210 expr_cast: "cast" '<' $@4 . type_declaration '>' $@5 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 752


State 581

  213 expr_cast: "upcast" '<' $@6 . type_declaration '>' $@7 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 753


State 582

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  338     | "addr" '(' expr . ')'
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ')'    shift, and go to state 754


State 583

  216 expr_cast: "reinterpret" '<' $@8 . type_declaration '>' $@9 expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 755


State 584

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  359     | "unsafe" '(' expr . ')'

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ')'    shift, and go to state 756


State 585

  339 expr: "generator" '<' type_declaration . '>' optional_capture_list '(' ')'
  340     | "generator" '<' type_declaration . '>' optional_capture_list '(' expr ')'
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 757
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 586

  449 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  450                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  587 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 758
    ','   shift, and go to state 400


State 587

  565 optional_block: "where" . expr_block

    '$'  shift, and go to state 354
    '@'  shift, and go to state 687
    '{'  shift, and go to state 282

    expression_block  go to state 358
    block_or_lambda   go to state 364
    expr_block        go to state 759


State 588

  185 name_in_namespace: "name" .
  186                  | "name" . "::" "name"
  558 make_struct_fields: "name" . copy_or_move expr
  559                   | "name" . ":=" expr

    "<-"  shift, and go to state 662
    ":="  shift, and go to state 760
    "::"  shift, and go to state 80
    '='   shift, and go to state 663

    $default  reduce using rule 185 (name_in_namespace)

    copy_or_move  go to state 761


State 589

  297 expr: '-' . expr
  498 type_declaration: type_declaration '-' . '[' ']'
  501                 | type_declaration '-' . "const"
  503                 | type_declaration '-' . '&'
  506                 | type_declaration '-' . '#'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "const"                           shift, and go to state 316
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '&'                               shift, and go to state 317
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '['                               shift, and go to state 318
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282
    '#'                               shift, and go to state 319

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 444
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 590

  324 expr: '(' . expr ')'
  568 make_struct_decl: "[[" type_declaration '(' . ')' optional_block ']' ']'
  569                 | "[[" type_declaration '(' . ')' make_struct_dim optional_block ']' ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    ')'                               shift, and go to state 762
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 450
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 591

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  572 make_tuple: expr .
  574 make_map_tuple: expr . "=>" expr
  575               | expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "=>"   shift, and go to state 603
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    ']'       reduce using rule 572 (make_tuple)
    ']'       [reduce using rule 575 (make_map_tuple)]
    ';'       reduce using rule 572 (make_tuple)
    ';'       [reduce using rule 575 (make_map_tuple)]
    '}'       reduce using rule 572 (make_tuple)
    '}'       [reduce using rule 575 (make_map_tuple)]
    $default  reduce using rule 572 (make_tuple)


State 592

  560 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  561                   | make_struct_fields . ',' "name" ":=" expr
  562 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 763

    $default  reduce using rule 562 (make_struct_dim)


State 593

  563 make_struct_dim: make_struct_dim . ';' make_struct_fields
  566 make_struct_decl: "[[" type_declaration make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 587
    ';'      shift, and go to state 764

    $default  reduce using rule 564 (optional_block)

    optional_block  go to state 765


State 594

  567 make_struct_decl: "[[" type_declaration optional_block . ']' ']'

    ']'  shift, and go to state 766


State 595

  573 make_tuple: make_tuple . ',' expr
  576 make_any_tuple: make_tuple .

    ','  shift, and go to state 767

    $default  reduce using rule 576 (make_any_tuple)


State 596

  577 make_any_tuple: make_map_tuple .

    $default  reduce using rule 577 (make_any_tuple)


State 597

  578 make_dim: make_any_tuple .

    $default  reduce using rule 578 (make_dim)


State 598

  579 make_dim: make_dim . ';' make_any_tuple
  580 make_dim_decl: "[[" type_declaration make_dim . ']' ']'

    ']'  shift, and go to state 768
    ';'  shift, and go to state 769


State 599

  449 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  450                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  588 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list ';' expr array_comprehension_where '}' ']'

    "in"  shift, and go to state 770
    ','   shift, and go to state 400


State 600

  324 expr: '(' . expr ')'
  571 make_struct_decl: "[{" type_declaration '(' . ')' make_struct_dim optional_block '}' ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    ')'                               shift, and go to state 771
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 450
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 601

  563 make_struct_dim: make_struct_dim . ';' make_struct_fields
  570 make_struct_decl: "[{" type_declaration make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 587
    ';'      shift, and go to state 764

    $default  reduce using rule 564 (optional_block)

    optional_block  go to state 772


State 602

  579 make_dim: make_dim . ';' make_any_tuple
  581 make_dim_decl: "[{" type_declaration make_dim . '}' ']'

    ';'  shift, and go to state 769
    '}'  shift, and go to state 773


State 603

  574 make_map_tuple: expr "=>" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 774
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 604

  583 make_table: make_table ';' . make_map_tuple

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 440
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_map_tuple          go to state 775
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 605

  584 make_table_decl: "{{" make_table '}' . '}'

    '}'  shift, and go to state 776


State 606

   28 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 28 (string_builder)


State 607

   27 string_builder_body: string_builder_body "{" . expr "}"

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 777
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 608

   22 character_sequence: character_sequence . STRING_CHARACTER
   23                   | character_sequence . STRING_CHARACTER_ESC
   26 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 201
    STRING_CHARACTER_ESC  shift, and go to state 202

    STRING_CHARACTER      [reduce using rule 26 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 26 (string_builder_body)]
    $default              reduce using rule 26 (string_builder_body)


State 609

   32 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 778

    reader_character_sequence  go to state 779


State 610

  324 expr: '(' expr ')' .

    $default  reduce using rule 324 (expr)


State 611

  276 func_addr_expr: '@' '@' '<' . $@12 type_declaration '>' $@13 name_in_namespace
  279               | '@' '@' '<' . $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

    ':'       reduce using rule 277 ($@14)
    '>'       reduce using rule 277 ($@14)
    '('       reduce using rule 277 ($@14)
    $default  reduce using rule 274 ($@12)

    $@12  go to state 780
    $@14  go to state 781


State 612

  273 func_addr_expr: '@' '@' name_in_namespace .

    $default  reduce using rule 273 (func_addr_expr)


State 613

  270 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'

    "name"  shift, and go to state 782

    make_struct_fields  go to state 783


State 614

  332 expr: name_in_namespace '(' ')' .

    $default  reduce using rule 332 (expr)


State 615

  224 expr_list: expr_list . ',' expr
  333 expr: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 784
    ')'  shift, and go to state 785


State 616

  223 expr_list: expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 223 (expr_list)


State 617

  238 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"  shift, and go to state 786
    ":="  shift, and go to state 787
    '='   shift, and go to state 788
    '&'   shift, and go to state 789

    capture_entry  go to state 790
    capture_list   go to state 791


State 618

  240 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 280

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 792


State 619

  345 expr: expr "is" "type" . '<' $@18 type_declaration '>' $@19

    '<'  shift, and go to state 793


State 620

  346 expr: expr "is" "name" .

    $default  reduce using rule 346 (expr)


State 621

  347 expr: expr "as" "name" .

    $default  reduce using rule 347 (expr)


State 622

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  298     | expr "<<" expr .
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '-'   shift, and go to state 483
    '+'   shift, and go to state 484
    '*'   shift, and go to state 485
    '/'   shift, and go to state 486
    '%'   shift, and go to state 487
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 298 (expr)


State 623

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  299     | expr ">>" expr .
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '-'   shift, and go to state 483
    '+'   shift, and go to state 484
    '*'   shift, and go to state 485
    '/'   shift, and go to state 486
    '%'   shift, and go to state 487
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 299 (expr)


State 624

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  311     | expr "<=" expr .
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 311 (expr)


State 625

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  312     | expr ">=" expr .
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 312 (expr)


State 626

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  309     | expr "==" expr .
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 309 (expr)


State 627

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  310     | expr "!=" expr .
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 310 (expr)


State 628

  271 expr_method_call: expr "->" "name" . '(' ')'
  272                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 794


State 629

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  341     | expr "??" expr .
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 341 (expr)


State 630

  329 expr: expr "?." "name" .

    $default  reduce using rule 329 (expr)


State 631

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  327     | expr "?[" expr . ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ']'    shift, and go to state 795


State 632

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  356     | expr "<|" expr .
  357     | expr . "|>" expr

    "->"  shift, and go to state 465
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 356 (expr)


State 633

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  357     | expr "|>" expr .

    "->"  shift, and go to state 465
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 357 (expr)


State 634

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  300     | expr "<<<" expr .
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '-'   shift, and go to state 483
    '+'   shift, and go to state 484
    '*'   shift, and go to state 485
    '/'   shift, and go to state 486
    '%'   shift, and go to state 487
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 300 (expr)


State 635

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  301     | expr ">>>" expr .
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '-'   shift, and go to state 483
    '+'   shift, and go to state 484
    '*'   shift, and go to state 485
    '/'   shift, and go to state 486
    '%'   shift, and go to state 487
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 301 (expr)


State 636

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  316     | expr "&&" expr .
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 316 (expr)


State 637

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  317     | expr "||" expr .
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "^^"   shift, and go to state 475
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 317 (expr)


State 638

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  318     | expr "^^" expr .
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 318 (expr)


State 639

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  319     | expr ".." expr .
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    ".."  error (nonassociative)

    $default  reduce using rule 319 (expr)


State 640

  348 expr: expr '?' "as" . "name"

    "name"  shift, and go to state 796


State 641

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  342     | expr '?' expr . ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    ':'    shift, and go to state 797
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489


State 642

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  314     | expr '|' expr .
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 314 (expr)


State 643

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  315     | expr '^' expr .
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 315 (expr)


State 644

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  313     | expr '&' expr .
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 313 (expr)


State 645

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  307     | expr '<' expr .
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 307 (expr)


State 646

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  308     | expr '>' expr .
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 308 (expr)


State 647

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  303     | expr '-' expr .
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '*'   shift, and go to state 485
    '/'   shift, and go to state 486
    '%'   shift, and go to state 487
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 303 (expr)


State 648

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  302     | expr '+' expr .
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '*'   shift, and go to state 485
    '/'   shift, and go to state 486
    '%'   shift, and go to state 487
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 302 (expr)


State 649

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  304     | expr '*' expr .
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 304 (expr)


State 650

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  305     | expr '/' expr .
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 305 (expr)


State 651

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  306     | expr '%' expr .
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"  shift, and go to state 455
    "as"  shift, and go to state 456
    "++"  shift, and go to state 459
    "--"  shift, and go to state 460
    "->"  shift, and go to state 465
    "??"  shift, and go to state 466
    "?."  shift, and go to state 467
    "?["  shift, and go to state 468
    "<|"  shift, and go to state 469
    "|>"  shift, and go to state 470
    '.'   shift, and go to state 488
    '['   shift, and go to state 489

    $default  reduce using rule 306 (expr)


State 652

  330 expr: expr '.' "?." . "name"

    "name"  shift, and go to state 798


State 653

  328 expr: expr '.' "?[" . expr ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 799
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 654

  280 expr_field: expr '.' "name" .

    $default  reduce using rule 280 (expr_field)


State 655

  281 expr_field: expr '.' '.' . "name"

    "name"  shift, and go to state 800


State 656

  326 expr: expr '.' '[' . expr ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 801
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 657

  284 expr_field: expr '.' $@16 . error $@17

    error  shift, and go to state 802


State 658

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  325     | expr '[' expr . ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ']'    shift, and go to state 803


State 659

  334 expr: basic_type_declaration '(' ')' .

    $default  reduce using rule 334 (expr)


State 660

  224 expr_list: expr_list . ',' expr
  335 expr: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 784
    ')'  shift, and go to state 804


State 661

  380 function_argument_declaration: optional_field_annotation "var" variable_declaration .

    $default  reduce using rule 380 (function_argument_declaration)


State 662

  391 copy_or_move: "<-" .

    $default  reduce using rule 391 (copy_or_move)


State 663

  390 copy_or_move: '=' .

    $default  reduce using rule 390 (copy_or_move)


State 664

  394 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  395                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 805


State 665

  393 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 393 (variable_declaration)


State 666

  396 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  397                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    expr_pipe               go to state 806
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_assign             go to state 673
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 807
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 667

  382 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 382 (function_argument_list)


State 668

   61 expression_while_loop: "while" expr . expression_block
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    '{'    shift, and go to state 282

    expression_block  go to state 808


State 669

   59 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list ';' expression_block
  449 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  450                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 809
    ','   shift, and go to state 400


State 670

  197 expression_return: "return" "<-" . expr ';'
  199                  | "return" "<-" . expr_pipe

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    expr_pipe               go to state 810
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_assign             go to state 673
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 811
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 671

  195 expression_return: "return" ';' .

    $default  reduce using rule 195 (expression_return)


State 672

  198 expression_return: "return" expr_pipe .

    $default  reduce using rule 198 (expression_return)


State 673

  182 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 698


State 674

  196 expression_return: "return" expr . ';'
  247 expr_assign: expr .
  248            | expr . '=' expr
  249            | expr . "<-" expr
  250            | expr . ":=" expr
  251            | expr . "&=" expr
  252            | expr . "|=" expr
  253            | expr . "^=" expr
  254            | expr . "&&=" expr
  255            | expr . "||=" expr
  256            | expr . "^^=" expr
  257            | expr . "+=" expr
  258            | expr . "-=" expr
  259            | expr . "*=" expr
  260            | expr . "/=" expr
  261            | expr . "%=" expr
  262            | expr . "<<=" expr
  263            | expr . ">>=" expr
  264            | expr . "<<<=" expr
  265            | expr . ">>>=" expr
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"    shift, and go to state 455
    "as"    shift, and go to state 456
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 457
    ">>"    shift, and go to state 458
    "++"    shift, and go to state 459
    "--"    shift, and go to state 460
    "<="    shift, and go to state 461
    "<<="   shift, and go to state 708
    ">>="   shift, and go to state 709
    ">="    shift, and go to state 462
    "=="    shift, and go to state 463
    "!="    shift, and go to state 464
    "->"    shift, and go to state 465
    "<-"    shift, and go to state 812
    "??"    shift, and go to state 466
    "?."    shift, and go to state 467
    "?["    shift, and go to state 468
    "<|"    shift, and go to state 469
    "|>"    shift, and go to state 470
    ":="    shift, and go to state 711
    "<<<"   shift, and go to state 471
    ">>>"   shift, and go to state 472
    "<<<="  shift, and go to state 712
    ">>>="  shift, and go to state 713
    "&&"    shift, and go to state 473
    "||"    shift, and go to state 474
    "^^"    shift, and go to state 475
    "&&="   shift, and go to state 714
    "||="   shift, and go to state 715
    "^^="   shift, and go to state 716
    ".."    shift, and go to state 476
    '='     shift, and go to state 813
    '?'     shift, and go to state 477
    '|'     shift, and go to state 478
    '^'     shift, and go to state 479
    '&'     shift, and go to state 480
    '<'     shift, and go to state 481
    '>'     shift, and go to state 482
    '-'     shift, and go to state 483
    '+'     shift, and go to state 484
    '*'     shift, and go to state 485
    '/'     shift, and go to state 486
    '%'     shift, and go to state 487
    '.'     shift, and go to state 488
    '['     shift, and go to state 489
    ';'     shift, and go to state 814

    $default  reduce using rule 247 (expr_assign)


State 675

  204 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 815


State 676

  188 expression_delete: "delete" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 188 (expression_delete)


State 677

   62 expression_with: "with" expr . expression_block
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    '{'    shift, and go to state 282

    expression_block  go to state 816


State 678

   64 expression_with_alias: "assume" "name" . '=' $@2 expr

    '='  shift, and go to state 817


State 679

  178 expression_any: "pass" ';' .

    $default  reduce using rule 178 (expression_any)


State 680

   48 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 818


State 681

   49 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 819


State 682

   50 expression_goto: "goto" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 50 (expression_goto)


State 683

   60 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 60 (expression_unsafe)


State 684

  201 expression_yield: "yield" "<-" . expr ';'
  203                 | "yield" "<-" . expr_pipe

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    expr_pipe               go to state 820
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_assign             go to state 673
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 821
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 685

  202 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 202 (expression_yield)


State 686

  200 expression_yield: "yield" expr . ';'
  247 expr_assign: expr .
  248            | expr . '=' expr
  249            | expr . "<-" expr
  250            | expr . ":=" expr
  251            | expr . "&=" expr
  252            | expr . "|=" expr
  253            | expr . "^=" expr
  254            | expr . "&&=" expr
  255            | expr . "||=" expr
  256            | expr . "^^=" expr
  257            | expr . "+=" expr
  258            | expr . "-=" expr
  259            | expr . "*=" expr
  260            | expr . "/=" expr
  261            | expr . "%=" expr
  262            | expr . "<<=" expr
  263            | expr . ">>=" expr
  264            | expr . "<<<=" expr
  265            | expr . ">>>=" expr
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"    shift, and go to state 455
    "as"    shift, and go to state 456
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 457
    ">>"    shift, and go to state 458
    "++"    shift, and go to state 459
    "--"    shift, and go to state 460
    "<="    shift, and go to state 461
    "<<="   shift, and go to state 708
    ">>="   shift, and go to state 709
    ">="    shift, and go to state 462
    "=="    shift, and go to state 463
    "!="    shift, and go to state 464
    "->"    shift, and go to state 465
    "<-"    shift, and go to state 812
    "??"    shift, and go to state 466
    "?."    shift, and go to state 467
    "?["    shift, and go to state 468
    "<|"    shift, and go to state 469
    "|>"    shift, and go to state 470
    ":="    shift, and go to state 711
    "<<<"   shift, and go to state 471
    ">>>"   shift, and go to state 472
    "<<<="  shift, and go to state 712
    ">>>="  shift, and go to state 713
    "&&"    shift, and go to state 473
    "||"    shift, and go to state 474
    "^^"    shift, and go to state 475
    "&&="   shift, and go to state 714
    "||="   shift, and go to state 715
    "^^="   shift, and go to state 716
    ".."    shift, and go to state 476
    '='     shift, and go to state 813
    '?'     shift, and go to state 477
    '|'     shift, and go to state 478
    '^'     shift, and go to state 479
    '&'     shift, and go to state 480
    '<'     shift, and go to state 481
    '>'     shift, and go to state 482
    '-'     shift, and go to state 483
    '+'     shift, and go to state 484
    '*'     shift, and go to state 485
    '/'     shift, and go to state 486
    '%'     shift, and go to state 487
    '.'     shift, and go to state 488
    '['     shift, and go to state 489
    ';'     shift, and go to state 822

    $default  reduce using rule 247 (expr_assign)


State 687

  229 block_or_lambda: '@' .
  230                | '@' . '@'

    '@'  shift, and go to state 823

    $default  reduce using rule 229 (block_or_lambda)


State 688

  183 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 183 (expr_pipe)


State 689

  184 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 184 (expr_pipe)


State 690

  158 expression_block: '{' expressions '}' "finally" . '{' expressions '}'

    '{'  shift, and go to state 824


State 691

  176 expression_any: expression_label ';' .

    $default  reduce using rule 176 (expression_any)


State 692

  177 expression_any: expression_goto ';' .

    $default  reduce using rule 177 (expression_any)


State 693

   58 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    '{'    shift, and go to state 282

    expression_block  go to state 825


State 694

  163 expression_any: expression_delete ';' .

    $default  reduce using rule 163 (expression_any)


State 695

  170 expression_any: expression_break ';' .

    $default  reduce using rule 170 (expression_any)


State 696

  171 expression_any: expression_continue ';' .

    $default  reduce using rule 171 (expression_any)


State 697

  207 expression_let: kwd_let let_variable_declaration .

    $default  reduce using rule 207 (expression_let)


State 698

  182 expr_pipe: expr_assign " <|" . expr_block

    '$'  shift, and go to state 354
    '@'  shift, and go to state 687
    '{'  shift, and go to state 282

    expression_block  go to state 358
    block_or_lambda   go to state 364
    expr_block        go to state 826


State 699

  162 expression_any: expr_assign ';' .

    $default  reduce using rule 162 (expression_any)


State 700

  257 expr_assign: expr "+=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 827
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 701

  258 expr_assign: expr "-=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 828
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 702

  260 expr_assign: expr "/=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 829
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 703

  259 expr_assign: expr "*=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 830
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 704

  261 expr_assign: expr "%=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 831
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 705

  251 expr_assign: expr "&=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 832
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 706

  252 expr_assign: expr "|=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 833
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 707

  253 expr_assign: expr "^=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 834
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 708

  262 expr_assign: expr "<<=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 835
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 709

  263 expr_assign: expr ">>=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 836
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 710

  249 expr_assign: expr "<-" . expr
  268 expr_assign_pipe: expr "<-" . "@ <|" expr
  269                 | expr "<-" . "@@ <|" expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 837
    "@@ <|"                           shift, and go to state 838
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 839
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 711

  250 expr_assign: expr ":=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 840
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 712

  264 expr_assign: expr "<<<=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 841
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 713

  265 expr_assign: expr ">>>=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 842
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 714

  254 expr_assign: expr "&&=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 843
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 715

  255 expr_assign: expr "||=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 844
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 716

  256 expr_assign: expr "^^=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 845
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 717

  248 expr_assign: expr '=' . expr
  266 expr_assign_pipe: expr '=' . "@ <|" expr
  267                 | expr '=' . "@@ <|" expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 846
    "@@ <|"                           shift, and go to state 847
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 848
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 718

  433 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration '{' enum_list '}' .

    $default  reduce using rule 433 (enum_declaration)


State 719

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  421 enum_list: enum_list "name" '=' expr . ';'

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ';'    shift, and go to state 849


State 720

   94 optional_annotation_list: '[' . annotation_list ']'
  378 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' ';'

    "require"  shift, and go to state 48
    "private"  shift, and go to state 49
    "::"       shift, and go to state 50
    "name"     shift, and go to state 51

    annotation_declaration_name  go to state 52
    annotation_declaration       go to state 53
    annotation_list              go to state 850
    name_in_namespace            go to state 55


State 721

  446 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@26 structure_name $@27 '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 446 (structure_declaration)


State 722

  375 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" $@21 function_declaration_header ';'
  377                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_override optional_constant $@22 function_declaration_header expression_block

    "def"  shift, and go to state 851


State 723

  373 struct_variable_declaration_list: struct_variable_declaration_list $@20 . structure_variable_declaration ';'

    "[["  shift, and go to state 199

    $default  reduce using rule 360 (optional_field_annotation)

    optional_field_annotation       go to state 852
    structure_variable_declaration  go to state 853


State 724

  450 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 854


State 725

  398 copy_or_move_or_clone: '=' .
  507 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 315

    $default  reduce using rule 398 (copy_or_move_or_clone)


State 726

  403 let_variable_declaration: variable_name_with_pos_list ':' type_declaration ';' .

    $default  reduce using rule 403 (let_variable_declaration)


State 727

  404 let_variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr ';'
  405                         | variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone . expr_pipe

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    expr_pipe               go to state 855
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_assign             go to state 673
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 856
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 728

  407 let_variable_declaration: variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 407 (let_variable_declaration)


State 729

  247 expr_assign: expr .
  248            | expr . '=' expr
  249            | expr . "<-" expr
  250            | expr . ":=" expr
  251            | expr . "&=" expr
  252            | expr . "|=" expr
  253            | expr . "^=" expr
  254            | expr . "&&=" expr
  255            | expr . "||=" expr
  256            | expr . "^^=" expr
  257            | expr . "+=" expr
  258            | expr . "-=" expr
  259            | expr . "*=" expr
  260            | expr . "/=" expr
  261            | expr . "%=" expr
  262            | expr . "<<=" expr
  263            | expr . ">>=" expr
  264            | expr . "<<<=" expr
  265            | expr . ">>>=" expr
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  406 let_variable_declaration: variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 455
    "as"    shift, and go to state 456
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 457
    ">>"    shift, and go to state 458
    "++"    shift, and go to state 459
    "--"    shift, and go to state 460
    "<="    shift, and go to state 461
    "<<="   shift, and go to state 708
    ">>="   shift, and go to state 709
    ">="    shift, and go to state 462
    "=="    shift, and go to state 463
    "!="    shift, and go to state 464
    "->"    shift, and go to state 465
    "<-"    shift, and go to state 812
    "??"    shift, and go to state 466
    "?."    shift, and go to state 467
    "?["    shift, and go to state 468
    "<|"    shift, and go to state 469
    "|>"    shift, and go to state 470
    ":="    shift, and go to state 711
    "<<<"   shift, and go to state 471
    ">>>"   shift, and go to state 472
    "<<<="  shift, and go to state 712
    ">>>="  shift, and go to state 713
    "&&"    shift, and go to state 473
    "||"    shift, and go to state 474
    "^^"    shift, and go to state 475
    "&&="   shift, and go to state 714
    "||="   shift, and go to state 715
    "^^="   shift, and go to state 716
    ".."    shift, and go to state 476
    '='     shift, and go to state 813
    '?'     shift, and go to state 477
    '|'     shift, and go to state 478
    '^'     shift, and go to state 479
    '&'     shift, and go to state 480
    '<'     shift, and go to state 481
    '>'     shift, and go to state 482
    '-'     shift, and go to state 483
    '+'     shift, and go to state 484
    '*'     shift, and go to state 485
    '/'     shift, and go to state 486
    '%'     shift, and go to state 487
    '.'     shift, and go to state 488
    '['     shift, and go to state 489
    ';'     shift, and go to state 857

    $default  reduce using rule 247 (expr_assign)


State 730

  515 type_declaration: "array" '<' $@32 type_declaration '>' $@33 .

    $default  reduce using rule 515 (type_declaration)


State 731

  518 type_declaration: "table" '<' $@34 table_type_pair '>' $@35 .

    $default  reduce using rule 518 (type_declaration)


State 732

  491 table_type_pair: type_declaration ';' type_declaration .
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226

    $default  reduce using rule 491 (table_type_pair)


State 733

  521 type_declaration: "iterator" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 521 (type_declaration)


State 734

  511 type_declaration: "smart_ptr" '<' $@30 type_declaration '>' $@31 .

    $default  reduce using rule 511 (type_declaration)


State 735

  489 bitfield_type_declaration: "bitfield" '<' $@28 bitfield_bits '>' $@29 .

    $default  reduce using rule 489 (bitfield_type_declaration)


State 736

  525 type_declaration: "block" '<' $@38 type_declaration '>' $@39 .

    $default  reduce using rule 525 (type_declaration)


State 737

  528 type_declaration: "block" '<' $@40 optional_function_argument_list optional_function_type '>' . $@41

    $default  reduce using rule 527 ($@41)

    $@41  go to state 858


State 738

  532 type_declaration: "function" '<' $@42 type_declaration '>' $@43 .

    $default  reduce using rule 532 (type_declaration)


State 739

  535 type_declaration: "function" '<' $@44 optional_function_argument_list optional_function_type '>' . $@45

    $default  reduce using rule 534 ($@45)

    $@45  go to state 859


State 740

  539 type_declaration: "lambda" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 539 (type_declaration)


State 741

  542 type_declaration: "lambda" '<' $@48 optional_function_argument_list optional_function_type '>' . $@49

    $default  reduce using rule 541 ($@49)

    $@49  go to state 860


State 742

  384 tuple_type: "name" ':' type_declaration .
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226

    $default  reduce using rule 384 (tuple_type)


State 743

  545 type_declaration: "tuple" '<' $@50 tuple_type_list '>' $@51 .

    $default  reduce using rule 545 (type_declaration)


State 744

  386 tuple_type_list: tuple_type_list ';' tuple_type .

    $default  reduce using rule 386 (tuple_type_list)


State 745

  548 type_declaration: "variant" '<' $@52 variant_type_list '>' $@53 .

    $default  reduce using rule 548 (type_declaration)


State 746

  190 expr_new: "new" type_declaration '(' ')' .

    $default  reduce using rule 190 (expr_new)


State 747

  191 expr_new: "new" type_declaration '(' expr_list . ')'
  224 expr_list: expr_list . ',' expr

    ','  shift, and go to state 784
    ')'  shift, and go to state 861


State 748

  221 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  222               | "typeinfo" '(' name_in_namespace '<' . "name" ';' "name" '>' expr ')'

    "name"  shift, and go to state 862


State 749

  220 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ')'    shift, and go to state 863


State 750

  219 expr_type_decl: "type" '<' $@10 type_declaration . '>' $@11
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 864
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 751

  337 expr: "deref" '(' expr ')' .

    $default  reduce using rule 337 (expr)


State 752

  210 expr_cast: "cast" '<' $@4 type_declaration . '>' $@5 expr
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 865
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 753

  213 expr_cast: "upcast" '<' $@6 type_declaration . '>' $@7 expr
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 866
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 754

  338 expr: "addr" '(' expr ')' .

    $default  reduce using rule 338 (expr)


State 755

  216 expr_cast: "reinterpret" '<' $@8 type_declaration . '>' $@9 expr
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 867
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 756

  359 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 359 (expr)


State 757

  339 expr: "generator" '<' type_declaration '>' . optional_capture_list '(' ')'
  340     | "generator" '<' type_declaration '>' . optional_capture_list '(' expr ')'

    "[["  shift, and go to state 617

    $default  reduce using rule 237 (optional_capture_list)

    optional_capture_list  go to state 868


State 758

  587 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    expr_list               go to state 869
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 616
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 759

  565 optional_block: "where" expr_block .

    $default  reduce using rule 565 (optional_block)


State 760

  559 make_struct_fields: "name" ":=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 870
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 761

  558 make_struct_fields: "name" copy_or_move . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 871
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 762

  568 make_struct_decl: "[[" type_declaration '(' ')' . optional_block ']' ']'
  569                 | "[[" type_declaration '(' ')' . make_struct_dim optional_block ']' ']'

    "where"  shift, and go to state 587
    "name"   shift, and go to state 782

    $default  reduce using rule 564 (optional_block)

    make_struct_fields  go to state 592
    make_struct_dim     go to state 872
    optional_block      go to state 873


State 763

  560 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  561                   | make_struct_fields ',' . "name" ":=" expr

    "name"  shift, and go to state 874


State 764

  563 make_struct_dim: make_struct_dim ';' . make_struct_fields

    "name"  shift, and go to state 782

    make_struct_fields  go to state 875


State 765

  566 make_struct_decl: "[[" type_declaration make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 876


State 766

  567 make_struct_decl: "[[" type_declaration optional_block ']' . ']'

    ']'  shift, and go to state 877


State 767

  573 make_tuple: make_tuple ',' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 878
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 768

  580 make_dim_decl: "[[" type_declaration make_dim ']' . ']'

    ']'  shift, and go to state 879


State 769

  579 make_dim: make_dim ';' . make_any_tuple

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 591
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_tuple              go to state 595
    make_map_tuple          go to state 596
    make_any_tuple          go to state 880
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 770

  588 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list ';' expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    expr_list               go to state 881
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 616
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 771

  571 make_struct_decl: "[{" type_declaration '(' ')' . make_struct_dim optional_block '}' ']'

    "name"  shift, and go to state 782

    make_struct_fields  go to state 592
    make_struct_dim     go to state 882


State 772

  570 make_struct_decl: "[{" type_declaration make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 883


State 773

  581 make_dim_decl: "[{" type_declaration make_dim '}' . ']'

    ']'  shift, and go to state 884


State 774

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  574 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 574 (make_map_tuple)


State 775

  583 make_table: make_table ';' make_map_tuple .

    $default  reduce using rule 583 (make_table)


State 776

  584 make_table_decl: "{{" make_table '}' '}' .

    $default  reduce using rule 584 (make_table_decl)


State 777

   27 string_builder_body: string_builder_body "{" expr . "}"
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    "}"    shift, and go to state 885
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489


State 778

   29 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 29 (reader_character_sequence)


State 779

   30 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   32 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 886

    $default  reduce using rule 32 (expr_reader)


State 780

  276 func_addr_expr: '@' '@' '<' $@12 . type_declaration '>' $@13 name_in_namespace

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 887


State 781

  279 func_addr_expr: '@' '@' '<' $@14 . optional_function_argument_list optional_function_type '>' $@15 name_in_namespace

    '('  shift, and go to state 280

    $default  reduce using rule 95 (optional_function_argument_list)

    optional_function_argument_list  go to state 888


State 782

  558 make_struct_fields: "name" . copy_or_move expr
  559                   | "name" . ":=" expr

    "<-"  shift, and go to state 662
    ":="  shift, and go to state 760
    '='   shift, and go to state 663

    copy_or_move  go to state 761


State 783

  270 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  560 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  561                   | make_struct_fields . ',' "name" ":=" expr

    ','  shift, and go to state 763
    ']'  shift, and go to state 889


State 784

  224 expr_list: expr_list ',' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 890
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 785

  333 expr: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 333 (expr)


State 786

  233 capture_entry: "<-" . "name"

    "name"  shift, and go to state 891


State 787

  234 capture_entry: ":=" . "name"

    "name"  shift, and go to state 892


State 788

  232 capture_entry: '=' . "name"

    "name"  shift, and go to state 893


State 789

  231 capture_entry: '&' . "name"

    "name"  shift, and go to state 894


State 790

  235 capture_list: capture_entry .

    $default  reduce using rule 235 (capture_list)


State 791

  236 capture_list: capture_list . ',' capture_entry
  238 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 895
    ']'  shift, and go to state 896


State 792

  240 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 388

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 897


State 793

  345 expr: expr "is" "type" '<' . $@18 type_declaration '>' $@19

    $default  reduce using rule 343 ($@18)

    $@18  go to state 898


State 794

  271 expr_method_call: expr "->" "name" '(' . ')'
  272                 | expr "->" "name" '(' . expr_list ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    ')'                               shift, and go to state 899
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    expr_list               go to state 900
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 616
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 795

  327 expr: expr "?[" expr ']' .

    $default  reduce using rule 327 (expr)


State 796

  348 expr: expr '?' "as" "name" .

    $default  reduce using rule 348 (expr)


State 797

  342 expr: expr '?' expr ':' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 901
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 798

  330 expr: expr '.' "?." "name" .

    $default  reduce using rule 330 (expr)


State 799

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  328     | expr '.' "?[" expr . ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ']'    shift, and go to state 902


State 800

  281 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 281 (expr_field)


State 801

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  326     | expr '.' '[' expr . ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ']'    shift, and go to state 903


State 802

  284 expr_field: expr '.' $@16 error . $@17

    $default  reduce using rule 283 ($@17)

    $@17  go to state 904


State 803

  325 expr: expr '[' expr ']' .

    $default  reduce using rule 325 (expr)


State 804

  335 expr: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 335 (expr)


State 805

  394 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  395                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "<-"        shift, and go to state 662
    "??"        shift, and go to state 220
    '='         shift, and go to state 905
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226

    $default  reduce using rule 394 (variable_declaration)

    copy_or_move  go to state 906


State 806

  397 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 397 (variable_declaration)


State 807

  247 expr_assign: expr .
  248            | expr . '=' expr
  249            | expr . "<-" expr
  250            | expr . ":=" expr
  251            | expr . "&=" expr
  252            | expr . "|=" expr
  253            | expr . "^=" expr
  254            | expr . "&&=" expr
  255            | expr . "||=" expr
  256            | expr . "^^=" expr
  257            | expr . "+=" expr
  258            | expr . "-=" expr
  259            | expr . "*=" expr
  260            | expr . "/=" expr
  261            | expr . "%=" expr
  262            | expr . "<<=" expr
  263            | expr . ">>=" expr
  264            | expr . "<<<=" expr
  265            | expr . ">>>=" expr
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  396 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 455
    "as"    shift, and go to state 456
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 457
    ">>"    shift, and go to state 458
    "++"    shift, and go to state 459
    "--"    shift, and go to state 460
    "<="    shift, and go to state 461
    "<<="   shift, and go to state 708
    ">>="   shift, and go to state 709
    ">="    shift, and go to state 462
    "=="    shift, and go to state 463
    "!="    shift, and go to state 464
    "->"    shift, and go to state 465
    "<-"    shift, and go to state 812
    "??"    shift, and go to state 466
    "?."    shift, and go to state 467
    "?["    shift, and go to state 468
    "<|"    shift, and go to state 469
    "|>"    shift, and go to state 470
    ":="    shift, and go to state 711
    "<<<"   shift, and go to state 471
    ">>>"   shift, and go to state 472
    "<<<="  shift, and go to state 712
    ">>>="  shift, and go to state 713
    "&&"    shift, and go to state 473
    "||"    shift, and go to state 474
    "^^"    shift, and go to state 475
    "&&="   shift, and go to state 714
    "||="   shift, and go to state 715
    "^^="   shift, and go to state 716
    ".."    shift, and go to state 476
    '='     shift, and go to state 813
    '?'     shift, and go to state 477
    '|'     shift, and go to state 478
    '^'     shift, and go to state 479
    '&'     shift, and go to state 480
    '<'     shift, and go to state 481
    '>'     shift, and go to state 482
    '-'     shift, and go to state 483
    '+'     shift, and go to state 484
    '*'     shift, and go to state 485
    '/'     shift, and go to state 486
    '%'     shift, and go to state 487
    '.'     shift, and go to state 488
    '['     shift, and go to state 489

    " <|"     reduce using rule 247 (expr_assign)
    $default  reduce using rule 396 (variable_declaration)


State 808

   61 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 61 (expression_while_loop)


State 809

   59 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list ';' expression_block

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    expr_list               go to state 907
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 616
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 810

  199 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 199 (expression_return)


State 811

  197 expression_return: "return" "<-" expr . ';'
  247 expr_assign: expr .
  248            | expr . '=' expr
  249            | expr . "<-" expr
  250            | expr . ":=" expr
  251            | expr . "&=" expr
  252            | expr . "|=" expr
  253            | expr . "^=" expr
  254            | expr . "&&=" expr
  255            | expr . "||=" expr
  256            | expr . "^^=" expr
  257            | expr . "+=" expr
  258            | expr . "-=" expr
  259            | expr . "*=" expr
  260            | expr . "/=" expr
  261            | expr . "%=" expr
  262            | expr . "<<=" expr
  263            | expr . ">>=" expr
  264            | expr . "<<<=" expr
  265            | expr . ">>>=" expr
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"    shift, and go to state 455
    "as"    shift, and go to state 456
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 457
    ">>"    shift, and go to state 458
    "++"    shift, and go to state 459
    "--"    shift, and go to state 460
    "<="    shift, and go to state 461
    "<<="   shift, and go to state 708
    ">>="   shift, and go to state 709
    ">="    shift, and go to state 462
    "=="    shift, and go to state 463
    "!="    shift, and go to state 464
    "->"    shift, and go to state 465
    "<-"    shift, and go to state 812
    "??"    shift, and go to state 466
    "?."    shift, and go to state 467
    "?["    shift, and go to state 468
    "<|"    shift, and go to state 469
    "|>"    shift, and go to state 470
    ":="    shift, and go to state 711
    "<<<"   shift, and go to state 471
    ">>>"   shift, and go to state 472
    "<<<="  shift, and go to state 712
    ">>>="  shift, and go to state 713
    "&&"    shift, and go to state 473
    "||"    shift, and go to state 474
    "^^"    shift, and go to state 475
    "&&="   shift, and go to state 714
    "||="   shift, and go to state 715
    "^^="   shift, and go to state 716
    ".."    shift, and go to state 476
    '='     shift, and go to state 813
    '?'     shift, and go to state 477
    '|'     shift, and go to state 478
    '^'     shift, and go to state 479
    '&'     shift, and go to state 480
    '<'     shift, and go to state 481
    '>'     shift, and go to state 482
    '-'     shift, and go to state 483
    '+'     shift, and go to state 484
    '*'     shift, and go to state 485
    '/'     shift, and go to state 486
    '%'     shift, and go to state 487
    '.'     shift, and go to state 488
    '['     shift, and go to state 489
    ';'     shift, and go to state 908

    $default  reduce using rule 247 (expr_assign)


State 812

  249 expr_assign: expr "<-" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 839
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 813

  248 expr_assign: expr '=' . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 848
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 814

  196 expression_return: "return" expr ';' .

    $default  reduce using rule 196 (expression_return)


State 815

  204 expression_try_catch: "try" expression_block "recover" . expression_block

    '{'  shift, and go to state 282

    expression_block  go to state 909


State 816

   62 expression_with: "with" expr expression_block .

    $default  reduce using rule 62 (expression_with)


State 817

   64 expression_with_alias: "assume" "name" '=' . $@2 expr

    $default  reduce using rule 63 ($@2)

    $@2  go to state 910


State 818

   48 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 48 (expression_label)


State 819

   49 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 49 (expression_goto)


State 820

  203 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 203 (expression_yield)


State 821

  201 expression_yield: "yield" "<-" expr . ';'
  247 expr_assign: expr .
  248            | expr . '=' expr
  249            | expr . "<-" expr
  250            | expr . ":=" expr
  251            | expr . "&=" expr
  252            | expr . "|=" expr
  253            | expr . "^=" expr
  254            | expr . "&&=" expr
  255            | expr . "||=" expr
  256            | expr . "^^=" expr
  257            | expr . "+=" expr
  258            | expr . "-=" expr
  259            | expr . "*=" expr
  260            | expr . "/=" expr
  261            | expr . "%=" expr
  262            | expr . "<<=" expr
  263            | expr . ">>=" expr
  264            | expr . "<<<=" expr
  265            | expr . ">>>=" expr
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"    shift, and go to state 455
    "as"    shift, and go to state 456
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 457
    ">>"    shift, and go to state 458
    "++"    shift, and go to state 459
    "--"    shift, and go to state 460
    "<="    shift, and go to state 461
    "<<="   shift, and go to state 708
    ">>="   shift, and go to state 709
    ">="    shift, and go to state 462
    "=="    shift, and go to state 463
    "!="    shift, and go to state 464
    "->"    shift, and go to state 465
    "<-"    shift, and go to state 812
    "??"    shift, and go to state 466
    "?."    shift, and go to state 467
    "?["    shift, and go to state 468
    "<|"    shift, and go to state 469
    "|>"    shift, and go to state 470
    ":="    shift, and go to state 711
    "<<<"   shift, and go to state 471
    ">>>"   shift, and go to state 472
    "<<<="  shift, and go to state 712
    ">>>="  shift, and go to state 713
    "&&"    shift, and go to state 473
    "||"    shift, and go to state 474
    "^^"    shift, and go to state 475
    "&&="   shift, and go to state 714
    "||="   shift, and go to state 715
    "^^="   shift, and go to state 716
    ".."    shift, and go to state 476
    '='     shift, and go to state 813
    '?'     shift, and go to state 477
    '|'     shift, and go to state 478
    '^'     shift, and go to state 479
    '&'     shift, and go to state 480
    '<'     shift, and go to state 481
    '>'     shift, and go to state 482
    '-'     shift, and go to state 483
    '+'     shift, and go to state 484
    '*'     shift, and go to state 485
    '/'     shift, and go to state 486
    '%'     shift, and go to state 487
    '.'     shift, and go to state 488
    '['     shift, and go to state 489
    ';'     shift, and go to state 911

    $default  reduce using rule 247 (expr_assign)


State 822

  200 expression_yield: "yield" expr ';' .

    $default  reduce using rule 200 (expression_yield)


State 823

  230 block_or_lambda: '@' '@' .

    $default  reduce using rule 230 (block_or_lambda)


State 824

  158 expression_block: '{' expressions '}' "finally" '{' . expressions '}'

    $default  reduce using rule 179 (expressions)

    expressions  go to state 912


State 825

   58 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 913
    "elif"         shift, and go to state 914
    "static_elif"  shift, and go to state 915

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 916
    expression_else      go to state 917


State 826

  182 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 182 (expr_pipe)


State 827

  257 expr_assign: expr "+=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 257 (expr_assign)


State 828

  258 expr_assign: expr "-=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 258 (expr_assign)


State 829

  260 expr_assign: expr "/=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 260 (expr_assign)


State 830

  259 expr_assign: expr "*=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 259 (expr_assign)


State 831

  261 expr_assign: expr "%=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 261 (expr_assign)


State 832

  251 expr_assign: expr "&=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 251 (expr_assign)


State 833

  252 expr_assign: expr "|=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 252 (expr_assign)


State 834

  253 expr_assign: expr "^=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 253 (expr_assign)


State 835

  262 expr_assign: expr "<<=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 262 (expr_assign)


State 836

  263 expr_assign: expr ">>=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 263 (expr_assign)


State 837

  268 expr_assign_pipe: expr "<-" "@ <|" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 918
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 838

  269 expr_assign_pipe: expr "<-" "@@ <|" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 919
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 839

  249 expr_assign: expr "<-" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 249 (expr_assign)


State 840

  250 expr_assign: expr ":=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 250 (expr_assign)


State 841

  264 expr_assign: expr "<<<=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 264 (expr_assign)


State 842

  265 expr_assign: expr ">>>=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 265 (expr_assign)


State 843

  254 expr_assign: expr "&&=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 254 (expr_assign)


State 844

  255 expr_assign: expr "||=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 255 (expr_assign)


State 845

  256 expr_assign: expr "^^=" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 256 (expr_assign)


State 846

  266 expr_assign_pipe: expr '=' "@ <|" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 920
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 847

  267 expr_assign_pipe: expr '=' "@@ <|" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 921
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 848

  248 expr_assign: expr '=' expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 248 (expr_assign)


State 849

  421 enum_list: enum_list "name" '=' expr ';' .

    $default  reduce using rule 421 (enum_list)


State 850

   92 annotation_list: annotation_list . ',' annotation_declaration
   94 optional_annotation_list: '[' annotation_list . ']'
  378 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' ';'

    ','  shift, and go to state 82
    ']'  shift, and go to state 922


State 851

  375 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" $@21 function_declaration_header ';'
  377                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_override optional_constant $@22 function_declaration_header expression_block

    "public"   shift, and go to state 923
    "private"  shift, and go to state 924

    $default  reduce using rule 367 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 925


State 852

  370 structure_variable_declaration: optional_field_annotation . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 926
    "sealed"    shift, and go to state 927

    $default  reduce using rule 362 (optional_override)

    optional_override  go to state 928


State 853

  373 struct_variable_declaration_list: struct_variable_declaration_list $@20 structure_variable_declaration . ';'

    ';'  shift, and go to state 929


State 854

  450 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 450 (variable_name_with_pos_list)


State 855

  405 let_variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 405 (let_variable_declaration)


State 856

  247 expr_assign: expr .
  248            | expr . '=' expr
  249            | expr . "<-" expr
  250            | expr . ":=" expr
  251            | expr . "&=" expr
  252            | expr . "|=" expr
  253            | expr . "^=" expr
  254            | expr . "&&=" expr
  255            | expr . "||=" expr
  256            | expr . "^^=" expr
  257            | expr . "+=" expr
  258            | expr . "-=" expr
  259            | expr . "*=" expr
  260            | expr . "/=" expr
  261            | expr . "%=" expr
  262            | expr . "<<=" expr
  263            | expr . ">>=" expr
  264            | expr . "<<<=" expr
  265            | expr . ">>>=" expr
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  404 let_variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr . ';'

    "is"    shift, and go to state 455
    "as"    shift, and go to state 456
    "+="    shift, and go to state 700
    "-="    shift, and go to state 701
    "/="    shift, and go to state 702
    "*="    shift, and go to state 703
    "%="    shift, and go to state 704
    "&="    shift, and go to state 705
    "|="    shift, and go to state 706
    "^="    shift, and go to state 707
    "<<"    shift, and go to state 457
    ">>"    shift, and go to state 458
    "++"    shift, and go to state 459
    "--"    shift, and go to state 460
    "<="    shift, and go to state 461
    "<<="   shift, and go to state 708
    ">>="   shift, and go to state 709
    ">="    shift, and go to state 462
    "=="    shift, and go to state 463
    "!="    shift, and go to state 464
    "->"    shift, and go to state 465
    "<-"    shift, and go to state 812
    "??"    shift, and go to state 466
    "?."    shift, and go to state 467
    "?["    shift, and go to state 468
    "<|"    shift, and go to state 469
    "|>"    shift, and go to state 470
    ":="    shift, and go to state 711
    "<<<"   shift, and go to state 471
    ">>>"   shift, and go to state 472
    "<<<="  shift, and go to state 712
    ">>>="  shift, and go to state 713
    "&&"    shift, and go to state 473
    "||"    shift, and go to state 474
    "^^"    shift, and go to state 475
    "&&="   shift, and go to state 714
    "||="   shift, and go to state 715
    "^^="   shift, and go to state 716
    ".."    shift, and go to state 476
    '='     shift, and go to state 813
    '?'     shift, and go to state 477
    '|'     shift, and go to state 478
    '^'     shift, and go to state 479
    '&'     shift, and go to state 480
    '<'     shift, and go to state 481
    '>'     shift, and go to state 482
    '-'     shift, and go to state 483
    '+'     shift, and go to state 484
    '*'     shift, and go to state 485
    '/'     shift, and go to state 486
    '%'     shift, and go to state 487
    '.'     shift, and go to state 488
    '['     shift, and go to state 489
    ';'     shift, and go to state 930

    $default  reduce using rule 247 (expr_assign)


State 857

  406 let_variable_declaration: variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 406 (let_variable_declaration)


State 858

  528 type_declaration: "block" '<' $@40 optional_function_argument_list optional_function_type '>' $@41 .

    $default  reduce using rule 528 (type_declaration)


State 859

  535 type_declaration: "function" '<' $@44 optional_function_argument_list optional_function_type '>' $@45 .

    $default  reduce using rule 535 (type_declaration)


State 860

  542 type_declaration: "lambda" '<' $@48 optional_function_argument_list optional_function_type '>' $@49 .

    $default  reduce using rule 542 (type_declaration)


State 861

  191 expr_new: "new" type_declaration '(' expr_list ')' .

    $default  reduce using rule 191 (expr_new)


State 862

  221 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  222               | "typeinfo" '(' name_in_namespace '<' "name" . ';' "name" '>' expr ')'

    '>'  shift, and go to state 931
    ';'  shift, and go to state 932


State 863

  220 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 220 (expr_type_info)


State 864

  219 expr_type_decl: "type" '<' $@10 type_declaration '>' . $@11

    $default  reduce using rule 218 ($@11)

    $@11  go to state 933


State 865

  210 expr_cast: "cast" '<' $@4 type_declaration '>' . $@5 expr

    $default  reduce using rule 209 ($@5)

    $@5  go to state 934


State 866

  213 expr_cast: "upcast" '<' $@6 type_declaration '>' . $@7 expr

    $default  reduce using rule 212 ($@7)

    $@7  go to state 935


State 867

  216 expr_cast: "reinterpret" '<' $@8 type_declaration '>' . $@9 expr

    $default  reduce using rule 215 ($@9)

    $@9  go to state 936


State 868

  339 expr: "generator" '<' type_declaration '>' optional_capture_list . '(' ')'
  340     | "generator" '<' type_declaration '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 937


State 869

  224 expr_list: expr_list . ',' expr
  587 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where ']' ']'

    ','  shift, and go to state 784
    ';'  shift, and go to state 938


State 870

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  559 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 559 (make_struct_fields)


State 871

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  558 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 558 (make_struct_fields)


State 872

  563 make_struct_dim: make_struct_dim . ';' make_struct_fields
  569 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim . optional_block ']' ']'

    "where"  shift, and go to state 587
    ';'      shift, and go to state 764

    $default  reduce using rule 564 (optional_block)

    optional_block  go to state 939


State 873

  568 make_struct_decl: "[[" type_declaration '(' ')' optional_block . ']' ']'

    ']'  shift, and go to state 940


State 874

  560 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  561                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 662
    ":="  shift, and go to state 941
    '='   shift, and go to state 663

    copy_or_move  go to state 942


State 875

  560 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  561                   | make_struct_fields . ',' "name" ":=" expr
  563 make_struct_dim: make_struct_dim ';' make_struct_fields .

    ','  shift, and go to state 763

    $default  reduce using rule 563 (make_struct_dim)


State 876

  566 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 943


State 877

  567 make_struct_decl: "[[" type_declaration optional_block ']' ']' .

    $default  reduce using rule 567 (make_struct_decl)


State 878

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  573 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 573 (make_tuple)


State 879

  580 make_dim_decl: "[[" type_declaration make_dim ']' ']' .

    $default  reduce using rule 580 (make_dim_decl)


State 880

  579 make_dim: make_dim ';' make_any_tuple .

    $default  reduce using rule 579 (make_dim)


State 881

  224 expr_list: expr_list . ',' expr
  588 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . ';' expr array_comprehension_where '}' ']'

    ','  shift, and go to state 784
    ';'  shift, and go to state 944


State 882

  563 make_struct_dim: make_struct_dim . ';' make_struct_fields
  571 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim . optional_block '}' ']'

    "where"  shift, and go to state 587
    ';'      shift, and go to state 764

    $default  reduce using rule 564 (optional_block)

    optional_block  go to state 945


State 883

  570 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 946


State 884

  581 make_dim_decl: "[{" type_declaration make_dim '}' ']' .

    $default  reduce using rule 581 (make_dim_decl)


State 885

   27 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 27 (string_builder_body)


State 886

   30 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 30 (reader_character_sequence)


State 887

  276 func_addr_expr: '@' '@' '<' $@12 type_declaration . '>' $@13 name_in_namespace
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 947
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 888

  279 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list . optional_function_type '>' $@15 name_in_namespace

    ':'  shift, and go to state 388

    $default  reduce using rule 98 (optional_function_type)

    optional_function_type  go to state 948


State 889

  270 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 949


State 890

  224 expr_list: expr_list ',' expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 224 (expr_list)


State 891

  233 capture_entry: "<-" "name" .

    $default  reduce using rule 233 (capture_entry)


State 892

  234 capture_entry: ":=" "name" .

    $default  reduce using rule 234 (capture_entry)


State 893

  232 capture_entry: '=' "name" .

    $default  reduce using rule 232 (capture_entry)


State 894

  231 capture_entry: '&' "name" .

    $default  reduce using rule 231 (capture_entry)


State 895

  236 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 786
    ":="  shift, and go to state 787
    '='   shift, and go to state 788
    '&'   shift, and go to state 789

    capture_entry  go to state 950


State 896

  238 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 951


State 897

  240 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"  shift, and go to state 952
    '{'   shift, and go to state 282

    expression_block       go to state 953
    block_or_simple_block  go to state 954


State 898

  345 expr: expr "is" "type" '<' $@18 . type_declaration '>' $@19

    "array"      shift, and go to state 141
    "table"      shift, and go to state 142
    "iterator"   shift, and go to state 143
    "smart_ptr"  shift, and go to state 144
    "bool"       shift, and go to state 145
    "void"       shift, and go to state 146
    "string"     shift, and go to state 147
    "auto"       shift, and go to state 148
    "int"        shift, and go to state 149
    "int2"       shift, and go to state 150
    "int3"       shift, and go to state 151
    "int4"       shift, and go to state 152
    "uint"       shift, and go to state 153
    "bitfield"   shift, and go to state 154
    "uint2"      shift, and go to state 155
    "uint3"      shift, and go to state 156
    "uint4"      shift, and go to state 157
    "float"      shift, and go to state 158
    "float2"     shift, and go to state 159
    "float3"     shift, and go to state 160
    "float4"     shift, and go to state 161
    "range"      shift, and go to state 162
    "urange"     shift, and go to state 163
    "block"      shift, and go to state 164
    "int64"      shift, and go to state 165
    "uint64"     shift, and go to state 166
    "double"     shift, and go to state 167
    "function"   shift, and go to state 168
    "lambda"     shift, and go to state 169
    "int8"       shift, and go to state 170
    "uint8"      shift, and go to state 171
    "int16"      shift, and go to state 172
    "uint16"     shift, and go to state 173
    "tuple"      shift, and go to state 174
    "variant"    shift, and go to state 175
    "::"         shift, and go to state 50
    "name"       shift, and go to state 51

    name_in_namespace           go to state 176
    basic_type_declaration      go to state 177
    structure_type_declaration  go to state 178
    auto_type_declaration       go to state 179
    bitfield_type_declaration   go to state 180
    type_declaration            go to state 955


State 899

  271 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 271 (expr_method_call)


State 900

  224 expr_list: expr_list . ',' expr
  272 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 784
    ')'  shift, and go to state 956


State 901

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  342     | expr '?' expr ':' expr .
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 342 (expr)


State 902

  328 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 328 (expr)


State 903

  326 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 326 (expr)


State 904

  284 expr_field: expr '.' $@16 error $@17 .

    $default  reduce using rule 284 (expr_field)


State 905

  390 copy_or_move: '=' .
  507 type_declaration: type_declaration '=' . "const"

    "const"  shift, and go to state 315

    $default  reduce using rule 390 (copy_or_move)


State 906

  395 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 957
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 907

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . ';' expression_block
  224 expr_list: expr_list . ',' expr

    ','  shift, and go to state 784
    ';'  shift, and go to state 958


State 908

  197 expression_return: "return" "<-" expr ';' .

    $default  reduce using rule 197 (expression_return)


State 909

  204 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 204 (expression_try_catch)


State 910

   64 expression_with_alias: "assume" "name" '=' $@2 . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 959
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 911

  201 expression_yield: "yield" "<-" expr ';' .

    $default  reduce using rule 201 (expression_yield)


State 912

  158 expression_block: '{' expressions '}' "finally" '{' expressions . '}'
  180 expressions: expressions . expression_any
  181            | expressions . error

    error                             shift, and go to state 501
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 502
    "if"                              shift, and go to state 503
    "static_if"                       shift, and go to state 504
    "for"                             shift, and go to state 505
    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "return"                          shift, and go to state 506
    "null"                            shift, and go to state 325
    "break"                           shift, and go to state 507
    "try"                             shift, and go to state 508
    "delete"                          shift, and go to state 509
    "deref"                           shift, and go to state 326
    "with"                            shift, and go to state 510
    "assume"                          shift, and go to state 511
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 329
    "continue"                        shift, and go to state 512
    "pass"                            shift, and go to state 513
    "reinterpret"                     shift, and go to state 330
    "label"                           shift, and go to state 514
    "goto"                            shift, and go to state 515
    "unsafe"                          shift, and go to state 516
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "yield"                           shift, and go to state 517
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "@ <|"                            shift, and go to state 518
    "@@ <|"                           shift, and go to state 519
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    ';'                               shift, and go to state 520
    '{'                               shift, and go to state 282
    '}'                               shift, and go to state 960

    string_builder           go to state 356
    expr_reader              go to state 357
    expression_label         go to state 522
    expression_goto          go to state 523
    if_or_static_if          go to state 524
    expression_if_then_else  go to state 525
    expression_for_loop      go to state 526
    expression_unsafe        go to state 527
    expression_while_loop    go to state 528
    expression_with          go to state 529
    expression_with_alias    go to state 530
    expression_block         go to state 358
    expression_any           go to state 531
    expr_pipe                go to state 532
    name_in_namespace        go to state 359
    expression_delete        go to state 533
    expr_new                 go to state 360
    expression_break         go to state 534
    expression_continue      go to state 535
    expression_return        go to state 536
    expression_yield         go to state 537
    expression_try_catch     go to state 538
    kwd_let                  go to state 539
    expression_let           go to state 540
    expr_cast                go to state 361
    expr_type_decl           go to state 362
    expr_type_info           go to state 363
    block_or_lambda          go to state 364
    expr_block               go to state 365
    expr_numeric_const       go to state 366
    expr_assign              go to state 541
    expr_assign_pipe         go to state 542
    expr_named_call          go to state 367
    expr_method_call         go to state 368
    func_addr_expr           go to state 369
    expr_field               go to state 370
    expr                     go to state 543
    basic_type_declaration   go to state 372
    make_decl                go to state 373
    make_struct_decl         go to state 374
    make_dim_decl            go to state 375
    make_table_decl          go to state 376
    array_comprehension      go to state 377


State 913

   54 expression_else: "else" . expression_block

    '{'  shift, and go to state 282

    expression_block  go to state 961


State 914

   51 elif_or_static_elif: "elif" .

    $default  reduce using rule 51 (elif_or_static_elif)


State 915

   52 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 52 (elif_or_static_elif)


State 916

   55 expression_else: elif_or_static_elif . expr expression_block expression_else

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 962
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 917

   58 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 58 (expression_if_then_else)


State 918

  268 expr_assign_pipe: expr "<-" "@ <|" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '/'    shift, and go to state 486
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 268 (expr_assign_pipe)


State 919

  269 expr_assign_pipe: expr "<-" "@@ <|" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    "++"      [reduce using rule 269 (expr_assign_pipe)]
    "--"      [reduce using rule 269 (expr_assign_pipe)]
    '-'       [reduce using rule 269 (expr_assign_pipe)]
    '+'       [reduce using rule 269 (expr_assign_pipe)]
    '*'       [reduce using rule 269 (expr_assign_pipe)]
    '%'       [reduce using rule 269 (expr_assign_pipe)]
    $default  reduce using rule 269 (expr_assign_pipe)


State 920

  266 expr_assign_pipe: expr '=' "@ <|" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '/'    shift, and go to state 486
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 266 (expr_assign_pipe)


State 921

  267 expr_assign_pipe: expr '=' "@@ <|" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    "++"      [reduce using rule 267 (expr_assign_pipe)]
    "--"      [reduce using rule 267 (expr_assign_pipe)]
    '-'       [reduce using rule 267 (expr_assign_pipe)]
    '+'       [reduce using rule 267 (expr_assign_pipe)]
    '*'       [reduce using rule 267 (expr_assign_pipe)]
    '%'       [reduce using rule 267 (expr_assign_pipe)]
    $default  reduce using rule 267 (expr_assign_pipe)


State 922

   94 optional_annotation_list: '[' annotation_list ']' .
  378 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . ';'

    ';'  shift, and go to state 963

    $default  reduce using rule 94 (optional_annotation_list)


State 923

  368 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 368 (optional_public_or_private_member_variable)


State 924

  369 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 369 (optional_public_or_private_member_variable)


State 925

  375 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" $@21 function_declaration_header ';'
  377                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_override optional_constant $@22 function_declaration_header expression_block

    "override"  shift, and go to state 926
    "abstract"  shift, and go to state 964
    "sealed"    shift, and go to state 927

    $default  reduce using rule 362 (optional_override)

    optional_override  go to state 965


State 926

  363 optional_override: "override" .

    $default  reduce using rule 363 (optional_override)


State 927

  364 optional_override: "sealed" .

    $default  reduce using rule 364 (optional_override)


State 928

  370 structure_variable_declaration: optional_field_annotation optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 923
    "private"  shift, and go to state 924

    $default  reduce using rule 367 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 966


State 929

  373 struct_variable_declaration_list: struct_variable_declaration_list $@20 structure_variable_declaration ';' .

    $default  reduce using rule 373 (struct_variable_declaration_list)


State 930

  404 let_variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move_or_clone expr ';' .

    $default  reduce using rule 404 (let_variable_declaration)


State 931

  221 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 967
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 932

  222 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' . "name" '>' expr ')'

    "name"  shift, and go to state 968


State 933

  219 expr_type_decl: "type" '<' $@10 type_declaration '>' $@11 .

    $default  reduce using rule 219 (expr_type_decl)


State 934

  210 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 969
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 935

  213 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 970
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 936

  216 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 971
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 937

  339 expr: "generator" '<' type_declaration '>' optional_capture_list '(' . ')'
  340     | "generator" '<' type_declaration '>' optional_capture_list '(' . expr ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    ')'                               shift, and go to state 972
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 973
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 938

  587 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where ']' ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 974
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 939

  569 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block . ']' ']'

    ']'  shift, and go to state 975


State 940

  568 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' . ']'

    ']'  shift, and go to state 976


State 941

  561 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 977
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 942

  560 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 978
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 943

  566 make_struct_decl: "[[" type_declaration make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 566 (make_struct_decl)


State 944

  588 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' . expr array_comprehension_where '}' ']'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 979
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 945

  571 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block . '}' ']'

    '}'  shift, and go to state 980


State 946

  570 make_struct_decl: "[{" type_declaration make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 570 (make_struct_decl)


State 947

  276 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' . $@13 name_in_namespace

    $default  reduce using rule 275 ($@13)

    $@13  go to state 981


State 948

  279 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type . '>' $@15 name_in_namespace

    '>'  shift, and go to state 982


State 949

  270 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 270 (expr_named_call)


State 950

  236 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 236 (capture_list)


State 951

  238 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 238 (optional_capture_list)


State 952

  226 block_or_simple_block: "=>" . expr
  227                      | "=>" . "<-" expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "<-"                              shift, and go to state 983
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 984
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 953

  225 block_or_simple_block: expression_block .

    $default  reduce using rule 225 (block_or_simple_block)


State 954

  240 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 240 (expr_block)


State 955

  345 expr: expr "is" "type" '<' $@18 type_declaration . '>' $@19
  496 type_declaration: type_declaration . '[' expr ']'
  497                 | type_declaration . '[' ']'
  498                 | type_declaration . '-' '[' ']'
  499                 | type_declaration . "explicit"
  500                 | type_declaration . "const"
  501                 | type_declaration . '-' "const"
  502                 | type_declaration . '&'
  503                 | type_declaration . '-' '&'
  504                 | type_declaration . '#'
  505                 | type_declaration . "implicit"
  506                 | type_declaration . '-' '#'
  507                 | type_declaration . '=' "const"
  508                 | type_declaration . '?'
  512                 | type_declaration . "??"

    "const"     shift, and go to state 217
    "implicit"  shift, and go to state 218
    "explicit"  shift, and go to state 219
    "??"        shift, and go to state 220
    '='         shift, and go to state 221
    '?'         shift, and go to state 222
    '&'         shift, and go to state 223
    '>'         shift, and go to state 985
    '-'         shift, and go to state 224
    '['         shift, and go to state 225
    '#'         shift, and go to state 226


State 956

  272 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 272 (expr_method_call)


State 957

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  395 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 395 (variable_declaration)


State 958

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' . expression_block

    '{'  shift, and go to state 282

    expression_block  go to state 986


State 959

   64 expression_with_alias: "assume" "name" '=' $@2 expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 64 (expression_with_alias)


State 960

  158 expression_block: '{' expressions '}' "finally" '{' expressions '}' .

    $default  reduce using rule 158 (expression_block)


State 961

   54 expression_else: "else" expression_block .

    $default  reduce using rule 54 (expression_else)


State 962

   55 expression_else: elif_or_static_elif expr . expression_block expression_else
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    '{'    shift, and go to state 282

    expression_block  go to state 987


State 963

  378 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' ';' .

    $default  reduce using rule 378 (struct_variable_declaration_list)


State 964

  375 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . $@21 function_declaration_header ';'

    $default  reduce using rule 374 ($@21)

    $@21  go to state 988


State 965

  377 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override . optional_constant $@22 function_declaration_header expression_block

    "const"  shift, and go to state 989

    $default  reduce using rule 365 (optional_constant)

    optional_constant  go to state 990


State 966

  370 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable . variable_declaration

    "name"  shift, and go to state 297

    variable_declaration         go to state 991
    variable_name_with_pos_list  go to state 497


State 967

  221 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ')'    shift, and go to state 992


State 968

  222 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" . '>' expr ')'

    '>'  shift, and go to state 993


State 969

  210 expr_cast: "cast" '<' $@4 type_declaration '>' $@5 expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 210 (expr_cast)


State 970

  213 expr_cast: "upcast" '<' $@6 type_declaration '>' $@7 expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 213 (expr_cast)


State 971

  216 expr_cast: "reinterpret" '<' $@8 type_declaration '>' $@9 expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 216 (expr_cast)


State 972

  339 expr: "generator" '<' type_declaration '>' optional_capture_list '(' ')' .

    $default  reduce using rule 339 (expr)


State 973

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  340     | "generator" '<' type_declaration '>' optional_capture_list '(' expr . ')'
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ')'    shift, and go to state 994


State 974

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  587 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where ']' ']'

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ';'    shift, and go to state 995

    $default  reduce using rule 585 (array_comprehension_where)

    array_comprehension_where  go to state 996


State 975

  569 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' . ']'

    ']'  shift, and go to state 997


State 976

  568 make_struct_decl: "[[" type_declaration '(' ')' optional_block ']' ']' .

    $default  reduce using rule 568 (make_struct_decl)


State 977

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  561 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 561 (make_struct_fields)


State 978

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  560 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 560 (make_struct_fields)


State 979

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  588 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr . array_comprehension_where '}' ']'

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ';'    shift, and go to state 995

    $default  reduce using rule 585 (array_comprehension_where)

    array_comprehension_where  go to state 998


State 980

  571 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' . ']'

    ']'  shift, and go to state 999


State 981

  276 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 1000


State 982

  279 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' . $@15 name_in_namespace

    $default  reduce using rule 278 ($@15)

    $@15  go to state 1001


State 983

  227 block_or_simple_block: "=>" "<-" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 1002
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 984

  226 block_or_simple_block: "=>" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    ".."  error (nonassociative)

    $default  reduce using rule 226 (block_or_simple_block)


State 985

  345 expr: expr "is" "type" '<' $@18 type_declaration '>' . $@19

    $default  reduce using rule 344 ($@19)

    $@19  go to state 1003


State 986

   59 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list ';' expression_block .

    $default  reduce using rule 59 (expression_for_loop)


State 987

   55 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 913
    "elif"         shift, and go to state 914
    "static_elif"  shift, and go to state 915

    $default  reduce using rule 53 (expression_else)

    elif_or_static_elif  go to state 916
    expression_else      go to state 1004


State 988

  375 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@21 . function_declaration_header ';'

    "operator"  shift, and go to state 187
    "++"        shift, and go to state 188
    "--"        shift, and go to state 189
    "name"      shift, and go to state 190

    function_name                go to state 191
    function_declaration_header  go to state 1005


State 989

  366 optional_constant: "const" .

    $default  reduce using rule 366 (optional_constant)


State 990

  377 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant . $@22 function_declaration_header expression_block

    $default  reduce using rule 376 ($@22)

    $@22  go to state 1006


State 991

  370 structure_variable_declaration: optional_field_annotation optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 370 (structure_variable_declaration)


State 992

  221 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 221 (expr_type_info)


State 993

  222 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' . expr ')'

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 1007
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 994

  340 expr: "generator" '<' type_declaration '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 340 (expr)


State 995

  586 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1008


State 996

  587 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1009


State 997

  569 make_struct_decl: "[[" type_declaration '(' ')' make_struct_dim optional_block ']' ']' .

    $default  reduce using rule 569 (make_struct_decl)


State 998

  588 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where . '}' ']'

    '}'  shift, and go to state 1010


State 999

  571 make_struct_decl: "[{" type_declaration '(' ')' make_struct_dim optional_block '}' ']' .

    $default  reduce using rule 571 (make_struct_decl)


State 1000

  276 func_addr_expr: '@' '@' '<' $@12 type_declaration '>' $@13 name_in_namespace .

    $default  reduce using rule 276 (func_addr_expr)


State 1001

  279 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 . name_in_namespace

    "::"    shift, and go to state 50
    "name"  shift, and go to state 51

    name_in_namespace  go to state 1011


State 1002

  227 block_or_simple_block: "=>" "<-" expr .
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 227 (block_or_simple_block)


State 1003

  345 expr: expr "is" "type" '<' $@18 type_declaration '>' $@19 .

    $default  reduce using rule 345 (expr)


State 1004

   55 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 55 (expression_else)


State 1005

  375 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@21 function_declaration_header . ';'

    ';'  shift, and go to state 1012


State 1006

  377 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@22 . function_declaration_header expression_block

    "operator"  shift, and go to state 187
    "++"        shift, and go to state 188
    "--"        shift, and go to state 189
    "name"      shift, and go to state 190

    function_name                go to state 191
    function_declaration_header  go to state 1013


State 1007

  222 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr . ')'
  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489
    ')'    shift, and go to state 1014


State 1008

  586 array_comprehension_where: ';' "where" . expr

    "true"                            shift, and go to state 320
    "false"                           shift, and go to state 321
    "new"                             shift, and go to state 322
    "typeinfo"                        shift, and go to state 323
    "type"                            shift, and go to state 324
    "null"                            shift, and go to state 325
    "deref"                           shift, and go to state 326
    "cast"                            shift, and go to state 327
    "upcast"                          shift, and go to state 328
    "addr"                            shift, and go to state 329
    "reinterpret"                     shift, and go to state 330
    "unsafe"                          shift, and go to state 331
    "bool"                            shift, and go to state 145
    "void"                            shift, and go to state 146
    "string"                          shift, and go to state 147
    "int"                             shift, and go to state 149
    "int2"                            shift, and go to state 150
    "int3"                            shift, and go to state 151
    "int4"                            shift, and go to state 152
    "uint"                            shift, and go to state 153
    "bitfield"                        shift, and go to state 332
    "uint2"                           shift, and go to state 155
    "uint3"                           shift, and go to state 156
    "uint4"                           shift, and go to state 157
    "float"                           shift, and go to state 158
    "float2"                          shift, and go to state 159
    "float3"                          shift, and go to state 160
    "float4"                          shift, and go to state 161
    "range"                           shift, and go to state 162
    "urange"                          shift, and go to state 163
    "int64"                           shift, and go to state 165
    "uint64"                          shift, and go to state 166
    "double"                          shift, and go to state 167
    "int8"                            shift, and go to state 170
    "uint8"                           shift, and go to state 171
    "int16"                           shift, and go to state 172
    "uint16"                          shift, and go to state 173
    "generator"                       shift, and go to state 333
    "++"                              shift, and go to state 334
    "--"                              shift, and go to state 335
    "::"                              shift, and go to state 50
    "[["                              shift, and go to state 336
    "[{"                              shift, and go to state 337
    "{{"                              shift, and go to state 338
    "integer constant"                shift, and go to state 339
    "long integer constant"           shift, and go to state 340
    "unsigned integer constant"       shift, and go to state 341
    "unsigned long integer constant"  shift, and go to state 342
    "floating point constant"         shift, and go to state 343
    "double constant"                 shift, and go to state 344
    "name"                            shift, and go to state 51
    "start of the string"             shift, and go to state 345
    '-'                               shift, and go to state 346
    '+'                               shift, and go to state 347
    '*'                               shift, and go to state 348
    '%'                               shift, and go to state 349
    '~'                               shift, and go to state 350
    '!'                               shift, and go to state 351
    '('                               shift, and go to state 353
    '$'                               shift, and go to state 354
    '@'                               shift, and go to state 355
    '{'                               shift, and go to state 282

    string_builder          go to state 356
    expr_reader             go to state 357
    expression_block        go to state 358
    name_in_namespace       go to state 359
    expr_new                go to state 360
    expr_cast               go to state 361
    expr_type_decl          go to state 362
    expr_type_info          go to state 363
    block_or_lambda         go to state 364
    expr_block              go to state 365
    expr_numeric_const      go to state 366
    expr_named_call         go to state 367
    expr_method_call        go to state 368
    func_addr_expr          go to state 369
    expr_field              go to state 370
    expr                    go to state 1015
    basic_type_declaration  go to state 372
    make_decl               go to state 373
    make_struct_decl        go to state 374
    make_dim_decl           go to state 375
    make_table_decl         go to state 376
    array_comprehension     go to state 377


State 1009

  587 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1016


State 1010

  588 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' . ']'

    ']'  shift, and go to state 1017


State 1011

  279 func_addr_expr: '@' '@' '<' $@14 optional_function_argument_list optional_function_type '>' $@15 name_in_namespace .

    $default  reduce using rule 279 (func_addr_expr)


State 1012

  375 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" $@21 function_declaration_header ';' .

    $default  reduce using rule 375 (struct_variable_declaration_list)


State 1013

  377 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@22 function_declaration_header . expression_block

    '{'  shift, and go to state 282

    expression_block  go to state 1018


State 1014

  222 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" ';' "name" '>' expr ')' .

    $default  reduce using rule 222 (expr_type_info)


State 1015

  271 expr_method_call: expr . "->" "name" '(' ')'
  272                 | expr . "->" "name" '(' expr_list ')'
  280 expr_field: expr . '.' "name"
  281           | expr . '.' '.' "name"
  284           | expr . '.' $@16 error $@17
  298 expr: expr . "<<" expr
  299     | expr . ">>" expr
  300     | expr . "<<<" expr
  301     | expr . ">>>" expr
  302     | expr . '+' expr
  303     | expr . '-' expr
  304     | expr . '*' expr
  305     | expr . '/' expr
  306     | expr . '%' expr
  307     | expr . '<' expr
  308     | expr . '>' expr
  309     | expr . "==" expr
  310     | expr . "!=" expr
  311     | expr . "<=" expr
  312     | expr . ">=" expr
  313     | expr . '&' expr
  314     | expr . '|' expr
  315     | expr . '^' expr
  316     | expr . "&&" expr
  317     | expr . "||" expr
  318     | expr . "^^" expr
  319     | expr . ".." expr
  322     | expr . "++"
  323     | expr . "--"
  325     | expr . '[' expr ']'
  326     | expr . '.' '[' expr ']'
  327     | expr . "?[" expr ']'
  328     | expr . '.' "?[" expr ']'
  329     | expr . "?." "name"
  330     | expr . '.' "?." "name"
  341     | expr . "??" expr
  342     | expr . '?' expr ':' expr
  345     | expr . "is" "type" '<' $@18 type_declaration '>' $@19
  346     | expr . "is" "name"
  347     | expr . "as" "name"
  348     | expr . '?' "as" "name"
  356     | expr . "<|" expr
  357     | expr . "|>" expr
  586 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 455
    "as"   shift, and go to state 456
    "<<"   shift, and go to state 457
    ">>"   shift, and go to state 458
    "++"   shift, and go to state 459
    "--"   shift, and go to state 460
    "<="   shift, and go to state 461
    ">="   shift, and go to state 462
    "=="   shift, and go to state 463
    "!="   shift, and go to state 464
    "->"   shift, and go to state 465
    "??"   shift, and go to state 466
    "?."   shift, and go to state 467
    "?["   shift, and go to state 468
    "<|"   shift, and go to state 469
    "|>"   shift, and go to state 470
    "<<<"  shift, and go to state 471
    ">>>"  shift, and go to state 472
    "&&"   shift, and go to state 473
    "||"   shift, and go to state 474
    "^^"   shift, and go to state 475
    ".."   shift, and go to state 476
    '?'    shift, and go to state 477
    '|'    shift, and go to state 478
    '^'    shift, and go to state 479
    '&'    shift, and go to state 480
    '<'    shift, and go to state 481
    '>'    shift, and go to state 482
    '-'    shift, and go to state 483
    '+'    shift, and go to state 484
    '*'    shift, and go to state 485
    '/'    shift, and go to state 486
    '%'    shift, and go to state 487
    '.'    shift, and go to state 488
    '['    shift, and go to state 489

    $default  reduce using rule 586 (array_comprehension_where)


State 1016

  587 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where ']' ']' .

    $default  reduce using rule 587 (array_comprehension)


State 1017

  588 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list ';' expr array_comprehension_where '}' ']' .

    $default  reduce using rule 588 (array_comprehension)


State 1018

  377 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_override optional_constant $@22 function_declaration_header expression_block .

    $default  reduce using rule 377 (struct_variable_declaration_list)

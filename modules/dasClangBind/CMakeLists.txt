
SET(PATH_TO_LIBCLANG ${CMAKE_SOURCE_DIR}/../libclang)
IF(NOT IS_DIRECTORY ${PATH_TO_LIBCLANG})
	SET(DAS_LIBCLANG_DETECTED FALSE)
	message(WARNING "can't find libclang at ${PATH_TO_LIBCLANG}")
ELSE()
	IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
		SET(DAS_LIBCLANG_DETECTED FALSE)
		message(WARNING "No libclang on CLANG/WIN for now.")
	ELSE()
		SET(DAS_LIBCLANG_DETECTED TRUE)
	ENDIF()
ENDIF()

IF ((NOT DAS_CLANG_BIND_INCLUDED) AND DAS_LIBCLANG_DETECTED AND ((NOT ${DAS_CLANG_BIND_DISABLED}) OR (NOT DEFINED DAS_CLANG_BIND_DISABLED)))
    SET(DAS_CLANG_BIND_INCLUDED TRUE)
    MESSAGE(STATUS "dasClangBind module included.")

	SET(DAS_CLANG_BIND_DIR ${CMAKE_SOURCE_DIR}/modules/dasClangBind)
	SET(LIBCLANG_INCLUDE ${PATH_TO_LIBCLANG}/include)
	SET(LIBCLANG_LIB ${PATH_TO_LIBCLANG}/lib)

	MESSAGE("LIBCLANG_INCLUDE at ${LIBCLANG_INCLUDE}")
	MESSAGE("LIBCLANG_LIB at ${LIBCLANG_LIB}")

    LIST(APPEND CMAKE_MODULE_PATH ${DAS_CLANG_BIND_DIR})

	# libDasModuleClangBind
	SET(DAS_CLANG_BIND_MODULE_SRC
		${DAS_CLANG_BIND_DIR}/src/dasClangBind.h
		${DAS_CLANG_BIND_DIR}/src/dasClangBind.cpp
	)

	ADD_MODULE_LIB(libDasModuleClangBind)
	ADD_MODULE_CPP(ClangBind)
	# ADD_MODULE_NATIVE(CLANG_BIND_boost)
	ADD_LIBRARY(libDasModuleClangBind ${DAS_CLANG_BIND_MODULE_SRC} ${DAS_CLANG_BIND_MODULE_PLATFORM_SRC})
	TARGET_LINK_LIBRARIES(libDasModuleClangBind ${CLANG_BIND_LIBRARIES} ${LIBCLANG_LIB}/libclang.lib)
	# ADD_DEPENDENCIES(libDasModuleClangBind)
	TARGET_INCLUDE_DIRECTORIES(libDasModuleClangBind PUBLIC ${CLANG_BIND_INCLUDE_DIR} ${LIBCLANG_INCLUDE})

    ADD_MODULE_DAS(cbind cbind cbind_boost)

	SETUP_CPP11(libDasModuleClangBind)
ENDIF()
